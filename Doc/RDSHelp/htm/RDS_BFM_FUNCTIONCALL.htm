<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>А.2.4.6. RDS_BFM_FUNCTIONCALL &ndash; вызов функции блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="app_index.htm">Приложения</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a">Приложение А. Функции, константы и структуры RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_2">А.2. События блока и связанные с ними описания</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_2_4">А.2.4. События общего назначения</a></p>
<div class="level"><p>А.2.4.6. <span class="cpp">RDS_BFM_FUNCTIONCALL</span> &ndash; вызов функции блока</p>
</div>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="RDS_BFM_EDITMODE.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="RDS_BFM_INIT.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:RDS_BFM_FUNCTIONCALL">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Приложения</h1>
<h2 class="off">Приложение А. Функции, константы и структуры RDS</h2>
<h3 class="off">А.2. События блока и связанные с ними описания</h3>
<h4 class="off">А.2.4. События общего назначения</h4>
<h5>А.2.4.6. <span class="cpp">RDS_BFM_FUNCTIONCALL</span> &ndash; вызов функции блока</h5>


<p class="apphdr">Поток, в котором вызывается <a href="app_a_2_1.htm" title="А.2.1. Функция модели блока">функция модели</a></p>
<p>Главный поток RDS или поток расчета (вызов выполняется в одном потоке с моделью вызывающего 
<a href="pm_2_13_1.htm" title="&sect;2.13.1. Общие принципы вызова функций блоков">функцию блока</a>).</p>

<p class="apphdr">Первый параметр функции модели (<span class="cpp">int&nbsp;CallMode</span>)</p>
<p>Константа <span class="cpp">RDS_BFM_FUNCTIONCALL</span>.</p>

<p class="apphdr">Третий параметр функции модели (<span class="cpp">void&nbsp;*ExtParam</span>)</p>
<p>Указатель на структуру <span class="cpp"><a href="#ref1" title="Структура RDS_FUNCTIONCALLDATA">RDS_FUNCTIONCALLDATA</a></span>, в которой содержатся идентификатор вызванной 
функции, ее параметры, а также другая информация, связанная с вызовом.</p>

<p class="apphdr">Возвращаемое функцией модели значение</p>
<p>Возвращенное значение передается вызвавшему функцию блоку, если функция вызвана непосредственно. 
При <a href="pm_2_13_5.htm" title="&sect;2.13.5. Отложенный вызов функций блоков">отложенном вызове</a>
возвращенное значение игнорируется.</p>

<p class="apphdr">Примечания</p>
<p>Вызов функций позволяет блокам передавать друг другу информацию непосредственно, без участия связей или 
динамических переменных (этот механизм подробно рассмотрен в 
<a href="pm_index.htm#light_htm:pm_2_13" title="&sect;2.13. Вызов функций блоков">&sect;2.13 руководства программиста</a>). Функция блока может вызываться как немедленно (выполнение 
функции модели вызвавшего блока приостанавливается до завершения вызванной функции), так и отложенным вызовом 
(выполнение функции модели вызвавшего блока продолжается, а после ее завершения вызывается модель другого блока). 
<span id="ref1">При</span> <span id="ref2">вызове</span>
функции какого-либо блока его модель реагирует на событие <span class="cpp">RDS_BFM_FUNCTIONCALL</span>, 
при этом в третьем параметре функции модели передается указатель на структуру 
<span class="cpp">RDS_FUNCTIONCALLDATA</span>:</p>

<pre class="cpp">  <span class="kw">typedef</span> <span class="kw">struct</span> {
    <span class="kw">int</span> Function;       <span class="rem">// Идентификатор функции</span>
    <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> Data;        <span class="rem">// Параметры функции</span>
    <span class="kw">int</span> Reserved;       <span class="rem">// Зарезервировано</span>
    <a class="hidden" href="app_ids.htm#light_ref1" title="Идентификатор блока">RDS_BHANDLE</a> Caller; <span class="rem">// Вызвавший блок</span>
    <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> Broadcast;     <span class="rem">// Вызов не одного блока, а нескольких</span>
    <span class="kw">int</span> BroadcastCnt;   <span class="rem">// Номер блока среди всех вызванных</span>
    <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> Stop;          <span class="rem">// Прекратить вызов блоков</span>
    <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> Delayed;       <span class="rem">// Отложенный вызов</span>
    <a class="hidden" href="app_ids.htm#light_ref14" title="Беззнаковое целое 32 бита">DWORD</a> DataBufSize;  <span class="rem">// Размер буфера при отложенном вызове</span>
  } <span id="light_ref1">RDS_FUNCTIONCALLDATA</span>;
  <span class="kw">typedef</span> RDS_FUNCTIONCALLDATA *<span id="light_ref2">RDS_PFUNCTIONCALLDATA</span>;</pre>

<p class="apphdr">Поля структуры</p>

<dl>
  <dt><span class="cpp">Function</span>&emsp;(<span class="cpp"><i>int</i></span>)</dt>
  <dd>Уникальный целый идентификатор вызванной функции. Прежде чем функцию блока можно будет вызывать или 
  реагировать на ее вызов, имя этой функции необходимо зарегистрировать вызовом 
  <span class="cpp"><span id="light_ref3"><a href="rdsRegisterFunction.htm" title="А.5.13.12. rdsRegisterFunction &ndash; регистрация функции блока">rdsRegisterFunction</a></span></span>, который даст функции уникальный целый идентификатор. Именно 
  он используется во всех сервисных функциях RDS, и с ним модель блока должна сравнить поле 
  <span class="cpp">Function</span>, чтобы определить, какая именно функция вызвана.</dd>
  
  <dt><span class="cpp">Data</span>&emsp;(<span class="cpp"><i>LPVOID</i></span>)</dt>
  <dd>Указатель (<span class="cpp"><a href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a></span>) на область памяти, в которой находятся параметры вызванной функции. Обычно эту область 
  оформляют в виде структуры или массива. При немедленном (прямом) вызове функции вызванная модель может не 
  только получать какие-либо параметры через эту область памяти, но и возвращать через нее значения, поскольку 
  функция модели вызвавшего блока получит управление обратно только после завершения модели вызванного, и сможет 
  считать данные из этой области памяти. При <a href="pm_2_13_5.htm" title="&sect;2.13.5. Отложенный вызов функций блоков">отложенном вызове</a> 
  функция вызвавшего блока завершится до самого вызова, поэтому в поле <span class="cpp">Data</span> в этом 
  случае передается указатель на созданную RDS копию области памяти, хранящей параметры функции 
  &ndash; модель вызвавшего блока уже не сможет ничего оттуда считать.</dd>

  <dt><span class="cpp">Reserved</span></dt>
  <dd>Значение поля не используется в современных версиях RDS.</dd>

  <dt><span class="cpp">Caller</span>&emsp;(<span class="cpp"><i>RDS_BHANDLE</i></span>)</dt>
  <dd>Идентификатор (<span class="cpp"><a href="app_ids.htm#light_ref1" title="Идентификатор блока">RDS_BHANDLE</a></span>) вызвавшего функцию блока. Модель вызванного блока может 
  использовать его для того чтобы, в свою очередь, вызвать у него какую-либо функцию в ответ.</dd>

  <dt><span class="cpp">Broadcast</span>&emsp;(<span class="cpp"><i>BOOL</i></span>)</dt>
  <dd>Значение <span class="cpp">TRUE</span> в этом поле сигнализирует о том, что данная функция была вызвана 
  <a href="pm_2_13_3.htm" title="&sect;2.13.3. Прямой вызов функции всех блоков подсистемы">сразу у нескольких блоков</a>, значение <span class="cpp">FALSE</span> 
  &ndash; что она вызвана только у данного блока.</dd>

  <dt><span class="cpp">BroadcastCnt</span>&emsp;(<span class="cpp"><i>int</i></span>)</dt>
  <dd>При <span class="cpp">Broadcast==TRUE</span> в этом поле будет находиться порядковый (начинающийся с 
  нуля) номер данного блока среди всех вызванных. Например, если функция вызвана у всех блоков какой-либо 
  подсистемы, и в этой подсистеме находится три блока, при вызове первого из них в <span class="cpp">BroadcastCnt</span>
  будет передан ноль, при вызове второго &ndash; 1, при вызове третьего &ndash; 2.</dd>

  <dt><span class="cpp">Stop</span>&emsp;(<span class="cpp"><i>BOOL</i></span>)</dt>
  <dd>Исходно в этом поле записано значение <span class="cpp">FALSE</span>. При 
  <span class="cpp">Broadcast==TRUE</span> модель вызванного блока может записать в <span class="cpp">Stop</span> 
  значение <span class="cpp">TRUE</span>, запретив тем самым вызов функции для оставшихся блоков. Таким образом 
  можно организовать, например, поиск в подсистеме блока, выполняющего какие-либо действия: можно вызвать функцию 
  у всех блоков подсистемы и написать реакцию на вызов этой функции так, чтобы первый же выполняющий ее блок 
  произвел необходимые действия или сообщил вызвавшему блоку свой идентификатор, а затем прервал дальнейший перебор 
  блоков и вызов их функций, присвоив <span class="cpp">Stop</span> значение <span class="cpp">TRUE</span>.</dd>

  <dt><span class="cpp">Delayed</span>&emsp;(<span class="cpp"><i>BOOL</i></span>)</dt>
  <dd>Значение <span class="cpp">FALSE</span> в этом поле указывает на прямой вызов функции, 
  значение <span class="cpp">TRUE</span> &ndash; на <a href="pm_2_13_5.htm" title="&sect;2.13.5. Отложенный вызов функций блоков">отложенный</a>.</dd>

  <dt><span class="cpp">DataBufSize</span>&emsp;(<span class="cpp"><i>DWORD</i></span>)</dt>
  <dd>При отложенном вызове функции в этом поле передается размер области данных, указатель на которую находится 
  в поле <span class="cpp">Data</span>. Этот размер всегда известен, поскольку размер области данных с параметрами 
  функции передается в сервисные функции, выполняющие отложенный вызов, вместе с указателем на ее начало. 
  RDS делает копию этой области, чтобы после завершения модели вызвавшего функцию блока можно было передать 
  эти данные вызванному.</dd>

</dl>


<p class="apphdr"><span id="light_ref4">Пример</span></p>
<p>Типичный пример непосредственного вызова функции какого-либо блока. Параметры функции передаются в структуре, 
в которой предусмотрено поле для проверки размера. Описание этой структуры должно быть доступно и вызывающей 
функции модели (для вызова), и вызываемой (для реакции).</p>

<pre class="cpp">  <span class="rem">// Структура параметров функции</span>
  <span class="kw">typedef</span> <span class="kw">struct</span> {
    DWORD servSize; <span class="rem">// Размер этой структуры</span>
    <span class="kw">int</span> IParam;     <span class="rem">// Целый параметр</span>
    <span class="kw">double</span> DParam;  <span class="rem">// Вещественный параметр</span>
  } TMyFuncParam;
    ...
  <span class="rem">// Глобальная переменная для идентификатора функции</span>
  <span class="kw">int</span> MyFuncId;
    ...
  <span class="rem">// Регистрация функции блока (например, в </span><a href="DllEntryPoint.htm" title="А.2.2. Главная функция DLL"><span class="rem">главной функции DLL</span></a><span class="rem">)</span>
  MyFuncId=<a class="hidden" href="rdsRegisterFunction.htm" title="А.5.13.12. rdsRegisterFunction &ndash; регистрация функции блока">rdsRegisterFunction</a>(<span class="str">"MyFunctionName"</span>);</pre>

<p class="noindent">Вызов функции блока:</p>

<pre class="cpp">  <a class="hidden" href="app_ids.htm#light_ref1" title="Идентификатор блока">RDS_BHANDLE</a> block=...; <span class="rem">// Идентификатор вызываемого блока</span>
  TMyFuncParam param;    <span class="rem">// Структура параметров функции</span>
  <span class="kw">int</span> retvalue;          <span class="rem">// Результат возврата функции</span>
  param.servSize=<span class="kw">sizeof</span>(param);
  param.IParam=<span class="const">100</span>;
  param.DParam=<span class="const">3.14</span>;
  <span class="rem">// Вызов функции</span>
  retval=<a class="hidden" href="rdsCallBlockFunction.htm" title="А.5.13.7. rdsCallBlockFunction &ndash; прямой вызов функции блока">rdsCallBlockFunction</a>(block,MyFuncId,&amp;param);</pre>

<p class="noindent">Реакция на вызов функции в модели блока:</p>

<pre class="cpp">  TMyFuncParam *pparam;            <span class="rem">// Структура параметров функции</span>
  RDS_PFUNCTIONCALLDATA pfuncdata; <span class="rem">// Данные вызова</span>
  <span class="kw">switch</span>(CallMode)
    { <span class="kw">case</span> RDS_BFM_FUNCTIONCALL:
        pfuncdata=(RDS_PFUNCTIONCALLDATA)ExtParam;
        <span class="kw">if</span>(pfuncdata-&gt;Function==MyFuncId)
          { pparam=(TMyFuncParam*)(pfuncdata-&gt;Data);
            <span class="kw">if</span>(pparam-&gt;servSize==<span class="kw">sizeof</span>(TMyFuncParam))
              { <span class="rem">// Выполнение функции</span>
        ...
              }
          }
        <span class="kw">break</span>;
    }</pre>

<p class="apphdr">См. также</p>
<p class="seealso"><span class="cpp"><a href="RDS_BFM_CHECKFUNCSUPPORT.htm" title="А.2.4.2. RDS_BFM_CHECKFUNCSUPPORT &ndash; проверка поддержки блоком функции с заданным идентификатором">RDS_BFM_CHECKFUNCSUPPORT</a></span>, 
<span class="cpp"><a href="rdsCheckBlockFunctionSupport.htm" title="А.5.13.9. rdsCheckBlockFunctionSupport &ndash; проверка поддержки функции блока">rdsCheckBlockFunctionSupport</a></span>, 
<span class="cpp"><a href="rdsCallBlockFunction.htm" title="А.5.13.7. rdsCallBlockFunction &ndash; прямой вызов функции блока">rdsCallBlockFunction</a></span>, 
<span class="cpp"><a href="rdsQueueCallBlockFunction.htm" title="А.5.13.10. rdsQueueCallBlockFunction &ndash; отложенный вызов функции блока">rdsQueueCallBlockFunction</a></span>, 
<span class="cpp"><a href="rdsBroadcastFunctionCallsEx.htm" title="А.5.13.6. rdsBroadcastFunctionCallsEx &ndash; прямой вызов функции всех блоков подсистемы">rdsBroadcastFunctionCallsEx</a></span>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="RDS_BFM_EDITMODE.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="RDS_BFM_INIT.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:RDS_BFM_FUNCTIONCALL">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
