<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="app_index.htm">Приложения</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a">Приложение А. Функции, константы и структуры RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_2">А.2. События блока и связанные с ними описания</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_2_4">А.2.4. События общего назначения</a></p>
<div class="level"><p>А.2.4.8. <span class="cpp">RDS_BFM_LOADSTATE</span> &ndash; загрузка состояния блока</p>
</div>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="RDS_BFM_INIT.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="RDS_BFM_MODEL.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:RDS_BFM_LOADSTATE">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Приложения</h1>
<h2 class="off">Приложение А. Функции, константы и структуры RDS</h2>
<h3 class="off">А.2. События блока и связанные с ними описания</h3>
<h4 class="off">А.2.4. События общего назначения</h4>
<h5>А.2.4.8. <span class="cpp">RDS_BFM_LOADSTATE</span> &ndash; загрузка состояния блока</h5>


<p class="apphdr">Поток, в котором вызывается <a href="app_a_2_1.htm" title="А.2.1. Функция модели блока">функция модели</a></p>
<p>Главный поток RDS или поток расчета (тот же поток, в котором вызвана сервисная функция загрузки 
состояния блока <span class="cpp"><span id="light_ref1"><a href="rdsLoadSystemState.htm" title="А.5.7.2. rdsLoadSystemState &ndash; загрузить сохраненное состояние">rdsLoadSystemState</a></span></span>).</p>

<p class="apphdr">Первый параметр функции модели (<span class="cpp">int&nbsp;CallMode</span>)</p>
<p>Константа <span class="cpp">RDS_BFM_LOADSTATE</span>.</p>

<p class="apphdr">Третий параметр функции модели (<span class="cpp">void&nbsp;*ExtParam</span>)</p>
<p>Не используется (<span class="cpp">NULL</span>).</p>

<p class="apphdr">Возвращаемое функцией модели значение</p>
<p>Не используется, можно возвращать любое значение.</p>

<p class="apphdr">Примечания</p>
<p>Реакция на событие <span class="cpp">RDS_BFM_LOADSTATE</span> вызывается в процессе работы сервисной функции 
<span class="cpp"><a href="rdsLoadSystemState.htm" title="А.5.7.2. rdsLoadSystemState &ndash; загрузить сохраненное состояние">rdsLoadSystemState</a></span> для восстановления состояния каждого блока, ранее сохраненного функцией 
<span class="cpp"><span id="light_ref2"><a href="rdsSaveSystemState.htm" title="А.5.7.4. rdsSaveSystemState &ndash; сохранить состояние блока/подсистемы">rdsSaveSystemState</a></span></span>. В этой реакции модель должна загрузить из памяти все данные, 
сохраненные в реакции на событие <span class="cpp"><span id="light_ref3"><a href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a></span></span>.</p>

<p>Сохранение и загрузка состояния одного или нескольких блоков используется в RDS для управления расчетом: 
вызовом сервисной функции <span class="cpp">rdsSaveSystemState</span> можно сохранить в памяти текущее состояние 
одного или нескольких блоков, а затем, вызвав <span class="cpp">rdsLoadSystemState</span>, вернуть эти блоки в 
запомненное состояние. Таких сохраненных состояний может быть сколько угодно &ndash; при сохранении каждое получает 
уникальный целый идентификатор, который используется в функции <span class="cpp">rdsLoadSystemState</span> для 
указания конкретного восстанавливаемого состояния. При сохранении состояния значения статических переменных 
блока записываются в память автоматически, а все остальные данные должны быть сохранены моделью при помощи вызова 
<span class="cpp"><span id="light_ref4"><a href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a></span></span> в реакции на событие <span class="cpp">RDS_BFM_SAVESTATE</span>. 
Загрузка сохраненных моделью данных в реакции на событие <span class="cpp">RDS_BFM_LOADSTATE</span> осуществляется 
вызовом <span class="cpp"><span id="light_ref5"><a href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a></span></span>. Сохранение и загрузка состояний блоков и подсистем 
подробно описана в <a href="pm_2_14_3.htm" title="&sect;2.14.3. Сохранение и загрузка состояния блоков">&sect;2.14.3 руководства программиста</a>.</p>

<p class="apphdr"><span id="light_ref6">Пример</span></p>
<p>Пример сохранения и загрузки переменных, хранящихся в личной области данных блока.</p>

<pre class="cpp">  <span class="rem">// Структура </span><a class="hidden" href="pm_1_4.htm#ref8" title="Личная область данных блока"><span class="rem">личной области данных</span></a><span class="rem"> блока</span>
  <span class="kw">typedef</span> <span class="kw">struct</span>
  { <span class="rem">// Переменные состояния</span>
    <span class="kw">int</span> IntState;
    <span class="kw">double</span> DoubleState;
  } TMyBlockData2;
  
  <span class="rem">// Модель блока</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>) <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> <a class="hidden" href="app_a_2_1.htm" title="А.2.1. Функция модели блока">Model2</a>(
    <span class="kw">int</span> CallMode,             <span class="rem">// Событие</span>
    <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData, <span class="rem">// Данные блока</span>
    LPVOID ExtParam)          <span class="rem">// Дополнительные параметры</span>
  { TMyBlockData2 *data=(TMyBlockData*)(BlockData-&gt;BlockData);
    <span class="kw">switch</span>(CallMode)
      {
    ...
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a>:	<span class="rem">// Сохранение состояния</span>
          <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;IntState,<span class="kw">sizeof</span>(IntState));
          <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;DoubleState,<span class="kw">sizeof</span>(DoubleState));
          <span class="kw">break</span>;
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_LOADSTATE.htm" title="А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока">RDS_BFM_LOADSTATE</a>:	<span class="rem">// Загрузка состояния</span>
          <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;IntState,<span class="kw">sizeof</span>(IntState));
          <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;DoubleState,<span class="kw">sizeof</span>(DoubleState));
          <span class="kw">break</span>;
    ...
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  }</pre>

<p class="apphdr">См. также</p>
<p class="seealso"><span class="cpp"><a href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a></span>, 
<span class="cpp"><a href="rdsLoadSystemState.htm" title="А.5.7.2. rdsLoadSystemState &ndash; загрузить сохраненное состояние">rdsLoadSystemState</a></span>, 
<span class="cpp"><a href="rdsDeleteSystemState.htm" title="А.5.7.1. rdsDeleteSystemState &ndash; удалить сохраненное состояние">rdsDeleteSystemState</a></span>, 
<span class="cpp"><a href="rdsSaveSystemState.htm" title="А.5.7.4. rdsSaveSystemState &ndash; сохранить состояние блока/подсистемы">rdsSaveSystemState</a></span>, 
<span class="cpp"><a href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a></span>, 
<span class="cpp"><a href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a></span>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="RDS_BFM_INIT.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="RDS_BFM_MODEL.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:RDS_BFM_LOADSTATE">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
