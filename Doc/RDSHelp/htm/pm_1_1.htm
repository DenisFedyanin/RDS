<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;1.1. Общая структура RDS</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="pm_index.htm">Руководство программиста</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_1">Глава 1. Устройство RDS</a></p>
<div class="level"><p>&sect;1.1. Общая структура RDS</p>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="disbutton">&lt;&lt;</span>
<span class="button"><a href="pm_1_2.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_1_1">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1>Руководство программиста</h1>
<h2>Глава 1. Устройство RDS</h2>
<p class="abstract">В этой главе рассматривается основные принципы работы RDS: модули, из которых состоит приложение, внутреннее устройство блоков схемы, режимы работы, способы взаимодействия блоков с пользователем. Вводятся основные термины, которые будут использованы в следующих главах.</p>
<h3>&sect;1.1. Общая структура RDS</h3>
<p class="abstract">Кратко описывается структура RDS как приложения Windows: перечислены основные папки и файлы приложения.</p>


<p>RDS состоит из основной программы (&laquo;<span class="file">rds.exe</span>&raquo;) и набора библиотек
в
<span id="light_ref1">папке &laquo;<span class="file">Dll\</span>&raquo;</span>,
обеспечивающих работу различных блоков в схемах. Основная программа
позволяет редактировать схемы, обеспечивает вызовы внешних модулей, отвечающих за работу конкретных блоков, а также
содержит большую библиотеку
<span id="light_ref2">сервисных функций</span>,
облегчающих взаимодействие блоков с основной программой и между собой.</p>

<p>Кроме &laquo;<span class="file">rds.exe</span>&raquo; и папки &laquo;<span class="file">Dll\\</span>&raquo; в состав
RDS могут входить:</p>

<ul>
  <li>библиотека &laquo;<span class="file">RdsCtrl.dll</span>&raquo;, позволяющая управлять основной
  программой из других приложений;</li>
  <li><span id="light_ref3">папки &laquo;<span class="file">Panel\</span>&raquo; и &laquo;<span class="file">Library\</span>&raquo;</span>
  &ndash; содержимое панели стандартных блоков и библиотеки стандартных блоков соответственно;</li>
  <li><span id="light_ref4">папка &laquo;<span class="file">Template\</span>&raquo;</span>
  &ndash; набор шаблонов схем и
  <a href="um_3_9_2.htm" title="&sect;3.9.2. Добавление и изменение шаблонов моделей">автокомпилируемых моделей</a>;</li>
  <li><span id="light_ref5">папка &laquo;<span class="file">Models\</span>&raquo;</span>
  &ndash; набор автоматически компилируемых моделей,
  используемых в разных схемах;</li>
  <li>папка &laquo;<span class="file">Include\</span>&raquo;
  &ndash; файлы заголовков для самостоятельного написания
  моделей блоков на языке C/C++;</li>
  <li><span id="light_ref6">папка &laquo;<span class="file">Doc\</span>&raquo;</span> &ndash; папка с документацией и файлами справки RDS.</li>
</ul>

<p>RDS &ndash; однодокументное приложение, то есть в основную программу можно загрузить только одну схему.
Если необходимо работать с несколькими схемами одновременно, следует запустить несколько экземпляров программы.
Основная программа &laquo;<span class="file">rds.exe</span>&raquo; содержит и среду разработки, и большую библиотеку функций,
которые используются моделями блоков для взаимодействия с RDS и между собой. Среда разработки не может быть
отделена от этой библиотеки &ndash; отдельной версии RDS, позволяющей только запускать расчет в заранее
созданных схемах, не существует.</p>

<p>В RDS встроены интерфейсы, позволяющие запускать основную программу из других приложений и управлять ее
действиями: загружать схемы, запускать расчет, обмениваться информацией с блоками. Эти интерфейсы также позволяют
управляющему приложению реагировать на события, произошедшие в RDS (например, на действия пользователя) и
получать сообщения от блоков. RDS не является COM-сервером, все эти интерфейсы реализованы на низком уровне
при помощи Windows API. Их использование может оказаться сложным для программиста, не имевшего ранее дела с
передачей информации между процессами при помощи сообщений, общей памяти и каналов передачи данных (pipes).
<span id="ref7">Чтобы</span>
облегчить программистам жизнь, в состав RDS включена <span id="light_ref7">библиотека
&laquo;<span class="file">RdsCtrl.dll</span>&raquo;</span>, содержащая функции более высокого уровня, обеспечивающие более
удобный обмен данными с RDS. Управляющее приложение может загрузить эту библиотеку и, вызывая ее функции,
управлять RDS, передавать произвольные данные блокам, а также реагировать на события (для такой реакции
приложение может зарегистрировать свои функции обратного вызова, которые будут вызываться при наступлении событий).
Кроме того, если управляющее приложение работает с окнами, оно, используя &laquo;<span class="file">RdsCtrl.dll</span>&raquo;,
может настроить RDS так, что схемы будут изображаться и работать внутри окна управляющей программы. При
этом пользователь может даже не догадываться, что эти схемы на самом деле обслуживаются RDS. Библиотека
&laquo;<span class="file">RdsCtrl.dll</span>&raquo; и ее использование подробно рассмотрено в
<a href="pm_index.htm#light_htm:pm_3" title="Глава 3. Управление RDS из других приложений">главе 3 руководства программиста</a> и в
<a href="app_index.htm#light_htm:app_b" title="Приложение Б. Функции, константы и структуры библиотеки RdsCtrl.dll">приложении Б</a>.</p>

<p><a href="um_index.htm#light_htm:um_2_16" title="&sect;2.16. Создание и редактирование библиотек и вкладок панели блоков">Панель и библиотека стандартных блоков</a>
в RDS организованы как папки и файлы внутри папок &laquo;<span class="file">Panel\</span>&raquo; и &laquo;<span class="file">Library\</span>&raquo;.
Каждая вкладка панели блоков представляет собой папку внутри
&laquo;<span class="file">Panel\</span>&raquo;, имя этой папки является названием вкладки. Подразделы библиотеки блоков тоже
представляют собой папки внутри &laquo;<span class="file">Library\</span>&raquo;, однако, если в панели блоков внутри папок-вкладок
не может быть других папок (на панели могут находиться только блоки), в библиотеке может быть сколько угодно
вложенных подразделов. С каждым блоком библиотеки и панели связано несколько файлов с одинаковым названием и
разными расширениями:</p>

<ul>
  <li><span id="light_ref8">&laquo;<span class="file">.blk</span>&raquo;</span> или
  <span id="light_ref9">&laquo;<span class="file">.rds</span>&raquo;</span> &ndash; собственно описание библиотечного
  блока в стандартном формате RDS. Для простых блоков используется расширение &laquo;<span class="file">.blk</span>&raquo;, для
  подсистем, сохраненных как единый блок &ndash; расширение &laquo;<span class="file">.rds</span>&raquo;.</li>
  <li><span id="light_ref10">&laquo;<span class="file">.bmp</span>&raquo;</span>,
  <span id="light_ref11">&laquo;<span class="file">.ico</span>&raquo;</span>,
  <span id="light_ref12">&laquo;<span class="file">.i16</span>&raquo;</span>,
  <span id="light_ref13">&laquo;<span class="file">.i32</span>&raquo;</span>,
  <span id="light_ref14">&laquo;<span class="file">.b16</span>&raquo;</span>,
  <span id="light_ref15">&laquo;<span class="file">.b32</span>&raquo;</span> &ndash; растровые изображения,
  используемые в качестве значка блока на вкладке панели или в библиотеке. В файлах &laquo;<span class="file">.bmp</span>&raquo;,
  &laquo;<span class="file">.b16</span>&raquo; и
  &laquo;<span class="file">.b32</span>&raquo; находятся изображения в стандартном растровом формате Windows
  (bitmap): в
  &laquo;<span class="file">.b16</span>&raquo; &ndash; 16&times;16 точек (мелкие значки), в
  &laquo;<span class="file">.b32</span>&raquo; &ndash; 32&times;32 (крупные), в
  &laquo;<span class="file">.bmp</span>&raquo; &ndash; любого размера.
  В файлах
  &laquo;<span class="file">.ico</span>&raquo;,
  &laquo;<span class="file">.i16</span>&raquo; и
  &laquo;<span class="file">.i32</span>&raquo; содержатся иконки в стандартном формате Windows &ndash;
  произвольного размера, 16&times;16 и 32&times;32 точки соответственно.
  Значки 16&times;16 используются на панели блоков и в библиотеке в режимах &laquo;мелкие значки&raquo; и
  &laquo;список&raquo;, 32&times;32 &ndash; только в библиотеке и только в режиме &laquo;крупные значки&raquo;.
  Если RDS не может найти в этих файлах значок нужного размера, этот значок будет автоматически сгенерирован
  путем сжатия или растягивания найденного значка, однако, качество изображения при этом, как правило, ухудшается.
  Левая нижняя точка растрового изображения всегда считается прозрачной, поэтому при его выводе все точки того
  же цвета будут заменены на цвет фона. Формат иконки включает в себя маску прозрачности, поэтому цвет левой нижней
  точки в ней не анализируется. Для блока в библиотеке или на панели может быть задан любой набор из указанных
  графических файлов, RDS будет искать среди них подходящий.
  При поиске мелкого значка файлы просматриваются в следующем порядке:
  &laquo;<span class="file">.i16</span>&raquo; &rarr;
  &laquo;<span class="file">.b16</span>&raquo; &rarr;
  &laquo;<span class="file">.ico</span>&raquo; &rarr;
  &laquo;<span class="file">.bmp</span>&raquo;, при поиске крупного &ndash;
  &laquo;<span class="file">.i32</span>&raquo; &rarr;
  &laquo;<span class="file">.b32</span>&raquo; &rarr;
  &laquo;<span class="file">.ico</span>&raquo; &rarr;
  &laquo;<span class="file">.bmp</span>&raquo;.
  Таким образом, если, например, в папке есть файл с расширением
  &laquo;<span class="file">.i16</span>&raquo;, RDS не будет обращаться к файлам
  &laquo;<span class="file">.b16</span>&raquo;,
  &laquo;<span class="file">.ico</span>&raquo; и
  &laquo;<span class="file">.bmp</span>&raquo; при поиске мелкого значка. Подразделы библиотеки блоков тоже могут иметь такие файлы со
  значками &ndash; в этом случае, имя файла должно совпадать с именем папки подраздела.</li>
  <li><span id="light_ref16">&laquo;<span class="file">.txt</span>&raquo;</span> &ndash; текст всплывающей подсказки
  блока, которая выводится при наведении курсора на его изображение на вкладке панели блоков или в окне библиотеки.
  Этот файл может отсутствовать, тогда у блока не будет всплывающей подсказки.</li>
</ul>

<p>При добавлении в схему блока из библиотеки или с панели блоков этому блоку дается имя, соответствующее имени
файла, в котором находится его описание, с добавлением порядкового номера. Например, если блок хранится в файле
&laquo;<span class="file">MyBlock.blk</span>&raquo;, первый добавленный в подсистему блок получит имя &laquo;<span class="rdsvar">MyBlock1</span>&raquo;, второй
&ndash; &laquo;<span class="rdsvar">MyBlock2</span>&raquo;, и т.д.</p>

<p>В библиотеке блоки и подразделы всегда отсортированы в алфавитном порядке: блоки &ndash; по имени файла, а
подразделы &ndash; по имени папки. <span id="ref17">Порядок</span> вкладок на панели блоков и блоков
на каждой вкладке задается
пользователем, поэтому, кроме указанных выше файлов, в папке &laquo;<span class="file">Panel\</span>&raquo; и каждой ее внутренней
папке находится файл &laquo;<span class="file"><span id="light_ref17">order.lst</span></span>&raquo;, в котором в
текстовом виде описан порядок следования блоков на вкладке или вкладок на панели &ndash; по одному имени блока
(вкладки) на каждой строке.</p>

<p>В <span id="light_ref18">папке &laquo;<span class="file">Include\</span>&raquo;</span>
находятся файлы заголовков для написания моделей блоков и других программ, взаимодействующих с RDS, на языке
C или C++. В других языках программирования эти файлы нельзя использовать напрямую, но описания типов и констант,
находящиеся в них, могут помочь в создании таких же описаний на другом языке. Обычно в этой папке находятся
следующие файлы:</p>

<ul>
  <li><span id="light_ref19">&laquo;<span class="file">RdsDef.h</span>&raquo;</span> &ndash; описания типов и
  констант, необходимые как для написания функций моделей блоков, так и для прочих модулей и программ,
  работающих с RDS. Эти описания будут постоянно использоваться в этом руководстве.</li>

  <li><span id="light_ref20">&laquo;<span class="file">RdsFunc.h</span>&raquo;</span> &ndash; макросы для
  быстрого получения доступа ко всем сервисным функциям RDS, то есть функциям, экспортированным из
  rds.exe. Функции моделей блоков можно писать и без использования этого файла, но с ним
  это делать гораздо удобнее &ndash; он автоматизирует получение указателей на все сервисные функции. Включение этого
  файла в программу модели подробно рассмотрено в <a href="pm_2_2.htm" title="&sect;2.2. Главная функция DLL и файлы заголовков">&sect;2.2</a>.</li>

  <li><span id="light_ref21">&laquo;<span class="file">RdsComp.h</span>&raquo;</span> &ndash; описания типов и
  констант, необходимые для создания новых
  <a href="um_1_8.htm" title="&sect;1.8. Автоматическая компиляция моделей блоков">модулей автоматической компиляции</a>
   моделей блоков. Для написания самих
  моделей блоков этот файл не требуется. Создание пользовательских модулей автокомпиляции рассмотрено в
  <a href="pm_index.htm#light_htm:pm_4" title="Глава 4. Создание модулей автоматической компиляции">главе 4</a>.</li>

  <li><span id="light_ref22">&laquo;<span class="file">RdsCtrl.h</span>&raquo;</span> &ndash; описания типов,
  констант и функций, используемых для работы с библиотекой  (ее использование подробно описано в
  <a href="pm_index.htm#light_htm:pm_3" title="Глава 3. Управление RDS из других приложений">главе 3</a>), которая позволяет управлять RDS из другого приложения.</li>

  <li><span id="light_ref23">&laquo;<span class="file">RdsRem.h</span>&raquo;</span> &ndash; описания интерфейсов
  дистанционного управления, которыми пользуется библиотека &laquo;<span class="file">RdsCtrl.dll</span>&raquo; при взаимодействии с RDS. Этот файл
  обычно не нужен для написания программ, работающих с RDS, он может потребоваться программисту, решившему
  написать свою библиотеку вместо &laquo;<span class="file">RdsCtrl.dll</span>&raquo;. Рассмотрение интерфейсов, описанных в этом файле, выходит за
  рамки данного руководства.</li>

  <li><span id="light_ref24">&laquo;<span class="file">CommonAC.hpp</span>&raquo;</span> &ndash; макросы для
  <a href="um_index.htm#light_htm:um_3" title="Глава 3. Использование стандартных модулей автокомпиляции">стандартных модулей автоматической компиляции</a>
  моделей блоков. Эти макросы используются модулями, включенными в состав библиотеки
  &laquo;<span class="file">Common.dll</span>&raquo;. Файл &laquo;<span class="file">CommonAC.hpp</span>&raquo; не нужно включать в программы
  вручную &ndash; модули автокомпиляции включают его автоматически, а для написания моделей без использования
  автокомпиляции он не нужен.</li>

  <li><span id="light_ref25">&laquo;<span class="file">CommonBl.h</span>&raquo;</span> &ndash; типы и имена
  функций блоков и динамических переменных из стандартной библиотеки &laquo;<span class="file">Common.dll</span>&raquo;. Этот файл имеет
  смысл включать в программы моделей, которые будут взаимодействовать с блоками из этой библиотеки.</li>

  <li>Другие файлы заголовков, которые не используются программистом непосредственно. Они подключаются автоматически
  при включении в текст программы перечисленных выше файлов.</li>

</ul>

<p class="noindent">Все эти файлы, кроме &laquo;<span class="file">CommonAC.hpp</span>&raquo;, содержат описания в синтаксисе &laquo;простого&raquo;
C, то есть без использования классов и других дополнений, появившихся в C++. Таким образом, файлы заголовков можно
использовать при написании моделей как на C++, так и на C.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="disbutton">&lt;&lt;</span>
<span class="button"><a href="pm_1_2.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_1_1">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>

