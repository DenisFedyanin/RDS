<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;2.13.2. Прямой вызов функции одного блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="pm_index.htm">Руководство программиста</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_2">Глава 2. Создание моделей блоков</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_2_13">&sect;2.13. Вызов функций блоков</a></p>
<div class="level"><p>&sect;2.13.2. Прямой вызов функции одного блока</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="pm_2_13_1.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_13_3.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_13_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
<div class="right">
<span class="tab"><a href="pm_2_13_2.htm">Текст</a></span>
<span class="curtab">С++</span>
</div>
</div>

<div class="text">

<p>Полный исходный текст на языке C++ для библиотеки (DLL) с моделями блоков,
иллюстрирующих прямой вызов функции одного блока. Библиотека содержит две модели:</p>

<ul>
  <li><span class="cpp">PlusMinus</span> &ndash; модель блока, увеличивающего и уменьшающего
  свой выход по щелчкам мыши и нажатию клавиш (см. <a href="pm_2_12_1.htm#ref2" title="Пример блока, реагирующего на щелчки мыши">&sect;2.12.1</a>,
  теперь к блоку можно подключать поле ввода для точного задания значения);</li>
  <li><span class="cpp">SimpleJoystick</span> &ndash; модель блока, изображающего двухкоординатную рукоятку,
  которую пользователь может перемещать мышью (см. <a href="pm_2_12_2.htm#ref2" title="Пример модели двухкоординатной рукоятки">&sect;2.12.2</a>,
  теперь у блоку можно подключать поля ввода для точного задания координат рукоятки).</li>
</ul>

<p class="noindent">Изменения относительно предыдущих версий этих моделей выделены <span class="changes">цветом</span>.</p>

<pre class="cpp">  <span class="rem">// Прямой вызов функции блока</span>
  <span class="preproc">#include &lt;windows.h&gt;</span>
  <span class="preproc">#include &lt;RdsDef.h&gt;</span>
  <span class="rem">// Подготовка описаний сервисных функций</span>
  <a class="hidden" href="pm_2_2.htm#ref11" title="Использование RdsFunc.h"><span class="preproc">#define RDS_SERV_FUNC_BODY GetInterfaceFunctions</span></a>
  <span class="preproc">#include &lt;RdsFunc.h&gt;</span>

  <span class="rem">//========== </span><a class="hidden" href="pm_2_2.htm" title="&sect;2.2. Главная функция DLL и файлы заголовков"><span class="rem">Главная функция DLL</span></a><span class="rem"> ==========</span>
  <span class="kw">int</span> WINAPI <a class="hidden" href="pm_2_2.htm#ref8" title="Главная функция DLL">DllEntryPoint</a>(<a class="hidden" href="app_ids.htm#light_ref17" title="Дескриптор модуля">HINSTANCE</a> <span class="rem">/*hinst*/</span>,
                           <span class="kw">unsigned</span> <span class="kw">long</span> reason,
                           <span class="kw">void</span>* <span class="rem">/*lpReserved*/</span>)
  { <span class="kw">if</span>(reason==DLL_PROCESS_ATTACH) <span class="rem">// Загрузка DLL</span>
      { <span class="rem">// Получение доступа к функциям RDS</span>
        <span class="kw">if</span>(!GetInterfaceFunctions())
          MessageBox(NULL,<span class="str">"Нет доступа к функциям"</span>,<span class="str">"Ошибка"</span>,MB_OK);
      }
    <span class="kw">return</span> <span class="const">1</span>;
  }
  <span class="rem">//========= Конец главной функции =========</span>

<div class="changes">  <span class="rem">// Глобальная переменная для уникального идентификатора функции</span>
  <span class="rem">// "Common.ControlValueChanged"</span>
  <span class="kw">int</span> ControlValueChangedId=<span class="const">0</span>;</div>
<div class="changes">  <span class="rem">// Функция обратного вызова для "Common.ControlValueChanged"</span>
  <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> ControlValChanged_Callback(
    <a class="hidden" href="RDS_POINTDESCRIPTION.htm#ref2" title="Указатель на RDS_POINTDESCRIPTION">RDS_PPOINTDESCRIPTION</a> <span class="rem">/*src*/</span>,
    <a class="hidden" href="RDS_POINTDESCRIPTION.htm#ref2" title="Указатель на RDS_POINTDESCRIPTION">RDS_PPOINTDESCRIPTION</a> dest,
    <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> <span class="rem">/*data*/</span>)
  { <span class="rem">// Вызов функции "Common.ControlValueChanged" у блока на другом</span>
    <span class="rem">// конце связи</span>
    <a class="hidden" href="rdsCallBlockFunction.htm" title="А.5.13.7. rdsCallBlockFunction &ndash; прямой вызов функции блока">rdsCallBlockFunction</a>(dest-&gt;Block,ControlValueChangedId,NULL);
    <span class="rem">// Возвращаем TRUE – не останавливаем перебор блоков</span>
    <span class="kw">return</span> TRUE;
  }
  <span class="rem">//=========================================</span></div>
<div class="changes">  <span class="rem">// Функция уведомления соседей об изменении значения</span>
  <span class="kw">void</span> ControlValueChangedCall(<a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> *pCancelCall)
  { <span class="rem">// В параметре pCancelCall передается указатель на флаг</span>
    <span class="rem">// блокировки вызова функции</span>
    <span class="kw">if</span>(*pCancelCall) <span class="rem">// Вызов заблокирован</span>
      <span class="kw">return</span>;

    <span class="rem">// Принудительно передаем данные выходов блока, модель которого</span>
    <span class="rem">// сейчас выполняется, по связям</span>
    <a class="hidden" href="rdsActivateOutputConnections.htm" title="А.5.6.1. rdsActivateOutputConnections &ndash; активация выходных связей блока">rdsActivateOutputConnections</a>(NULL,TRUE);

    <span class="rem">// Взводим флаг блокировки перед вызовом функций</span>
    *pCancelCall=TRUE;
    <span class="rem">// Перебираем все простые блоки, соединенные с выходами текущего</span>
    <span class="rem">// (для каждого будет вызвана ControlValChanged_Callback)</span>
    <a class="hidden" href="rdsEnumConnectedBlocks.htm" title="А.5.6.12. rdsEnumConnectedBlocks &ndash; перебрать все соединенные блоки">rdsEnumConnectedBlocks</a>(NULL,
                           <a class="hidden" href="rdsEnumConnectedBlocks.htm#light_ref4" title="RDS_BEN_OUTPUTS">RDS_BEN_OUTPUTS</a> | <a class="hidden" href="rdsEnumConnectedBlocks.htm#light_ref5" title="RDS_BEN_TRACELINKS">RDS_BEN_TRACELINKS</a>,
                           ControlValChanged_Callback,
                           NULL);
    <span class="rem">// Сбрасываем флаг блокировки после вызова функций</span>
    *pCancelCall=FALSE;
  }
  <span class="rem">//=========================================</span></div>

  <span class="rem">//====================================================================</span>
  <span class="rem">// Уменьшающий/увеличивающий выход блок</span>
  <span class="rem">//====================================================================</span>

  <span class="rem">//====== Класс личной области данных ======</span>
  <span class="kw">class</span> TPlusMinusData
  { <span class="kw">public</span>:
      <span class="kw">int</span> KeyPlus;       <span class="rem">// Клавиша увеличения</span>
      <a class="hidden" href="app_ids.htm#light_ref14" title="Беззнаковое целое 32 бита">DWORD</a> ShiftsPlus;  <span class="rem">// и ее флаги</span>
      <span class="kw">int</span> KeyMinus;      <span class="rem">// Клавиша уменьшения</span>
      <a class="hidden" href="app_ids.htm#light_ref14" title="Беззнаковое целое 32 бита">DWORD</a> ShiftsMinus; <span class="rem">// и ее флаги</span>

<div class="changes">      <span class="rem">// Флаг блокировки повторных вызовов</span>
      <span class="rem">// функции "Common.ControlValueChanged"</span>
      <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> NoCall;</div>
      <span class="kw">int</span> Setup(<span class="kw">void</span>);    <span class="rem">// Функция настройки клавиш</span>
      <span class="kw">void</span> SaveBin(<span class="kw">void</span>); <span class="rem">// Сохранение параметров</span>
      <span class="kw">int</span> LoadBin(<span class="kw">void</span>);  <span class="rem">// Загрузка параметров</span>

      <span class="rem">// Конструктор класса</span>
      TPlusMinusData(<span class="kw">void</span>)
        { KeyPlus=ShiftsPlus=KeyMinus=ShiftsMinus=<span class="const">0</span>;
<div class="changes">          NoCall=FALSE; <span class="rem">// Исходно флаг блокировки сброшен</span>
          <span class="kw">if</span>(ControlValueChangedId==<span class="const">0</span>) <span class="rem">// Регистрация функции</span>
            ControlValueChangedId=
                 <a class="hidden" href="rdsRegisterFunction.htm" title="А.5.13.12. rdsRegisterFunction &ndash; регистрация функции блока">rdsRegisterFunction</a>(<span class="str">"Common.ControlValueChanged"</span>);</div>
        };
  };
  <span class="rem">//=========================================</span>

  <span class="rem">// Функция задания клавиш</span>
  <span class="kw">int</span> TPlusMinusData::Setup(<span class="kw">void</span>)
  { <a class="hidden" href="app_ids.htm#light_ref6" title="Идентификатор вспомогательного объекта">RDS_HOBJECT</a> window; <span class="rem">// Идентификатор вспомогательного объекта</span>
    <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> ok;            <span class="rem">// Пользователь нажал "OK"</span>
    <span class="rem">// Создание окна</span>
    window=<a class="hidden" href="rdsFORMCreate.htm" title="А.5.28.1. rdsFORMCreate &ndash; создать объект для работы с окном">rdsFORMCreate</a>(FALSE,-<span class="const">1</span>,-<span class="const">1</span>,<span class="str">"Плюс/минус"</span>);
    <span class="rem">// Добавление полей ввода</span>
    <a class="hidden" href="rdsFORMAddEdit.htm" title="А.5.28.2. rdsFORMAddEdit &ndash; добавить поле ввода">rdsFORMAddEdit</a>(window,<span class="const">0</span>,<span class="const">1</span>,<a class="hidden" href="app_a_fields.htm#light_ref10" title="RDS_FORMCTRL_HOTKEY">RDS_FORMCTRL_HOTKEY</a>,
                   <span class="str">"Клавиша увеличения:"</span>,<span class="const">80</span>);
    <a class="hidden" href="rdsFORMAddEdit.htm" title="А.5.28.2. rdsFORMAddEdit &ndash; добавить поле ввода">rdsFORMAddEdit</a>(window,<span class="const">0</span>,<span class="const">2</span>,<a class="hidden" href="app_a_fields.htm#light_ref10" title="RDS_FORMCTRL_HOTKEY">RDS_FORMCTRL_HOTKEY</a>,
                   <span class="str">"Клавиша уменьшения:"</span>,<span class="const">80</span>);
    <span class="rem">// Занесение исходных значений кодов клавиш в поля ввода</span>
    <a class="hidden" href="rdsSetObjectInt.htm" title="А.5.22.11. rdsSetObjectInt &ndash; установить целое число">rdsSetObjectInt</a>(window,<span class="const">1</span>,<a class="hidden" href="RDS_FORMVAL_VALUE.htm" title="А.5.28.27. Команда RDS_FORMVAL_VALUE &ndash; значение поля">RDS_FORMVAL_VALUE</a>,KeyPlus);
    <a class="hidden" href="rdsSetObjectInt.htm" title="А.5.22.11. rdsSetObjectInt &ndash; установить целое число">rdsSetObjectInt</a>(window,<span class="const">1</span>,<a class="hidden" href="RDS_FORMVAL_HKSHIFTS.htm" title="А.5.28.16. Команда RDS_FORMVAL_HKSHIFTS &ndash; состояние Ctrl, Alt и Shift в поле ввода кода клавиши">RDS_FORMVAL_HKSHIFTS</a>,ShiftsPlus);
    <a class="hidden" href="rdsSetObjectInt.htm" title="А.5.22.11. rdsSetObjectInt &ndash; установить целое число">rdsSetObjectInt</a>(window,<span class="const">2</span>,<a class="hidden" href="RDS_FORMVAL_VALUE.htm" title="А.5.28.27. Команда RDS_FORMVAL_VALUE &ndash; значение поля">RDS_FORMVAL_VALUE</a>,KeyMinus);
    <a class="hidden" href="rdsSetObjectInt.htm" title="А.5.22.11. rdsSetObjectInt &ndash; установить целое число">rdsSetObjectInt</a>(window,<span class="const">2</span>,<a class="hidden" href="RDS_FORMVAL_HKSHIFTS.htm" title="А.5.28.16. Команда RDS_FORMVAL_HKSHIFTS &ndash; состояние Ctrl, Alt и Shift в поле ввода кода клавиши">RDS_FORMVAL_HKSHIFTS</a>,ShiftsMinus);
    <span class="rem">// Открытие окна</span>
    ok=<a class="hidden" href="rdsFORMShowModalEx.htm" title="А.5.28.6. rdsFORMShowModalEx &ndash; открыть окно с функцией обратного вызова">rdsFORMShowModalEx</a>(window,NULL);
    <span class="kw">if</span>(ok)
      { <span class="rem">// Нажата кнопка OK - запись кодов клавиш в класс</span>
        KeyPlus=<a class="hidden" href="rdsGetObjectInt.htm" title="А.5.22.8. rdsGetObjectInt &ndash; получить целое число">rdsGetObjectInt</a>(window,<span class="const">1</span>,<a class="hidden" href="RDS_FORMVAL_VALUE.htm" title="А.5.28.27. Команда RDS_FORMVAL_VALUE &ndash; значение поля">RDS_FORMVAL_VALUE</a>);
        ShiftsPlus=<a class="hidden" href="rdsGetObjectInt.htm" title="А.5.22.8. rdsGetObjectInt &ndash; получить целое число">rdsGetObjectInt</a>(window,<span class="const">1</span>,<a class="hidden" href="RDS_FORMVAL_HKSHIFTS.htm" title="А.5.28.16. Команда RDS_FORMVAL_HKSHIFTS &ndash; состояние Ctrl, Alt и Shift в поле ввода кода клавиши">RDS_FORMVAL_HKSHIFTS</a>);
        KeyMinus=<a class="hidden" href="rdsGetObjectInt.htm" title="А.5.22.8. rdsGetObjectInt &ndash; получить целое число">rdsGetObjectInt</a>(window,<span class="const">2</span>,<a class="hidden" href="RDS_FORMVAL_VALUE.htm" title="А.5.28.27. Команда RDS_FORMVAL_VALUE &ndash; значение поля">RDS_FORMVAL_VALUE</a>);
        ShiftsMinus=<a class="hidden" href="rdsGetObjectInt.htm" title="А.5.22.8. rdsGetObjectInt &ndash; получить целое число">rdsGetObjectInt</a>(window,<span class="const">2</span>,<a class="hidden" href="RDS_FORMVAL_HKSHIFTS.htm" title="А.5.28.16. Команда RDS_FORMVAL_HKSHIFTS &ndash; состояние Ctrl, Alt и Shift в поле ввода кода клавиши">RDS_FORMVAL_HKSHIFTS</a>);
      }
    <span class="rem">// Уничтожение окна</span>
    <a class="hidden" href="rdsDeleteObject.htm" title="А.5.22.4. rdsDeleteObject &ndash; удалить объект">rdsDeleteObject</a>(window);
    <span class="rem">// Возвращаемое значение</span>
    <span class="kw">return</span> ok?<a class="hidden" href="RDS_BFM_SETUP.htm#light_ref1" title="RDS_BFR_MODIFIED">RDS_BFR_MODIFIED</a>:<a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Сохранение параметров</span>
  <span class="kw">void</span> TPlusMinusData::SaveBin(<span class="kw">void</span>)
  { <a class="hidden" href="app_ids.htm#light_ref12" title="Однобайтовая переменная">BYTE</a> tag; <span class="rem">// Переменная для байта тега</span>

    tag=<span class="const">1</span>; <span class="rem">// Тег 1 - клавиша увеличения</span>
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;tag,<span class="kw">sizeof</span>(tag));
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;KeyPlus,<span class="kw">sizeof</span>(KeyPlus));
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;ShiftsPlus,<span class="kw">sizeof</span>(ShiftsPlus));

    tag=<span class="const">2</span>; <span class="rem">// Тег 2 - клавиша уменьшения</span>
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;tag,<span class="kw">sizeof</span>(tag));
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;KeyMinus,<span class="kw">sizeof</span>(KeyMinus));
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;ShiftsMinus,<span class="kw">sizeof</span>(ShiftsMinus));

    tag=<span class="const">0</span>; <span class="rem">// Тег 0 - конец данных</span>
    <a class="hidden" href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a>(&amp;tag,<span class="kw">sizeof</span>(tag));
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Загрузка параметров</span>
  <span class="kw">int</span> TPlusMinusData::LoadBin(<span class="kw">void</span>)
  { <a class="hidden" href="app_ids.htm#light_ref12" title="Однобайтовая переменная">BYTE</a> tag;

    <span class="kw">for</span>(;;) <span class="rem">// Цикл до тех пор, пока данные не кончатся</span>
      { <span class="rem">// Читаем байт тега</span>
        <span class="kw">if</span>(!<a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;tag,<span class="kw">sizeof</span>(tag)))
          <span class="kw">break</span>; <span class="rem">// Тег не считан - данные кончились</span>
        <span class="rem">// Анализируем считанный тег</span>
        <span class="kw">switch</span>(tag)
          { <span class="kw">case</span> <span class="const">0</span>: <span class="rem">// Конец данных блока</span>
              <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>; <span class="rem">// Загрузка успешно завершена</span>
            <span class="kw">case</span> <span class="const">1</span>: <span class="rem">// Данные клавиши увеличения</span>
              <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;KeyPlus,<span class="kw">sizeof</span>(KeyPlus));
              <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;ShiftsPlus,<span class="kw">sizeof</span>(ShiftsPlus));
              <span class="kw">break</span>;
            <span class="kw">case</span> <span class="const">2</span>: <span class="rem">// Данные клавиши уменьшения</span>
              <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;KeyMinus,<span class="kw">sizeof</span>(KeyMinus));
              <a class="hidden" href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a>(&amp;ShiftsMinus,<span class="kw">sizeof</span>(ShiftsMinus));
              <span class="kw">break</span>;
            <span class="kw">default</span>: <span class="rem">// Неопознанный тег</span>
              <span class="kw">return</span> RDS_BFR_ERROR; <span class="rem">// Сообщаем RDS об ошибке</span>
          }
      }
    <span class="rem">// Данные кончились до тега 0 - сообщаем об ошибке</span>
    <span class="kw">return</span> RDS_BFR_ERROR;
  }
  <span class="rem">//=========================================</span>


  <span class="rem">// Увеличение/уменьшение значения по щелчку и клавишам</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> PlusMinus(<span class="kw">int</span> CallMode,
                      <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
                      <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  {
  <span class="rem">// </span><a class="hidden" href="pm_2_5_1.htm#light_ref9" title="Макросы для статических переменных блока"><span class="rem">Макроопределения для статических переменных</span></a>
  <span class="preproc">#define pStart ((char *)(BlockData-&gt;VarData))</span>
  <span class="preproc">#define Start  (*((char *)(pStart)))</span>
  <span class="preproc">#define Ready  (*((char *)(pStart+1)))</span>
  <span class="preproc">#define v      (*((int *)(pStart+2)))</span>
<span class="changes">  <span class="preproc">#define input  (*((int *)(pStart+6)))  </span></span>

    <span class="rem">// Вспомогательная — указатель на структуру события мыши</span>
    <a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a> mouse;
    <span class="rem">// Вспомогательная — указатель на структуру события клавиатуры</span>
    <a class="hidden" href="RDS_BFM_KEYDOWN.htm#ref3" title="Указатель на RDS_KEYDATA">RDS_PKEYDATA</a> key;
    <span class="rem">// Указатель на личную область данных блока,приведенный к</span>
    <span class="rem">// правильному типу</span>
    TPlusMinusData *data=(TPlusMinusData*)(BlockData-&gt;BlockData);

    <span class="kw">switch</span>(CallMode)
      { <span class="rem">// Проверка типа статических переменных</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a>:
          <span class="kw">return</span> strcmp((<span class="kw">char</span>*)ExtParam,<span class="str">"{SSII}"</span>)?
            <a class="hidden" href="RDS_BFM_VARCHECK.htm#light_ref3" title="Возврат RDS_BFR_BADVARSMSG">RDS_BFR_BADVARSMSG</a>:<a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;

        <span class="rem">// Реакция на нажатие кнопки мыши</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MOUSEDOWN.htm" title="А.2.6.9. RDS_BFM_MOUSEDOWN &ndash; нажатие кнопки мыши">RDS_BFM_MOUSEDOWN</a>:
          <span class="rem">// Приведение ExtParam к нужному типу</span>
          mouse=(<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a>)ExtParam;
          <span class="kw">if</span>(mouse-&gt;Button==<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#light_ref4" title="RDS_MLEFTBUTTON">RDS_MLEFTBUTTON</a>)
            { <span class="rem">// Нажата левая кнопка</span>
              <span class="rem">// Проверяем, есть ли у блока картинка (получаем описание блока)</span>
              <a class="hidden" href="RDS_BLOCKDESCRIPTION.htm#ref1" title="Структура RDS_BLOCKDESCRIPTION">RDS_BLOCKDESCRIPTION</a> descr;
              descr.servSize=<span class="kw">sizeof</span>(descr);
              <a class="hidden" href="rdsGetBlockDescription.htm" title="А.5.6.16. rdsGetBlockDescription &ndash; получить описание блока">rdsGetBlockDescription</a>(BlockData-&gt;Block,&amp;descr);
              <span class="kw">if</span>(descr.Flags &amp; <a class="hidden" href="RDS_BLOCKDESCRIPTION.htm#light_ref15" title="RDS_BDF_HASPICTURE">RDS_BDF_HASPICTURE</a>)
                { <span class="rem">// Картинка есть – определяем идентификатор</span>
                  <span class="rem">// элемента под курсором</span>
                  <span class="kw">int</span> id=<a class="hidden" href="rdsGetMouseObjectId.htm" title="А.5.6.31. rdsGetMouseObjectId &ndash; элемент векторной картинки блока под курсором мыши">rdsGetMouseObjectId</a>(mouse);
                  v+=id;
                }
              <span class="kw">else</span> <span class="kw">if</span>(mouse-&gt;y&lt;mouse-&gt;Top+mouse-&gt;Height/<span class="const">2</span>)
                v++; <span class="rem">// В верхней половине блока - увеличиваем</span>
              <span class="kw">else</span>
                v--; <span class="rem">// В нижней половине блока — уменьшаем</span>
              <span class="rem">// Взводим сигнал готовности</span>
              Ready=<span class="const">1</span>;
<div class="changes">              <span class="rem">// Принудительно передаем в соседние блоки</span>
              ControlValueChangedCall(&amp;(data-&gt;NoCall));</div>
            }
          <span class="kw">break</span>;

        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a>: <span class="rem">// Инициализация</span>
          BlockData-&gt;BlockData=<span class="kw">new</span> TPlusMinusData();
          <span class="kw">break</span>;
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_CLEANUP.htm" title="А.2.4.3. RDS_BFM_CLEANUP &ndash; очистка данных блока">RDS_BFM_CLEANUP</a>:<span class="rem">// Очистка данных</span>
          <span class="kw">delete</span> data;
          <span class="kw">break</span>;
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_SETUP.htm" title="А.2.6.13. RDS_BFM_SETUP &ndash; вызов функции настройки блока">RDS_BFM_SETUP</a>: <span class="rem">// Настройка параметров</span>
          <span class="kw">return</span> data-&gt;Setup();
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_SAVEBIN.htm" title="А.2.5.6. RDS_BFM_SAVEBIN &ndash; запись данных блока в двоичном формате">RDS_BFM_SAVEBIN</a>:<span class="rem">// Сохранение параметров</span>
          data-&gt;SaveBin();
          <span class="kw">break</span>;
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_LOADBIN.htm" title="А.2.5.4. RDS_BFM_LOADBIN &ndash; загрузка данных блока в двоичном формате">RDS_BFM_LOADBIN</a>:<span class="rem">// Загрузка параметров</span>
          <span class="kw">return</span> data-&gt;LoadBin();

        <span class="rem">// Реакция на нажатие клавиши</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_KEYDOWN.htm" title="А.2.6.5. RDS_BFM_KEYDOWN &ndash; нажатие клавиши">RDS_BFM_KEYDOWN</a>:
          <span class="rem">// Приведение ExtParam к нужному типу</span>
          key=(<a class="hidden" href="RDS_BFM_KEYDOWN.htm#ref3" title="Указатель на RDS_KEYDATA">RDS_PKEYDATA</a>)ExtParam;
          <span class="rem">// Сравнение нажатой клавиши с клавишами уменьшения</span>
          <span class="rem">// и увеличения</span>
          <span class="kw">if</span>(key-&gt;KeyCode==data-&gt;KeyPlus &amp;&amp;
             key-&gt;Shift==data-&gt;ShiftsPlus)
            { v++; Ready=<span class="const">1</span>; }
          <span class="kw">else</span> <span class="kw">if</span>(key-&gt;KeyCode==data-&gt;KeyMinus &amp;&amp;
                  key-&gt;Shift==data-&gt;ShiftsMinus)
            { v--; Ready=<span class="const">1</span>; }
<div class="changes">          <span class="rem">// Принудительно передаем в соседние блоки</span>
          <span class="kw">if</span>(Ready)
            ControlValueChangedCall(&amp;(data-&gt;NoCall));</div>
          <span class="kw">break</span>;

<div class="changes">        <span class="rem">// Такт расчета</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a>:
          <span class="kw">if</span>(v==input) <span class="rem">// Новое значение равно старому</span>
            { Ready=<span class="const">0</span>; <span class="rem">// Не передаем по связям</span>
              <span class="kw">break</span>;
            }
          v=input; <span class="rem">// Передаем значение входа на выход</span>
          <span class="rem">// Принудительно передаем в соседние блоки</span>
          ControlValueChangedCall(&amp;(data-&gt;NoCall));
          <span class="kw">break</span>;</div>
<div class="changes">        <span class="rem">// Реакция на вызов функции блока</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm" title="А.2.4.6. RDS_BFM_FUNCTIONCALL &ndash; вызов функции блока">RDS_BFM_FUNCTIONCALL</a>:
          <span class="kw">if</span>(((<a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm#ref2" title="Указатель на RDS_FUNCTIONCALLDATA">RDS_PFUNCTIONCALLDATA</a>)ExtParam)-&gt;Function==
                                     ControlValueChangedId)
            { <span class="rem">// Вызвана"Common.ControlValueChanged"</span>
              <span class="kw">if</span>(data-&gt;NoCall) <span class="rem">// Взведен флаг блокировки</span>
                <span class="kw">break</span>;
              <span class="kw">if</span>(v==input) <span class="rem">// Новое значение равно старому -</span>
                <span class="kw">break</span>;     <span class="rem">// передавать не нужно</span>
              v=input; <span class="rem">// Передаем значение входа на выход</span>
              Ready=<span class="const">1</span>; <span class="rem">// Взводим сигнал готовности</span>
              <span class="rem">// Принудительно передаем в соседние блоки</span>
              ControlValueChangedCall(&amp;(data-&gt;NoCall));
            }
          <span class="kw">break</span>;</div>
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  <span class="rem">// Отмена макроопределений</span>
<span class="changes">  <span class="preproc">#undef input  </span></span>
  <span class="preproc">#undef v</span>
  <span class="preproc">#undef Ready</span>
  <span class="preproc">#undef Start</span>
  <span class="preproc">#undef pStart</span>
  }
  <span class="rem">//=========================================</span>


  <span class="rem">//============================================================================</span>
  <span class="rem">// Двухкоординатная рукоятка</span>
  <span class="rem">//============================================================================</span>

  <span class="rem">//====== Класс личной области данных ======</span>
  <span class="kw">class</span> TSimpleJoystick
  { <span class="kw">private</span>:
      <span class="rem">// Центр круга (рукоятки) до начала перетаскивания</span>
      <span class="kw">int</span> OldHandleX,OldHandleY;
      <span class="rem">// Координаты курсора на момент начала перетаскивания</span>
      <span class="kw">int</span> OldMouseX,OldMouseY;
      <span class="rem">// Флаги фиксации одной из координат</span>
      <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> LockX,LockY;
      <span class="rem">// Идентификаторы добавленных пунктов меню</span>
      <a class="hidden" href="app_ids.htm#light_ref4" title="Идентификатор пункта меню">RDS_MENUITEM</a> MenuLockX,MenuLockY;
    <span class="kw">public</span>:
      <span class="rem">// Настроечные параметры блока</span>
      <a class="hidden" href="app_ids.htm#light_ref13" title="Цвет Windows API">COLORREF</a> BorderColor;       <span class="rem">// Цвет рамки блока</span>
      <a class="hidden" href="app_ids.htm#light_ref13" title="Цвет Windows API">COLORREF</a> FieldColor;        <span class="rem">// Цвет прямоугольника</span>
      <a class="hidden" href="app_ids.htm#light_ref13" title="Цвет Windows API">COLORREF</a> HandleColor;       <span class="rem">// Цвет круга в покое</span>
      <a class="hidden" href="app_ids.htm#light_ref13" title="Цвет Windows API">COLORREF</a> MovingHandleColor; <span class="rem">// Цвет круга при таскании</span>
      <a class="hidden" href="app_ids.htm#light_ref13" title="Цвет Windows API">COLORREF</a> GrayedColor;       <span class="rem">// Цвет недоступной области</span>
      <span class="kw">int</span> HandleSize;             <span class="rem">// Диаметр круга</span>

<div class="changes">      <span class="rem">// Флаг блокировки повторных вызовов</span>
      <span class="rem">// функции "Common.ControlValueChanged"</span>
      <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> NoCall;</div>
      <span class="rem">// Реакция на нажатие кнопки мыши</span>
      <span class="kw">int</span> MouseDown(<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a> mouse,<span class="kw">double</span> x,<span class="kw">double</span> y,<a class="hidden" href="app_ids.htm#light_ref14" title="Беззнаковое целое 32 бита">DWORD</a> *pFlags);
      <span class="rem">// Реакция на перемещение курсора мыши</span>
      <span class="kw">void</span> MouseMove(<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a> mouse,<span class="kw">double</span> *px,<span class="kw">double</span> *py);
      <span class="rem">// Рисование изображения блока</span>
      <span class="kw">void</span> Draw(<a class="hidden" href="RDS_BFM_DRAW.htm#ref2" title="Указатель на RDS_DRAWDATA">RDS_PDRAWDATA</a> draw,<span class="kw">double</span> x,<span class="kw">double</span> y,<a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> moving);
      <span class="rem">// Реакция на выбор добавленного пункта меню</span>
      <span class="kw">void</span> MenuFunction(<a class="hidden" href="RDS_BFM_MENUFUNCTION.htm#ref2" title="Указатель на RDS_MENUFUNCDATA">RDS_PMENUFUNCDATA</a> MenuData);
      <span class="rem">// Реакция на изменение размеров блока</span>
      <span class="kw">void</span> Resizing(<a class="hidden" href="RDS_BFM_RESIZE.htm#ref3" title="Указатель на RDS_RESIZEDATA">RDS_PRESIZEDATA</a> ResData);
<div class="changes">      <span class="rem">// Ограничение входных значений</span>
      <span class="kw">void</span> LimitInputValues(<span class="kw">double</span> *px_in,<span class="kw">double</span> *py_in,<span class="kw">double</span> x,<span class="kw">double</span> y);</div>
      <span class="rem">// Конструктор класса</span>
      TSimpleJoystick(<span class="kw">void</span>)
        { BorderColor=<span class="const">0</span>;          <span class="rem">// Черная рамка</span>
          FieldColor=<span class="const">0xffffff</span>;    <span class="rem">// Белое поле</span>
          HandleColor=<span class="const">0xff0000</span>;   <span class="rem">// Синий круг</span>
          MovingHandleColor=<span class="const">0xff</span>; <span class="rem">// Красный при таскании</span>
          HandleSize=<span class="const">20</span>;          <span class="rem">// Диаметр круга</span>
          GrayedColor=<span class="const">0x7f7f7f</span>;   <span class="rem">// Серый</span>
          LockX=LockY=FALSE;      <span class="rem">// Фиксация выключена</span>
          <span class="rem">// Создание пунктов меню</span>
          MenuLockX=<a class="hidden" href="rdsRegisterContextMenuItem.htm" title="А.5.17.6. rdsRegisterContextMenuItem &ndash; создать постоянный пункт контекстного меню блока">rdsRegisterContextMenuItem</a>(<span class="str">"Фиксировать X"</span>,<span class="const">1</span>,<span class="const">0</span>);
          MenuLockY=<a class="hidden" href="rdsRegisterContextMenuItem.htm" title="А.5.17.6. rdsRegisterContextMenuItem &ndash; создать постоянный пункт контекстного меню блока">rdsRegisterContextMenuItem</a>(<span class="str">"Фиксировать Y"</span>,<span class="const">2</span>,<span class="const">0</span>);

<div class="changes">          NoCall=FALSE; <span class="rem">// Исходно флаг блокировки сброшен</span>
          <span class="kw">if</span>(ControlValueChangedId==<span class="const">0</span>) <span class="rem">// Регистрация функции</span>
            ControlValueChangedId=
                 <a class="hidden" href="rdsRegisterFunction.htm" title="А.5.13.12. rdsRegisterFunction &ndash; регистрация функции блока">rdsRegisterFunction</a>(<span class="str">"Common.ControlValueChanged"</span>);</div>
        };
      <span class="rem">// Деструктор класса</span>
      ~TSimpleJoystick()
        { <span class="rem">// Уничтожение пунктов меню</span>
          <a class="hidden" href="rdsUnregisterMenuItem.htm" title="А.5.17.10. rdsUnregisterMenuItem &ndash; удалить постоянный пункт меню">rdsUnregisterMenuItem</a>(MenuLockX);
          <a class="hidden" href="rdsUnregisterMenuItem.htm" title="А.5.17.10. rdsUnregisterMenuItem &ndash; удалить постоянный пункт меню">rdsUnregisterMenuItem</a>(MenuLockY);
        };
  };
  <span class="rem">//=========================================</span>

  <span class="rem">// Рисование изображения блока</span>
  <span class="kw">void</span> TSimpleJoystick::Draw(<a class="hidden" href="RDS_BFM_DRAW.htm#ref2" title="Указатель на RDS_DRAWDATA">RDS_PDRAWDATA</a> draw,
                             <span class="kw">double</span> x,<span class="kw">double</span> y,BOOL moving)
  { <span class="kw">int</span> hx,hy,cx,cy;
    <a class="hidden" href="app_ids.htm#light_ref23" title="Координаты прямоугольника в Windows API">RECT</a> r;
    <span class="kw">int</span> hR=HandleSize*draw-&gt;DoubleZoom/<span class="const">2</span>; <span class="rem">// Радиус круга-рукоятки</span>

    <span class="rem">// Если размер блока - нулевой, рисовать негде</span>
    <span class="kw">if</span>(draw-&gt;Height==<span class="const">0</span> || draw-&gt;Width==<span class="const">0</span>)
      <span class="kw">return</span>;

    <span class="rem">// Рисование поля блока</span>
    <a class="hidden" href="rdsXGSetPenStyle.htm" title="А.5.18.25. rdsXGSetPenStyle &ndash; установить стиль линии">rdsXGSetPenStyle</a>(<span class="const">0</span>,<a class="hidden" href="rdsXGSetPenStyle.htm#light_ref12" title="PS_SOLID">PS_SOLID</a>,<span class="const">1</span>,BorderColor,<a class="hidden" href="rdsXGSetPenStyle.htm#light_ref18" title="R2_COPYPEN">R2_COPYPEN</a>);
    <a class="hidden" href="rdsXGSetBrushStyle.htm" title="А.5.18.20. rdsXGSetBrushStyle &ndash; установить стиль заливки">rdsXGSetBrushStyle</a>(<span class="const">0</span>,<a class="hidden" href="rdsXGSetBrushStyle.htm#light_ref6" title="RDS_GFS_SOLID">RDS_GFS_SOLID</a>,FieldColor);
    <a class="hidden" href="rdsXGRectangle.htm" title="А.5.18.18. rdsXGRectangle &ndash; прямоугольник">rdsXGRectangle</a>(draw-&gt;Left,draw-&gt;Top,
      draw-&gt;Left+draw-&gt;Width,draw-&gt;Top+draw-&gt;Height);

    <span class="rem">// Вычисление центра прямоугольника блока</span>
    cx=draw-&gt;Left+draw-&gt;Width/<span class="const">2</span>;
    cy=draw-&gt;Top+draw-&gt;Height/<span class="const">2</span>;

    <span class="rem">// Вычисление координат центра круга-рукоятки</span>
    hx=cx+x*draw-&gt;Width/<span class="const">2</span>;
    hy=cy-y*draw-&gt;Height/<span class="const">2</span>;

    <span class="rem">// Установка области отсечения</span>
    r.left=draw-&gt;Left+<span class="const">1</span>;
    r.top=draw-&gt;Top+<span class="const">1</span>;
    r.right=draw-&gt;Left+draw-&gt;Width-<span class="const">1</span>;
    r.bottom=draw-&gt;Top+draw-&gt;Height-<span class="const">1</span>;
    <a class="hidden" href="rdsXGSetClipRect.htm" title="А.5.18.21. rdsXGSetClipRect &ndash; установить область отсечения">rdsXGSetClipRect</a>(&amp;r);

    <span class="rem">// Рисование ограничений</span>
    <span class="kw">if</span>(LockX||LockY) <span class="rem">// Фиксируется одна из координат</span>
      { <span class="rem">// Установка серого цвета заливки</span>
        <a class="hidden" href="rdsXGSetBrushStyle.htm" title="А.5.18.20. rdsXGSetBrushStyle &ndash; установить стиль заливки">rdsXGSetBrushStyle</a>(<span class="const">0</span>,<a class="hidden" href="rdsXGSetBrushStyle.htm#light_ref6" title="RDS_GFS_SOLID">RDS_GFS_SOLID</a>,GrayedColor);
        <span class="kw">if</span>(LockX) <span class="rem">// Фиксируется X</span>
          { <a class="hidden" href="rdsXGFillRect.htm" title="А.5.18.7. rdsXGFillRect &ndash; заполненный прямоугольник">rdsXGFillRect</a>(r.left,r.top,hx-hR,r.bottom);	<span class="rem">// Слева</span>
            <a class="hidden" href="rdsXGFillRect.htm" title="А.5.18.7. rdsXGFillRect &ndash; заполненный прямоугольник">rdsXGFillRect</a>(hx+hR,r.top,r.right,r.bottom);<span class="rem">// Справа</span>
          }
        <span class="kw">else</span> <span class="rem">// Фиксируется Y</span>
          { <a class="hidden" href="rdsXGFillRect.htm" title="А.5.18.7. rdsXGFillRect &ndash; заполненный прямоугольник">rdsXGFillRect</a>(r.left,r.top,r.right,hy-hR);	<span class="rem">// Сверху</span>
            <a class="hidden" href="rdsXGFillRect.htm" title="А.5.18.7. rdsXGFillRect &ndash; заполненный прямоугольник">rdsXGFillRect</a>(r.left,hy+hR,r.right,r.bottom);<span class="rem">// Снизу</span>
          }
      }

    <span class="rem">// Линии перекрестия</span>
    <a class="hidden" href="rdsXGMoveTo.htm" title="А.5.18.14. rdsXGMoveTo &ndash; установить текущую точку рисования">rdsXGMoveTo</a>(cx,draw-&gt;Top);
    <a class="hidden" href="rdsXGLineTo.htm" title="А.5.18.13. rdsXGLineTo &ndash; отрезок прямой">rdsXGLineTo</a>(cx,draw-&gt;Top+draw-&gt;Height);
    <a class="hidden" href="rdsXGMoveTo.htm" title="А.5.18.14. rdsXGMoveTo &ndash; установить текущую точку рисования">rdsXGMoveTo</a>(draw-&gt;Left,cy);
    <a class="hidden" href="rdsXGLineTo.htm" title="А.5.18.13. rdsXGLineTo &ndash; отрезок прямой">rdsXGLineTo</a>(draw-&gt;Left+draw-&gt;Width,cy);

    <span class="rem">// Рисование круга (цвет зависит от параметра moving)</span>
    <a class="hidden" href="rdsXGSetPenStyle.htm" title="А.5.18.25. rdsXGSetPenStyle &ndash; установить стиль линии">rdsXGSetPenStyle</a>(<a class="hidden" href="rdsXGSetPenStyle.htm#light_ref4" title="RDS_GFSTYLE">RDS_GFSTYLE</a>,<a class="hidden" href="rdsXGSetPenStyle.htm#light_ref11" title="PS_NULL">PS_NULL</a>,<span class="const">0</span>,<span class="const">0</span>,<span class="const">0</span>);
    <a class="hidden" href="rdsXGSetBrushStyle.htm" title="А.5.18.20. rdsXGSetBrushStyle &ndash; установить стиль заливки">rdsXGSetBrushStyle</a>(<span class="const">0</span>,<a class="hidden" href="rdsXGSetBrushStyle.htm#light_ref6" title="RDS_GFS_SOLID">RDS_GFS_SOLID</a>,
      moving?MovingHandleColor:HandleColor);
    <a class="hidden" href="rdsXGEllipse.htm" title="А.5.18.6. rdsXGEllipse &ndash; эллипс или окружность">rdsXGEllipse</a>(hx-hR,hy-hR,hx+hR+<span class="const">1</span>,hy+hR+<span class="const">1</span>);

    <span class="rem">// Отмена отсечения</span>
    <a class="hidden" href="rdsXGSetClipRect.htm" title="А.5.18.21. rdsXGSetClipRect &ndash; установить область отсечения">rdsXGSetClipRect</a>(NULL);
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Реакция на нажатие кнопки мыши</span>
  <span class="kw">int</span> TSimpleJoystick::MouseDown(<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a> mouse,
                                 <span class="kw">double</span> x,<span class="kw">double</span> y,DWORD *pFlags)
  { <span class="kw">int</span> hx,hy,cx,cy,
        hR=HandleSize*mouse-&gt;DoubleZoom/<span class="const">2</span>; <span class="rem">// Радиус круга</span>

    <span class="rem">// Если размер - нулевой, реакция не имеет смысла</span>
    <span class="kw">if</span>(mouse-&gt;Height==<span class="const">0</span> || mouse-&gt;Width==<span class="const">0</span>)
      <span class="kw">return</span> RDS_BFR_DONE;
    <span class="rem">// Если нажата не левая кнопка, перетаскивать не надо</span>
    <span class="rem">// Разрешаем в этом случае вызов контекстного меню блока</span>
    <span class="kw">if</span>(mouse-&gt;Button!=<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#light_ref4" title="RDS_MLEFTBUTTON">RDS_MLEFTBUTTON</a>)
      <span class="kw">return</span> <a class="hidden" href="RDS_BFM_MOUSEDOWN.htm#light_ref2" title="RDS_BFR_SHOWMENU">RDS_BFR_SHOWMENU</a>;

    <span class="rem">// Координаты цента блока</span>
    cx=mouse-&gt;Left+mouse-&gt;Width/<span class="const">2</span>;
    cy=mouse-&gt;Top+mouse-&gt;Height/<span class="const">2</span>;
    <span class="rem">// Координаты центра круга-рукоятки</span>
    hx=cx+x*mouse-&gt;Width/<span class="const">2</span>;
    hy=cy-y*mouse-&gt;Height/<span class="const">2</span>;

    <span class="rem">// Проверка попадания курсора в круг</span>
    <span class="kw">if</span>(abs(mouse-&gt;x-hx)&lt;=hR &amp;&amp; abs(mouse-&gt;y-hy)&lt;=hR)
      { <span class="rem">// Курсор попал в круг</span>
        <span class="rem">// Запоминаем координаты центр круга на момент</span>
        <span class="rem">// начала перетаскивания</span>
        OldHandleX=hx;
        OldHandleY=hy;
        <span class="rem">// Координаты курсора на начало перетаскивания</span>
        OldMouseX=mouse-&gt;x;
        OldMouseY=mouse-&gt;y;
        <span class="rem">// Взводим флаг захвата мыши</span>
        *pFlags|=<a class="hidden" href="RDS_BLOCKDATA.htm#light_ref10" title="Флаг захвата мыши">RDS_MOUSECAPTURE</a>;
      }
    <span class="rem">// Курсор не попал в рукоятку - захватывать мышь</span>
    <span class="rem">// и подготавливать перетаскивание не нужно</span>
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Реакция на перемещение курсора мыши</span>
  <span class="kw">void</span> TSimpleJoystick::MouseMove(<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a> mouse,
                                  <span class="kw">double</span> *px,<span class="kw">double</span> *py)
  { <span class="kw">int</span> hx,hy,cx,cy;

    <span class="rem">// Если размер - нулевой, реакция не имеет смысла</span>
    <span class="kw">if</span>(mouse-&gt;Height==<span class="const">0</span> || mouse-&gt;Width==<span class="const">0</span>)
      { *px=*py=<span class="const">0</span>.<span class="const">0</span>;
        <span class="kw">return</span>;
      }

    <span class="rem">// Новые координаты центра рукоятки</span>
    hx=OldHandleX+(mouse-&gt;x-OldMouseX);
    hy=OldHandleY+(mouse-&gt;y-OldMouseY);

    <span class="rem">// Координаты центра блока</span>
    cx=mouse-&gt;Left+mouse-&gt;Width/<span class="const">2</span>;
    cy=mouse-&gt;Top+mouse-&gt;Height/<span class="const">2</span>;

    <span class="rem">// По новым координатам центра рукоятки вычисляем соответствующие</span>
    <span class="rem">// им вещественные значения выходов, ограничивая их</span>
    <span class="rem">// диапазоном [-1...1]</span>
    <span class="kw">if</span>(!LockX)
      { *px=<span class="const">2.0</span>*(hx-cx)/mouse-&gt;Width;
        <span class="kw">if</span>(*px&gt;<span class="const">1.0</span>) *px=<span class="const">1.0</span>;
        <span class="kw">else</span> <span class="kw">if</span>(*px&lt;-<span class="const">1.0</span>) *px=-<span class="const">1.0</span>;
      }
    <span class="kw">if</span>(!LockY)
      { *py=-<span class="const">2.0</span>*(hy-cy)/mouse-&gt;Height;
        <span class="kw">if</span>(*py&gt;<span class="const">1.0</span>) *py=<span class="const">1.0</span>;
        <span class="kw">else</span> <span class="kw">if</span>(*py&lt;-<span class="const">1.0</span>) *py=-<span class="const">1.0</span>;
      }
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Функция реакции на выбор одного из пунктов меню</span>
  <span class="kw">void</span> TSimpleJoystick::MenuFunction(<a class="hidden" href="RDS_BFM_MENUFUNCTION.htm#ref2" title="Указатель на RDS_MENUFUNCDATA">RDS_PMENUFUNCDATA</a> MenuData)
  { <span class="kw">switch</span>(MenuData-&gt;Function)
      { <span class="kw">case</span> <span class="const">1</span>: <span class="rem">// Выбран пункт "Фиксировать X"</span>
          LockX=!LockX; <span class="rem">// Переключаем флаг фиксации X</span>
          LockY=FALSE;  <span class="rem">// Отключаем фиксацию Y</span>
          <span class="kw">break</span>;
        <span class="kw">case</span> <span class="const">2</span>: <span class="rem">// Выбран пункт "Фиксировать Y"</span>
          LockY=!LockY; <span class="rem">// Переключаем флаг фиксации Y</span>
          LockX=FALSE;  <span class="rem">// Отключаем фиксацию X</span>
          <span class="kw">break</span>;
      }
    <span class="rem">// Установка галочек у пунктов меню в зависимости от</span>
    <span class="rem">// флагов фиксации координат</span>
    <a class="hidden" href="rdsSetMenuItemOptions.htm" title="А.5.17.9. rdsSetMenuItemOptions &ndash; установить флаги пункта меню">rdsSetMenuItemOptions</a>(MenuLockX,LockX?<a class="hidden" href="rdsChangeMenuItem.htm#light_ref3" title="RDS_MENU_CHECKED">RDS_MENU_CHECKED</a>:<span class="const">0</span>);
    <a class="hidden" href="rdsSetMenuItemOptions.htm" title="А.5.17.9. rdsSetMenuItemOptions &ndash; установить флаги пункта меню">rdsSetMenuItemOptions</a>(MenuLockY,LockY?<a class="hidden" href="rdsChangeMenuItem.htm#light_ref3" title="RDS_MENU_CHECKED">RDS_MENU_CHECKED</a>:<span class="const">0</span>);
  }
  <span class="rem">//=========================================</span>

  <span class="rem">// Реакция на изменение размеров блока</span>
  <span class="kw">void</span> TSimpleJoystick::Resizing(<a class="hidden" href="RDS_BFM_RESIZE.htm#ref3" title="Указатель на RDS_RESIZEDATA">RDS_PRESIZEDATA</a> ResData)
  {
    <span class="kw">if</span>(ResData-&gt;HorzResize &amp;&amp; (!ResData-&gt;VertResize))
      <span class="rem">// Перетаскивается левый или правый маркер</span>
      ResData-&gt;newHeight=ResData-&gt;newWidth;
    <span class="kw">else</span> <span class="kw">if</span>((!ResData-&gt;HorzResize) &amp;&amp; ResData-&gt;VertResize)
      <span class="rem">// Перетаскивается верхний или нижний маркер</span>
      ResData-&gt;newWidth=ResData-&gt;newHeight;
    <span class="kw">else</span> <span class="rem">// Перетаскивается угловой маркер или размер задан точно</span>
      { <span class="rem">// Вычисляем среднее арифметическое</span>
        <span class="kw">int</span> avg=(ResData-&gt;newWidth+ResData-&gt;newHeight)/<span class="const">2</span>;
        <span class="rem">// Присваиваем его ширине и высоте</span>
        ResData-&gt;newWidth=ResData-&gt;newHeight=avg;
      }
  }
  <span class="rem">//=========================================</span>

<div class="changes">  <span class="rem">// Ограничение значений входов блока</span>
  <span class="kw">void</span> TSimpleJoystick::LimitInputValues(<span class="kw">double</span> *px_in,<span class="kw">double</span> *py_in,
                                         <span class="kw">double</span> x,<span class="kw">double</span> y)
  { <span class="rem">// px_in, py_in - указатели на входы блока</span>
    <span class="rem">// x, y - текущие значения выходов</span>
    <span class="kw">if</span>(LockX) <span class="rem">// Координата x зафиксирована</span>
      *px_in=x; <span class="rem">// Присваиваем входу x_in зафиксированное значение</span>
    <span class="kw">else</span> <span class="rem">// Ограничиваем x_in диапазоном [-1...1]</span>
      { <span class="kw">if</span>(*px_in&lt;-<span class="const">1.0</span>) *px_in=-<span class="const">1.0</span>;
        <span class="kw">else</span> <span class="kw">if</span>(*px_in&gt;<span class="const">1.0</span>) *px_in=<span class="const">1.0</span>;
      }
    <span class="kw">if</span>(LockY) <span class="rem">// Координата y зафиксирована</span>
      *py_in=y; <span class="rem">// Присваиваем входу y_in зафиксированное значение</span>
    <span class="kw">else</span> <span class="rem">// Ограничиваем y_in диапазоном [-1...1]</span>
      { <span class="kw">if</span>(*py_in&lt;-<span class="const">1.0</span>) *py_in=-<span class="const">1.0</span>;
        <span class="kw">else</span> <span class="kw">if</span>(*py_in&gt;<span class="const">1.0</span>) *py_in=<span class="const">1.0</span>;
      }
  }
  <span class="rem">//=========================================</span></div>
  <span class="rem">// Функция модели блока</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> E SimpleJoystick(<span class="kw">int</span> CallMode,
            <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
            <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  {
  <span class="rem">// </span><a class="hidden" href="pm_2_5_1.htm#light_ref9" title="Макросы для статических переменных блока"><span class="rem">Макроопределения для статических переменных</span></a>
  <span class="preproc">#define pStart  ((char *)(BlockData-&gt;VarData))</span>
  <span class="preproc">#define Start   (*((char *)(pStart)))</span>
  <span class="preproc">#define Ready   (*((char *)(pStart+1)))</span>
  <span class="preproc">#define x       (*((double *)(pStart+2)))</span>
  <span class="preproc">#define y       (*((double *)(pStart+10)))</span>
<span class="changes">  <span class="preproc">#define x_in    (*((double *)(pStart+18)))  </span></span>
<span class="changes">  <span class="preproc">#define y_in    (*((double *)(pStart+26)))  </span></span>
<span class="changes">  <span class="preproc">#define x_in_ok (*((char *)(pStart+34)))    </span></span>
<span class="changes">  <span class="preproc">#define y_in_ok (*((char *)(pStart+35)))    </span></span>
    <span class="rem">// Вспомогательная переменная - указатель на личную область,</span>
    <span class="rem">// приведенный к правильному типу</span>
    TSimpleJoystick *data=(TSimpleJoystick*)(BlockData-&gt;BlockData);
    <span class="kw">switch</span>(CallMode)
      { <span class="rem">// Инициализация</span>
       <span class="kw">case</span> <a class="hidden" href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a>:
          BlockData-&gt;BlockData=<span class="kw">new</span> TSimpleJoystick();
          <span class="kw">break</span>;
        <span class="rem">// Очистка</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_CLEANUP.htm" title="А.2.4.3. RDS_BFM_CLEANUP &ndash; очистка данных блока">RDS_BFM_CLEANUP</a>:
          <span class="kw">delete</span> data;
          <span class="kw">break</span>;
        <span class="rem">// Проверка допустимости типов переменных</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a>:
          <span class="kw">return</span> strcmp((<span class="kw">char</span>*)ExtParam,<span class="str">"{SSDDDDSS}"</span>)?
            <a class="hidden" href="RDS_BFM_VARCHECK.htm#light_ref3" title="Возврат RDS_BFR_BADVARSMSG">RDS_BFR_BADVARSMSG</a>:<a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
        <span class="rem">// Нажатие кнопки мыши</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MOUSEDOWN.htm" title="А.2.6.9. RDS_BFM_MOUSEDOWN &ndash; нажатие кнопки мыши">RDS_BFM_MOUSEDOWN</a>:
          <span class="kw">return</span> data-&gt;MouseDown((<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a>)ExtParam,x,y,
            &amp;(BlockData-&gt;Flags));
        <span class="rem">// Отпускание кнопки мыши</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MOUSEUP.htm" title="А.2.6.11. RDS_BFM_MOUSEUP &ndash; отпускание кнопки мыши">RDS_BFM_MOUSEUP</a>:
          <span class="rem">// Снятие захвата мыши</span>
          <a class="hidden" href="RDS_SETFLAG.htm" title="А.5.2.4. Макрос RDS_SETFLAG &ndash; установка битового флага">RDS_SETFLAG</a>(BlockData-&gt;Flags,<a class="hidden" href="RDS_BLOCKDATA.htm#light_ref10" title="Флаг захвата мыши">RDS_MOUSECAPTURE</a>,FALSE);
          <span class="kw">break</span>;
        <span class="rem">// Перемещение курсора мыши</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MOUSEMOVE.htm" title="А.2.6.10. RDS_BFM_MOUSEMOVE &ndash; перемещение курсора мыши">RDS_BFM_MOUSEMOVE</a>:
          <span class="rem">// Проверка: включен ли захват мыши</span>
          <span class="kw">if</span>(BlockData-&gt;Flags &amp; <a class="hidden" href="RDS_BLOCKDATA.htm#light_ref10" title="Флаг захвата мыши">RDS_MOUSECAPTURE</a>)	<span class="rem">// Включен</span>
            {<span class="changes"> <span class="rem">// Запоминаем старые значения                 </span></span>
             <span class="changes">  <span class="kw">double</span> oldX=x,oldY=y;                        </span>
              <span class="rem">// Вызываем функцию реакции</span>
              data-&gt;MouseMove((<a class="hidden" href="RDS_BFM_MOUSEDBLCLICK.htm#ref3" title="Указатель на RDS_MOUSEDATA">RDS_PMOUSEDATA</a>)ExtParam,&amp;x,&amp;y);
              Ready=<span class="const">1</span>;	<span class="rem">// Взводим сигнал готовности</span>
             <span class="changes"> <span class="rem">// Если значения изменились, передаем соседям </span></span>
             <span class="changes"> <span class="kw">if</span>(oldX!=x || oldY!=y)                        </span>
             <span class="changes">   ControlValueChangedCall(&amp;(data-&gt;NoCall));   </span>
            }
          <span class="kw">break</span>;
        <span class="rem">// Рисование</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_DRAW.htm" title="А.2.6.3. RDS_BFM_DRAW &ndash; рисование внешнего вида блока">RDS_BFM_DRAW</a>:
          data-&gt;Draw((<a class="hidden" href="RDS_BFM_DRAW.htm#ref2" title="Указатель на RDS_DRAWDATA">RDS_PDRAWDATA</a>)ExtParam,x,y,
          BlockData-&gt;Flags &amp; <a class="hidden" href="RDS_BLOCKDATA.htm#light_ref10" title="Флаг захвата мыши">RDS_MOUSECAPTURE</a>);
          <span class="kw">break</span>;

        <span class="rem">// Выбор пользователем добавленного пункта меню</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MENUFUNCTION.htm" title="А.2.6.7. RDS_BFM_MENUFUNCTION &ndash; выбор пользователем пункта меню">RDS_BFM_MENUFUNCTION</a>:
          data-&gt;MenuFunction((<a class="hidden" href="RDS_BFM_MENUFUNCTION.htm#ref2" title="Указатель на RDS_MENUFUNCDATA">RDS_PMENUFUNCDATA</a>)ExtParam);
          <span class="kw">break</span>;

        <span class="rem">// Изменение размеров блока</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_RESIZE.htm" title="А.2.7.6. RDS_BFM_RESIZE &ndash; размер блока изменен пользователем">RDS_BFM_RESIZE</a>:
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_RESIZING.htm" title="А.2.7.7. RDS_BFM_RESIZING &ndash; изменение размеров блока пользователем">RDS_BFM_RESIZING</a>:
          data-&gt;Resizing((<a class="hidden" href="RDS_BFM_RESIZE.htm#ref3" title="Указатель на RDS_RESIZEDATA">RDS_PRESIZEDATA</a>)ExtParam);
          <span class="kw">break</span>;

<div class="changes">        <span class="rem">// Один такт расчета</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a>:
          <span class="kw">if</span>(x_in_ok==<span class="const">0</span> &amp;&amp; y_in_ok==<span class="const">0</span>)
            { <span class="rem">// Связанные сигналы не взведены</span>
              Ready=<span class="const">0</span>; <span class="rem">// Сбрасываем сигнал готовности</span>
              <span class="kw">break</span>;
            }
          <span class="kw">if</span>(x==x_in &amp;&amp; y==y_in)
            { <span class="rem">// На входах те же значения, что и на выходах</span>
              Ready=x_in_ok=y_in_ok=<span class="const">0</span>; <span class="rem">// Сбрасываем все сигналы</span>
              <span class="kw">break</span>;
            }
          <span class="rem">// Ограничиваем входные значения</span>
          data-&gt;LimitInputValues(&amp;x_in,&amp;y_in,x,y);
          <span class="rem">// В зависимости от того, какой связанный сигнал взведен,</span>
          <span class="rem">// копируем соответствующие входы в выходы</span>
          <span class="kw">if</span>(x_in_ok) x=x_in;
          <span class="kw">if</span>(y_in_ok) y=y_in;
          x_in_ok=y_in_ok=<span class="const">0</span>; <span class="rem">// Сбрасываем связанные сигналы</span>
          <span class="rem">// Передаем данные соединенным блокам</span>
          ControlValueChangedCall(&amp;(data-&gt;NoCall));
          <span class="kw">break</span>;</div>
<div class="changes">        <span class="rem">// Реакция на вызов функции</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm" title="А.2.4.6. RDS_BFM_FUNCTIONCALL &ndash; вызов функции блока">RDS_BFM_FUNCTIONCALL</a>:
          <span class="kw">if</span>(((<a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm#ref2" title="Указатель на RDS_FUNCTIONCALLDATA">RDS_PFUNCTIONCALLDATA</a>)ExtParam)-&gt;Function==
          ControlValueChangedId)
            { <span class="rem">// Вызвана "Common.ControlValueChanged"</span>
              <span class="kw">if</span>(data-&gt;NoCall) <span class="rem">// Вызов заблокирован</span>
                <span class="kw">break</span>;
              <span class="rem">// Ограничиваем входные значения</span>
              data-&gt;LimitInputValues(&amp;x_in,&amp;y_in,x,y);
              <span class="rem">// Если связанные сигналы не взведены - не реагируем</span>
              <span class="kw">if</span>(x_in_ok==<span class="const">0</span> &amp;&amp; y_in_ok==<span class="const">0</span>)
                <span class="kw">break</span>;
              <span class="rem">// Если значения входов те же, что и у выходов -</span>
              <span class="rem">// не реагируем</span>
              <span class="kw">if</span>(x_in==x &amp;&amp; y_in==y)
                <span class="kw">break</span>;
              <span class="rem">// Копируем входы в выходы согласно связанным сигналам</span>
              <span class="kw">if</span>(x_in_ok) x=x_in;
              <span class="kw">if</span>(y_in_ok) y=y_in;
              x_in_ok=y_in_ok=<span class="const">0</span>; <span class="rem">// Сбрасываем связанные сигналы</span>
              Ready=<span class="const">1</span>;           <span class="rem">// Взводим сигнал готовности</span>
              <span class="rem">// Передаем данные соединенным блокам</span>
              ControlValueChangedCall(&amp;(data-&gt;NoCall));
            }
          <span class="kw">break</span>;</div>
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  <span class="rem">// Отмена макроопределений</span>
<span class="changes">  <span class="preproc">#undef y_in_ok  </span></span>
<span class="changes">  <span class="preproc">#undef x_in_ok  </span></span>
<span class="changes">  <span class="preproc">#undef y_in     </span></span>
<span class="changes">  <span class="preproc">#undef x_in     </span></span>
  <span class="preproc">#undef y</span>
  <span class="preproc">#undef x</span>
  <span class="preproc">#undef Ready</span>
  <span class="preproc">#undef Start</span>
  <span class="preproc">#undef pStart</span>
  }
  <span class="rem">//=========================================</span></pre>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="pm_2_13_1.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_13_3.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_13_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
