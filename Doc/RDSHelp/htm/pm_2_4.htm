<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;2.4. Инициализация и очистка данных блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="pm_index.htm">Руководство программиста</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_2">Глава 2. Создание моделей блоков</a></p>
<div class="level"><p>&sect;2.4. Инициализация и очистка данных блока</p>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="pm_2_3.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_5_1.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_4">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
<div class="right">
<span class="curtab">Текст</span>
<span class="tab"><a href="pm_2_4_c.htm">С++</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Руководство программиста</h1>
<h2 class="off">Глава 2. Создание моделей блоков</h2>
<h3>&sect;2.4. Инициализация и очистка данных блока</h3>
<p class="abstract">Описывается событие инициализации <span class="cpp">RDS_BFM_INIT</span> &ndash; самое первое событие в &laquo;жизни&raquo; модели блока, и событие очистки <span class="cpp">RDS_BFM_CLEANUP</span> &ndash; самое последнее. Приводится пример модели, отводящей себе память под личные нужды при инициализации и освобождающей ее при очистке.</p>


<p><span id="ref1">Самое</span>
первое событие, на которое реагирует блок &ndash; это событие инициализации
<span class="cpp" id="light_ref1"><a href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a></span>. Оно возникает в момент
подключения модели к блоку, то есть при загрузке блока
из файла в составе схемы, при
вставке блока из буфера обмена,
при указании новой модели в
<a href="um_2_9_1.htm#ref21" title="Вкладка DLL параметров блока">окне параметров блока</a>
и т.п. Как только конкретному блоку схемы ставится в соответствие конкретная функция модели, эта функция
вызывается для данного блока с параметром <span class="cpp">RDS_BFM_INIT</span>.
<span id="ref2">Обычно</span>
этот вызов используется
для создания <span id="light_ref2">личной области данных</span> блока &ndash; области памяти, используемой
моделью по своему усмотрению.
В C личная область данных чаще всего представляет собой структуру, а в C++ &ndash; объект какого-либо класса.
В личной области хранятся параметры блока, которые неудобно или невозможно хранить в статических переменных
&ndash; строки, вспомогательные объекты, информация о
<a href="pm_2_6_1.htm" title="&sect;2.6.1. Использование динамических переменных">динамических переменных</a>, с которыми работает блок, и т.п. При
инициализации модель должна отвести память под личную область данных (например, функцией
<span class="cpp">malloc</span> или оператором <span class="cpp">new</span>) и присвоить указатель на созданную
область полю <span class="cpp">BlockData</span> структуры данных блока
<span class="cpp"><a href="RDS_BLOCKDATA.htm" title="А.2.3. RDS_BLOCKDATA &ndash; структура данных блока">RDS_BLOCKDATA</a></span>, указатель на которую передается в
<a href="pm_2_3.htm" title="&sect;2.3. Структура функции модели блока">функцию модели</a> через параметр
<span class="cpp">BlockData</span> при каждом вызове.</p>

<p><span id="ref3">Событие</span> очистки
<span class="cpp" id="light_ref3"><a href="RDS_BFM_CLEANUP.htm" title="А.2.4.3. RDS_BFM_CLEANUP &ndash; очистка данных блока">RDS_BFM_CLEANUP</a></span> &ndash; это самое последнее событие, на которое может
среагировать блок. Оно возникает тогда, когда по какой-либо причине модель отключается от блока: при удалении блока
пользователем, при очистке памяти в момент завершения RDS или при загрузке новой схемы, перед подключением к
блоку новой модели и т.п. Если при реакции на <span class="cpp"><a class="hidden" href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a></span>
была создана личная область данных, при реакции на <span class="cpp">RDS_BFM_CLEANUP</span> она должна быть
удалена.</p>

<p><span id="light_ref4">В качестве примера</span>
рассмотрим модель блока, работающую с личной областью, в которой будут храниться два параметра: целый
<span class="cpp">IParam</span> и вещественный <span class="cpp">DParam</span> (пример не имеет практического
применения, он просто иллюстрирует реакцию блока на события инициализации и очистки). В этом примере будет
приведена и главная функция DLL, и модель блока. В дальнейшем в приводимых примерах главная функция DLL
чаще всего будет опущена.</p>

<pre class="cpp">  <span class="preproc">#include &lt;windows.h&gt;</span>
  <span class="preproc">#include &lt;RdsDef.h&gt;</span>
  <span class="rem">// Подготовка описаний сервисных функций</span>
  <a class="hidden" href="pm_2_2.htm#ref11" title="Использование RdsFunc.h"><span class="preproc">#define RDS_SERV_FUNC_BODY GetInterfaceFunctions</span></a>
  <span class="preproc">#include &lt;RdsFunc.h&gt;</span>

  <span class="rem">//========== Главная функция DLL ==========</span>
  <span class="kw">int</span> WINAPI <a class="hidden" href="pm_2_2.htm#ref8" title="Главная функция DLL">DllEntryPoint</a>(<a class="hidden" href="app_ids.htm#light_ref17" title="Дескриптор модуля">HINSTANCE</a> <span class="rem">/*hinst*/</span>,
                           <span class="kw">unsigned</span> <span class="kw">long</span> reason,
                           <span class="kw">void</span>* <span class="rem">/*lpReserved*/</span>)
  { <span class="kw">if</span>(reason==DLL_PROCESS_ATTACH) <span class="rem">// Загрузка DLL</span>
      { <span class="rem">// Получение доступа к функциям</span>
        <span class="kw">if</span>(!GetInterfaceFunctions())
          MessageBox(NULL,<span class="str">"Нет доступа к функциям"</span>,<span class="str">"Ошибка"</span>,MB_OK);
      }
    <span class="kw">return</span> <span class="const">1</span>;
  }
  <span class="rem">//========= Конец главной функции =========</span>

  <span class="rem">//====== Класс личной области данных ======</span>
  <span class="kw">class</span> TTest1Data
  { <span class="kw">public</span>:
      <span class="kw">int</span> IParam;       <span class="rem">// Целый параметр</span>
      <span class="kw">double</span> DParam;    <span class="rem">// Вещественный параметр</span>
      TTest1Data(<span class="kw">void</span>)  <span class="rem">// Конструктор класса</span>
        { IParam=<span class="const">0</span>; DParam=<span class="const">0</span>.<span class="const">0</span>;
          <a class="hidden" href="rdsMessageBox.htm" title="А.5.5.6. rdsMessageBox &ndash; вывод окна сообщения">rdsMessageBox</a>(<span class="str">"Область создана"</span>,<span class="str">"TTest1Data"</span>,MB_OK);
        };
      ~TTest1Data()     <span class="rem">// Деструктор класса</span>
        { <a class="hidden" href="rdsMessageBox.htm" title="А.5.5.6. rdsMessageBox &ndash; вывод окна сообщения">rdsMessageBox</a>(<span class="str">"Область удалена"</span>,<span class="str">"TTest1Data"</span>,MB_OK);};
  };
  <span class="rem">//=========================================</span>

  <span class="rem">//============= Модель блока ==============</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> Test1(<span class="kw">int</span> CallMode,
                      <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
                      <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  { TTest1Data *data;
    <span class="kw">switch</span>(CallMode)
      { <span class="kw">case</span> <a class="hidden" href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a>:    <span class="rem">// Инициализация</span>
          BlockData-&gt;BlockData=<span class="kw">new</span> TTest1Data();
          <span class="kw">break</span>;
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_CLEANUP.htm" title="А.2.4.3. RDS_BFM_CLEANUP &ndash; очистка данных блока">RDS_BFM_CLEANUP</a>: <span class="rem">// Очистка</span>
          data=(TTest1Data*)(BlockData-&gt;BlockData);
          <span class="kw">delete</span> data;
          <span class="kw">break</span>;
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  }
  <span class="rem">//=========================================</span></pre>

<p>Перед функцией модели блока находится описание класса <span class="cpp">TTest1Data</span>, объект которого
используется блоком в качестве личной области данных. В конструкторе и деструкторе класса (функциях,
автоматически вызываемых при создании и уничтожении объекта соответственно) вызывается сервисная функция
<span class="cpp"><a href="rdsMessageBox.htm" title="А.5.5.6. rdsMessageBox &ndash; вывод окна сообщения">rdsMessageBox</a></span>, выводящая сообщение о создании и удалении объекта. Функция модели
<span class="cpp">Test1</span> реагирует всего на два события: инициализации <span class="cpp">RDS_BFM_INIT</span>
и очистки <span class="cpp">RDS_BFM_CLEANUP</span>. При вызове функции с параметром
<span class="cpp">RDS_BFM_INIT</span> создается объект <span class="cpp">TTest1Data</span>, указатель на который
присваивается полю структуры данных блока <span class="cpp">BlockData</span>. При вызове функции с параметром
<span class="cpp">RDS_BFM_CLEANUP</span> значение <span class="cpp">BlockData-&gt;BlockData</span> приводится к типу
&laquo;указатель на <span class="cpp">TTest1Data</span>&raquo; (для ясности примера в функцию
модели введена вспомогательная переменная <span class="cpp">data</span>), после чего созданный при инициализации
объект уничтожается.</p>

<p>Чтобы проверить работоспособность этого примера необходимо скомпилировать DLL с этой моделью, запустить
RDS, создать новую схему и создать в ней новый простой блок (пункт
&laquo;<span class="menu">Создать | Новый блок</span>&raquo; в контекстном меню или в меню редактирования). Затем необходимо открыть
окно параметров этого блока (пункт
&laquo;<span class="menu">Параметры</span>&raquo; в контекстном меню блока), выбрать в окне
вкладку &laquo;<span class="menu">DLL</span>&raquo;, указать путь к скомпилированной DLL и имя экспортированной функции в ней
(<a href="#pic1" title="Подключение модели к блоку &ndash; после нажатия OK к блоку будет подключена модель Test1 из библиотеки testdll.dll , находящейся в стандартной папке DLL">рис.&nbsp;15</a>).
Именем экспортированной функции, в данном случае, будет &laquo;Test1&raquo;, если используется компилятор
Borland C++. Для других компиляторов может потребоваться что-нибудь вроде
&laquo;Test1@12&raquo; или &laquo;_Test1@12&raquo; &ndash; способ формирования экспортированного имени из
имени функции обычно указывается в описании компилятора). При нажатии кнопки &laquo;<span class="menu">OK</span>&raquo; модель будет
подключена к созданному блоку, при этом она будет вызвана с параметром <span class="cpp">RDS_BFM_INIT</span>
и должна вывести сообщение &laquo;Область создана&raquo;. Если после этого удалить созданный блок, перед
удалением модель будет отключена от него, что приведет к вызову функции с параметром
<span class="cpp">RDS_BFM_CLEANUP</span> и выводу сообщения
&laquo;Область удалена&raquo;. Это же сообщение будет выведено, если закрыть RDS не удаляя блок
(в момент отключения модели от блока при очистке памяти перед завершением программы).</p>

<div class="pic"><div class="container" id="pic1">
<img src="../img/Test1_AssignModel.png" width="534" height="409" alt="Подключение модели к блоку &ndash; после нажатия OK к блоку будет подключена модель Test1 из библиотеки testdll.dll , находящейся в стандартной папке DLL" />
<p id="light_pic1">Рис.&nbsp;15. Подключение модели к блоку &ndash; после нажатия &laquo;<span class="menu">OK</span>&raquo; к блоку будет подключена модель &laquo;Test1&raquo;<br />из библиотеки &laquo;<span class="file">testdll.dll</span>&raquo;, находящейся в стандартной папке DLL</p>
</div></div>



</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="pm_2_3.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_5_1.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_4">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
