<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;2.5.6. Работа с переменными произвольного типа</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="pm_index.htm">Руководство программиста</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_2">Глава 2. Создание моделей блоков</a></p>
<div class="level"><p><a href="pm_index.htm#light_htm:pm_2_5">&sect;2.5. Статические переменные блоков</a></p>
<div class="level"><p>&sect;2.5.6. Работа с переменными произвольного типа</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="pm_2_5_5.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_5_7.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_5_6">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
<div class="right">
<span class="tab"><a href="pm_2_5_6.htm">Текст</a></span>
<span class="curtab">С++</span>
</div>
</div>

<div class="text">

<p>Полный исходный текст на языке C++ для библиотеки (DLL) с моделями, работающими с переменными
произвольного типа. Библиотека содержит три модели:</p>

<ul>
  <li><span class="cpp">TestVarSwitch</span> &ndash; универсальный выключатель передачи данных;</li>
  <li><span class="cpp">TestVar1</span> &ndash; блок, определяющий фактический тип 
  всоего входа;</li>
  <li><span class="cpp">TestVar2</span> &ndash; блок, программно изменяющий фактический тип
  своего выхода.</li>
</ul>

<pre class="cpp">  <span class="rem">// Переменные произвольного типа</span>
  <span class="preproc">#include &lt;windows.h&gt;</span>
  <span class="preproc">#include &lt;RdsDef.h&gt;</span>
  <span class="rem">// Подготовка описаний сервисных функций</span>
  <a class="hidden" href="pm_2_2.htm#ref11" title="Использование RdsFunc.h"><span class="preproc">#define RDS_SERV_FUNC_BODY GetInterfaceFunctions</span></a>
  <span class="preproc">#include &lt;RdsFunc.h&gt;</span>

  <span class="rem">//========== </span><a class="hidden" href="pm_2_2.htm" title="&sect;2.2. Главная функция DLL и файлы заголовков"><span class="rem">Главная функция DLL</span></a><span class="rem"> ==========</span>
  <span class="kw">int</span> WINAPI <a class="hidden" href="pm_2_2.htm#ref8" title="Главная функция DLL">DllEntryPoint</a>(<a class="hidden" href="app_ids.htm#light_ref17" title="Дескриптор модуля">HINSTANCE</a> <span class="rem">/*hinst*/</span>,
                           <span class="kw">unsigned</span> <span class="kw">long</span> reason,
                           <span class="kw">void</span>* <span class="rem">/*lpReserved*/</span>)
  { <span class="kw">if</span>(reason==DLL_PROCESS_ATTACH) <span class="rem">// Загрузка DLL</span>
      { <span class="rem">// Получение доступа к функциям RDS</span>
        <span class="kw">if</span>(!GetInterfaceFunctions())
          MessageBox(NULL,<span class="str">"Нет доступа к функциям"</span>,<span class="str">"Ошибка"</span>,MB_OK);
      }
    <span class="kw">return</span> <span class="const">1</span>;
  }
  <span class="rem">//========= Конец главной функции =========</span>

  <span class="rem">//======= Универсальный выключатель =======</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> TestVarSwitch(<span class="kw">int</span> CallMode,
                              <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
                              <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  {
  <span class="rem">// </span><a class="hidden" href="pm_2_5_1.htm#light_ref9" title="Макросы для статических переменных блока"><span class="rem">Макроопределения для статических переменных</span></a>
  <span class="preproc">#define pStart  ((char *)(BlockData-&gt;VarData))</span>
  <span class="preproc">#define Start   (*((char *)(pStart)))</span>
  <span class="preproc">#define Ready   (*((char *)(pStart+1)))</span>
  <span class="preproc">#define px      ((void **)(pStart+2))</span>
  <span class="preproc">#define Enable  (*((char *)(pStart+10)))</span>
  <span class="preproc">#define py      ((void **)(pStart+11))</span>

    <span class="kw">switch</span>(CallMode)
      { <span class="rem">// Проверка типа переменных</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a>:
          <span class="kw">if</span>(strcmp((<span class="kw">char</span>*)ExtParam,<span class="str">"{SSVLV}"</span>)==<span class="const">0</span>)
            <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
          <span class="kw">return</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm#light_ref3" title="Возврат RDS_BFR_BADVARSMSG">RDS_BFR_BADVARSMSG</a>;

        <span class="rem">// Выполнение такта моделирования</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a>:
          <span class="kw">if</span>(Enable) <span class="rem">// Передача разрешена</span>
            <a class="hidden" href="rdsCopyRuntimeType.htm" title="А.5.14.4. rdsCopyRuntimeType &ndash; копировать переменную произвольного типа">rdsCopyRuntimeType</a>(py,px); <span class="rem">// Копирование x в y</span>
          <span class="kw">else</span> <span class="rem">// Передача запрещена</span>
            Ready=<span class="const">0</span>; <span class="rem">// Блокировка передачи данных по связям</span>
          <span class="kw">break</span>;
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  <span class="rem">// Отмена макроопределений</span>
  <span class="preproc">#undef py</span>
  <span class="preproc">#undef Enable</span>
  <span class="preproc">#undef px</span>
  <span class="preproc">#undef Ready</span>
  <span class="preproc">#undef Start</span>
  <span class="preproc">#undef pStart</span>
  }
  <span class="rem">//=========================================</span>



  <span class="rem">//====== Определение типа переменной ======</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> TestVar1(<span class="kw">int</span> CallMode,
                         <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
                         <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  {
  <span class="rem">// </span><a class="hidden" href="pm_2_5_1.htm#light_ref9" title="Макросы для статических переменных блока"><span class="rem">Макроопределения для статических переменных</span></a>
  <span class="preproc">#define pStart  ((char *)(BlockData-&gt;VarData))</span>
  <span class="preproc">#define Start   (*((char *)(pStart)))</span>
  <span class="preproc">#define Ready   (*((char *)(pStart+1)))</span>
  <span class="preproc">#define px      ((void **)(pStart+2))</span>
  <span class="preproc">#define type    (*((char **)(pStart+10)))</span>
  <span class="preproc">#define val     (*((double *)(pStart+14)))</span>
    <span class="rem">// Вспомогательные переменные</span>
    <span class="kw">char</span> *s;  <span class="rem">// Строка фактического типа входа x</span>
    <span class="kw">void</span> *v;  <span class="rem">// Указатель на данные входа x</span>

    <span class="kw">switch</span>(CallMode)
      { <span class="rem">// Проверка типа переменных</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a>:
          <span class="kw">if</span>(strcmp((<span class="kw">char</span>*)ExtParam,<span class="str">"{SSVAD}"</span>)==<span class="const">0</span>)
            <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
          <span class="kw">return</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm#light_ref3" title="Возврат RDS_BFR_BADVARSMSG">RDS_BFR_BADVARSMSG</a>;

        <span class="rem">// Выполнение такта моделирования</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a>:
          <span class="rem">// Освобождение прежнего значения строки type</span>
          <a class="hidden" href="rdsFree.htm" title="А.5.4.8. rdsFree &ndash; освобождение отведенной динамической памяти">rdsFree</a>(type);
          <span class="rem">// Получение указателя на данные (v)</span>
          <span class="rem">// и строки фактического типа (s) входа x</span>
          v=<a class="hidden" href="rdsGetRuntimeTypeData.htm" title="А.5.14.13. rdsGetRuntimeTypeData &ndash; получить фактические данные переменной произвольного типа">rdsGetRuntimeTypeData</a>(px,&amp;s);
          <span class="rem">// Занесение строки типа в выход type</span>
          type=s;
          <span class="rem">// Анализ типа, если переменная не пуста</span>
          <span class="kw">if</span>(v!=NULL) <span class="rem">// У входа x есть фактический тип</span>
            <span class="kw">switch</span>(*s) <span class="rem">// Анализ первого символа строки типа</span>
              { <span class="kw">case</span> <span class="str">'D'</span>: <span class="rem">// Фактический тип – double</span>
                  val=*((<span class="kw">double</span>*)v);
                  <span class="kw">break</span>;
                <span class="kw">case</span> <span class="str">'I'</span>: <span class="rem">// Фактический тип – int</span>
                  val=*((<span class="kw">int</span>*)v);
                  <span class="kw">break</span>;
                <span class="kw">case</span> <span class="str">'M'</span>: <span class="rem">// Фактический тип – матрица или массив</span>
                  <span class="kw">if</span>(<a class="hidden" href="RDS_ARRAYEXISTS.htm" title="А.5.15.3. Макрос RDS_ARRAYEXISTS &ndash; проверка наличия элементов в матрице/массиве">RDS_ARRAYEXISTS</a>(v)) <span class="rem">// Матрица не пуста</span>
                    val=<a class="hidden" href="RDS_ARRAYROWS.htm" title="А.5.15.6. Макрос RDS_ARRAYROWS &ndash; число строк матрицы/массива">RDS_ARRAYROWS</a>(v)*<a class="hidden" href="RDS_ARRAYCOLS.htm" title="А.5.15.1. Макрос RDS_ARRAYCOLS &ndash; число столбцов матрицы/массива">RDS_ARRAYCOLS</a>(v);
                  <span class="kw">else</span> <span class="rem">// Матрица пуста (0x0)</span>
                    val=<span class="const">0</span>;
                  <span class="kw">break</span>;
                <span class="kw">default</span>: <span class="rem">// Другой фактический тип</span>
                  val=<span class="const">0</span>.<span class="const">0</span>;
              } <span class="rem">// Конец switch(*s)</span>
          <span class="kw">else</span> <span class="rem">// У входа x нет фактического типа</span>
            val=<span class="const">0</span>.<span class="const">0</span>;
          <span class="kw">break</span>;
      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  <span class="rem">// Отмена макроопределений</span>
  <span class="preproc">#undef val</span>
  <span class="preproc">#undef type</span>
  <span class="preproc">#undef px</span>
  <span class="preproc">#undef Ready</span>
  <span class="preproc">#undef Start</span>
  <span class="preproc">#undef pStart</span>
  }
  <span class="rem">//=========================================</span>

  

  <span class="rem">//==== Программное задание типа выхода ====</span>
  <span class="kw">extern</span> <span class="str">"C"</span> <span class="kw">__declspec</span>(<span class="kw">dllexport</span>)
    <span class="kw">int</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> TestVar2(<span class="kw">int</span> CallMode,
                         <a class="hidden" href="RDS_BLOCKDATA.htm#ref2" title="Указатель на RDS_BLOCKDATA">RDS_PBLOCKDATA</a> BlockData,
                         <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> ExtParam)
  {
  <span class="rem">// </span><a class="hidden" href="pm_2_5_1.htm#light_ref9" title="Макросы для статических переменных блока"><span class="rem">Макроопределения для статических переменных</span></a>
  <span class="preproc">#define pStart  ((char *)(BlockData-&gt;VarData))</span>
  <span class="preproc">#define Start   (*((char *)(pStart)))</span>
  <span class="preproc">#define Ready   (*((char *)(pStart+1)))</span>
  <span class="preproc">#define Type    (*((int *)(pStart+2)))</span>
  <span class="preproc">#define py      ((void **)(pStart+6))</span>
    <span class="rem">// Вспомогательные переменные</span>
    <span class="kw">int</span> *i_ptr;    <span class="rem">// Указатель на данные для целого типа</span>
    <span class="kw">double</span> *d_ptr; <span class="rem">// Указатель на данные для вещественного типа</span>
    <span class="kw">void</span> *v_ptr;   <span class="rem">// Указатель на данные для матрицы</span>

    <span class="kw">switch</span>(CallMode)
      { <span class="rem">// Проверка типа переменных</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a>:
          <span class="kw">if</span>(strcmp((<span class="kw">char</span>*)ExtParam,<span class="str">"{SSIV}"</span>)==<span class="const">0</span>)
            <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
          <span class="kw">return</span> <a class="hidden" href="RDS_BFM_VARCHECK.htm#light_ref3" title="Возврат RDS_BFR_BADVARSMSG">RDS_BFR_BADVARSMSG</a>;

        <span class="rem">// Выполнение такта моделирования</span>
        <span class="kw">case</span> <a class="hidden" href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a>:
          <span class="kw">switch</span>(Type)
            { <span class="kw">case</span> <span class="const">0</span>: <span class="rem">// Выдать целое число</span>
                <span class="rem">// Установить целый тип выхода</span>
                i_ptr=(<span class="kw">int</span>*)<a class="hidden" href="rdsSetRuntimeType.htm" title="А.5.14.19. rdsSetRuntimeType &ndash; установить фактический тип переменной произвольного типа">rdsSetRuntimeType</a>(py,<span class="str">"I"</span>);
                <span class="rem">// Присвоить выходу значение</span>
                <span class="kw">if</span>(i_ptr) *i_ptr=<span class="const">1</span>;
                <span class="kw">break</span>;
              <span class="kw">case</span> <span class="const">1</span>: <span class="rem">// Выдать вещественное число</span>
                <span class="rem">// Установить вещественный тип выхода</span>
                d_ptr=(<span class="kw">double</span>*)<a class="hidden" href="rdsSetRuntimeType.htm" title="А.5.14.19. rdsSetRuntimeType &ndash; установить фактический тип переменной произвольного типа">rdsSetRuntimeType</a>(py,<span class="str">"D"</span>);
                <span class="rem">// Присвоить выходу значение</span>
                <span class="kw">if</span>(d_ptr) *d_ptr=<span class="const">2.0</span>;
                <span class="kw">break</span>;
              <span class="kw">default</span>: <span class="rem">// Выдать матрицу</span>
                <span class="rem">// Тип выхода – матрица double</span>
                v_ptr=<a class="hidden" href="rdsSetRuntimeType.htm" title="А.5.14.19. rdsSetRuntimeType &ndash; установить фактический тип переменной произвольного типа">rdsSetRuntimeType</a>(py,<span class="str">"MD"</span>);
                <span class="kw">if</span>(v_ptr)
                  { <span class="kw">double</span> *array;
                    <span class="rem">// Установить размер матрицы</span>
                    <a class="hidden" href="rdsResizeVarArray.htm" title="А.5.15.10. rdsResizeVarArray &ndash; изменить размер матрицы/массива">rdsResizeVarArray</a>(v_ptr,<span class="const">2</span>,<span class="const">2</span>,FALSE,NULL);
                    <span class="rem">// Получить указатель на первый элемент</span>
                    array=(<span class="kw">double</span>*)<a class="hidden" href="RDS_ARRAYDATA.htm" title="А.5.15.2. Макрос RDS_ARRAYDATA &ndash; указатель на первый элемент матрицы/массива">RDS_ARRAYDATA</a>(v_ptr);
                    <span class="rem">// Заполнить матрицу числами 1,2,3,4</span>
                    <span class="kw">for</span>(<span class="kw">int</span> i=<span class="const">0</span>;i&lt;<span class="const">4</span>;i++)
                      array[i]=i+<span class="const">1</span>;
                  }
            } <span class="rem">// Конец switch(Type)</span>
          <span class="kw">break</span>;

      }
    <span class="kw">return</span> <a class="hidden" href="app_a_2_1.htm#ref2" title="Возврат RDS_BFR_DONE">RDS_BFR_DONE</a>;
  <span class="rem">// Отмена макроопределений</span>
  <span class="preproc">#undef py</span>
  <span class="preproc">#undef Type</span>
  <span class="preproc">#undef Ready</span>
  <span class="preproc">#undef Start</span>
  <span class="preproc">#undef pStart</span>
  }
  <span class="rem">//=========================================</span></pre>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="pm_2_5_5.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="pm_2_5_7.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="pm_index.htm#light_htm:pm_2_5_6">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
