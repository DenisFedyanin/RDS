<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>А.5.3.3. rdsLockBlockData &ndash; включение блокировки данных</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="app_index.htm">Приложения</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a">Приложение А. Функции, константы и структуры RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_5">А.5. Сервисные функции RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_5_3">А.5.3. Синхронизация потоков RDS</a></p>
<div class="level"><p>А.5.3.3. <span class="cpp">rdsLockBlockData</span> &ndash; включение блокировки данных</p>
</div>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="rdsCallerThreadType.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="rdsUnlockAndCall.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:rdsLockBlockData">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Приложения</h1>
<h2 class="off">Приложение А. Функции, константы и структуры RDS</h2>
<h3 class="off">А.5. Сервисные функции RDS</h3>
<h4 class="off">А.5.3. Синхронизация потоков RDS</h4>
<h5>А.5.3.3. <span class="cpp">rdsLockBlockData</span> &ndash; включение блокировки данных</h5>


<p>Функция <span class="cpp">rdsLockBlockData</span> включает блокировку данных загруженной схемы
для всех потоков, кроме вызвавшего эту функцию. Для выключения блокировки используется функция
<span class="cpp"><a href="rdsUnlockBlockData.htm" title="А.5.3.5. rdsUnlockBlockData &ndash; выключение блокировки данных">rdsUnlockBlockData</a></span>.</p>

<pre class="cpp">  <span class="kw">void</span> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> rdsLockBlockData(<span class="kw">void</span>);</pre>

<p class="apphdr">Тип указателя на эту функцию</p>
<p><span class="cpp">RDS_VV</span></p>

<p class="apphdr">Примечания</p>
<p>В RDS одновременно может работать несколько потоков: в <a href="um_1_3.htm#ref3" title="Режим расчета">режиме расчета</a>,
как правило, вместе с главным потоком приложения работает еще и поток расчета. Кроме того, модели блоков
могут создавать свои потоки средствами Windows API. Поэтому в RDS, как и в любом многопоточном
приложении, имеются средства блокировки данных: нельзя допускать, чтобы разные потоки одновременно обращались
к одним и тем же данным в памяти. Поскольку потоки работают параллельно, если один из них начнет запись
в какую-либо область памяти, а другой попытается в то же самое время считать данные из этой области
или записать туда свои данные, может возникнуть конфликт, который приведет к считыванию неверных
данных и другим серьезным ошибкам.</p>

<p>Блокировка данных включается автоматически при вызове функции модели блока или модуля автоматической компиляции,
поэтому внутри этих функций о ней можно не задумываться. Если же нужно обратиться к данным блока,
модуля автокомпиляции или вызвать сервисную функцию RDS из процедуры немодального окна (которая
вызывается Windows в произвольные моменты времени без синхронизации с RDS) или из потока,
созданного средствами Windows API, перед обращением необходимо вызвать функцию <span class="cpp">rdsLockBlockData</span>,
а после него &ndash; <span class="cpp"><a href="rdsUnlockBlockData.htm" title="А.5.3.5. rdsUnlockBlockData &ndash; выключение блокировки данных">rdsUnlockBlockData</a></span>.</p>

<p>Функция <span class="cpp">rdsLockBlockData</span> работает следующим образом:</p>

<ul>
  <li>если данные не заблокированы ни одним из потоков, функция блокирует данные, присваивает внутреннему
  счетчику блокировок единицу и возвращает управление вызвавшему потоку;</li>
  <li>если данные уже заблокированы тем же самым потоком, из которого вызвана функция, внутренний счетчик
  блокировок увеличивается на единицу и управление возвращается вызвавшему потоку;</li>
  <li>если данные заблокированы другим потоком, функция ждет снятия этой блокировки и, дождавшись ее,
  блокирует данные (присваивая единицу внутреннему счетчику блокировок), а затем возвращает управление вызвавшему
  потоку.</li>
</ul>

<p class="noindent">Таким образом, вызвав <span class="cpp">rdsLockBlockData</span>, программист может быть
уверен, что, после того, как она завершится, данные RDS будут в монопольном распоряжении вызвавшего
потока. Поскольку функция имеет внутренний счетчик блокировок, ее можно вызывать из одного потока много
раз подряд &ndash; если данные заблокированы этим же самым потоком, она будет возвращать ему
управление немедленно. Такой счетчик позволяет вкладывать вызовы
<span class="cpp">rdsLockBlockData</span>/<span class="cpp">rdsUnlockBlockData</span> друг в друга: данные
будут разблокированы только тогда, когда <span class="cpp">rdsUnlockBlockData</span> будет вызвана столько
же раз, сколько раз была вызвана <span class="cpp">rdsLockBlockData</span>.</p>

<p><span class="emph">Крайне важно</span> вызывать <span class="cpp">rdsUnlockBlockData</span> как можно
быстрее после вызова <span class="cpp">rdsLockBlockData</span>, поскольку попытки других потоков
заблокировать данные будет приводить к их остановке до снятия блокировки этим потоком, что может
привести к задержкам в работе RDS. Если необходимо провести над данными какую-либо сложную
и длительную операцию в режиме расчета, лучше всего будет заблокировать их, скопировать в какие-либо
внутренние структуры, а затем разблокировать и провести необходимые операции уже над данными во
внутренних структурах.</p>

<p>Использование функций <span class="cpp">rdsLockBlockData</span> и <span class="cpp">rdsUnlockBlockData</span>
рассматривается в <a href="pm_1_8.htm" title="&sect;1.8. Открытие окон в модели блока">&sect;1.8 руководства программиста</a>.</p>

<p class="apphdr">См. также</p>
<p class="seealso"><span class="cpp"><a href="rdsUnlockBlockData.htm" title="А.5.3.5. rdsUnlockBlockData &ndash; выключение блокировки данных">rdsUnlockBlockData</a></span>,
<span class="cpp"><a href="rdsBlockDataSyncCall.htm" title="А.5.3.1. rdsBlockDataSyncCall &ndash; вызвать функцию с блокировкой данных">rdsBlockDataSyncCall</a></span>,
<span class="cpp"><a href="rdsUnlockAndCall.htm" title="А.5.3.4. rdsUnlockAndCall &ndash; вызвать функцию, сняв блокировку данных">rdsUnlockAndCall</a></span>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="rdsCallerThreadType.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="rdsUnlockAndCall.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:rdsLockBlockData">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
