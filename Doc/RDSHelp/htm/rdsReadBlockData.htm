<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="app_index.htm">Приложения</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a">Приложение А. Функции, константы и структуры RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_5">А.5. Сервисные функции RDS</a></p>
<div class="level"><p><a href="app_index.htm#light_htm:app_a_5_10">А.5.10. Загрузка и сохранение данных блока</a></p>
<div class="level"><p>А.5.10.1. <span class="cpp">rdsReadBlockData</span> &ndash; считать данные блока в двоичном формате</p>
</div>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="rdsSetLayerPosition.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="rdsReportTextLoadError.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:rdsReadBlockData">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Приложения</h1>
<h2 class="off">Приложение А. Функции, константы и структуры RDS</h2>
<h3 class="off">А.5. Сервисные функции RDS</h3>
<h4>А.5.10. Загрузка и сохранение данных блока</h4>
<p class="abstract">Описываются функции, используемые при загрузке и сохранении параметров и состояния блока (см. <a href="pm_index.htm#light_htm:pm_2_8" title="&sect;2.8. Сохранение и загрузка параметров блока">&sect;2.8 руководства программиста</a>).</p>
<h5>А.5.10.1. <span class="cpp">rdsReadBlockData</span> &ndash; считать данные блока в двоичном формате</h5>


<p>Функция <span class="cpp">rdsReadBlockData</span> считывает двоичные данные блока, ранее записанные функцией
<span class="cpp"><a href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a></span>.</p>

<pre class="cpp">  <a class="hidden" href="app_ids.htm#light_ref11" title="Логический тип Windows API">BOOL</a> <a class="hidden" href="app_ids.htm#light_ref24" title="Тип вызова сервисных функций">RDSCALL</a> rdsReadBlockData(
      <a class="hidden" href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a> Buffer,    <span class="rem">// Указатель на начало данных</span>
      <span class="kw">int</span> Size          <span class="rem">// Размер данных</span>
  );</pre>

<p class="apphdr">Тип указателя на эту функцию</p>
<p><span class="cpp">RDS_BpVI</span></p>

<p class="apphdr">Параметры</p>

<dl>
  <dt><span class="cpp">Buffer</span>&emsp;(<span class="cpp"><i><a href="app_ids.htm#light_ref21" title="Указатель на любые данные (void*)">LPVOID</a></i></span>)</dt>
  <dd>Указатель на начало области памяти, в которую нужно загрузить считанные данные.</dd>

  <dt><span class="cpp">Size</span>&emsp;(<span class="cpp"><i>int</i></span>)</dt>
  <dd>Размер считываемых данных в байтах.</dd>
</dl>

<p class="apphdr">Возвращаемое значение</p>
<p><span class="cpp">TRUE</span> &ndash; данные считаны успешно,
<span class="cpp">FALSE</span> &ndash; ошибка чтения (осталось меньше <span class="cpp">Size</span>
еще не считанных данных).</p>

<p class="apphdr">Примечания</p>
<p>Эта функция может вызываться только из функции модели блока в момент реакции на события загрузки данных
<span class="cpp"><a href="RDS_BFM_LOADBIN.htm" title="А.2.5.4. RDS_BFM_LOADBIN &ndash; загрузка данных блока в двоичном формате">RDS_BFM_LOADBIN</a></span> и загрузки состояния
<span class="cpp"><a href="RDS_BFM_LOADSTATE.htm" title="А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока">RDS_BFM_LOADSTATE</a></span> в двоичном формате. Во всех остальных случаях функция немедленно
возвращает <span class="cpp">FALSE</span>.</p>

<p>При загрузке данных или состояния каждого блока в двоичном формате RDS известен источник этих данных
(это может быть файл на диске или область памяти) и общий размер сохраненных данных. Каждый вызов функции
<span class="cpp">rdsReadBlockData</span> считывает из этого источника <span class="cpp">Size</span>
байтов начиная с текущей позиции, записывает их в память по адресу <span class="cpp">Buffer</span> и
перемещает внутренний указатель этого источника данных вперед на <span class="cpp">Size</span>. Эта
функция очень похожа на большинство функций стандартных библиотек, читающих данные из файла, только в ней
не нужно указывать дескриптор файла или другого источника данных &ndash; он определяется
RDS и инициализируется перед вызовом реакций на события <span class="cpp">RDS_BFM_LOADBIN</span> и
<span class="cpp">RDS_BFM_LOADSTATE</span>.</p>

<p>Функция не может считать данных больше, чем было записано функцией <span class="cpp">rdsWriteBlockData</span>
при их сохранении. Если, например, при сохранении данных (событие <span class="cpp"><a href="RDS_BFM_SAVEBIN.htm" title="А.2.5.6. RDS_BFM_SAVEBIN &ndash; запись данных блока в двоичном формате">RDS_BFM_SAVEBIN</a></span>)
или состояния (событие <span class="cpp"><a href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a></span>) было всего записано 20 байтов одним или
нескольким последовательными вызовами <span class="cpp">rdsWriteBlockData</span>, вызовами
<span class="cpp">rdsReadBlockData</span> тоже можно считать не более двадцати байтов, не важно,
будет это 20 вызовов для чтения по одному байту, два последовательных вызова для чтения пяти и пятнадцати байтов,
один вызов для чтения двадцати байтов и т.п. Если при очередном вызове в параметре <span class="cpp">Size</span>
будет указано больше байтов, чем осталось в источнике, функция вернет <span class="cpp">FALSE</span>.</p>

<p class="apphdr">Пример</p>
<p>Примеры использования функции <span class="cpp">rdsReadBlockData</span> приведены
в <a href="pm_2_8_2.htm" title="&sect;2.8.2. Сохранение параметров в двоичном формате">&sect;2.8.2</a>,
<a href="pm_2_12_4.htm" title="&sect;2.12.4. Реакция блоков на клавиатуру">&sect;2.12.4</a> и
<a href="pm_2_14_3.htm" title="&sect;2.14.3. Сохранение и загрузка состояния блоков">&sect;2.14.3 руководства программиста</a>.</p>

<p class="apphdr">См. также</p>
<p class="seealso"><span class="cpp"><a href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a></span>,
<span class="cpp"><a href="RDS_BFM_LOADBIN.htm" title="А.2.5.4. RDS_BFM_LOADBIN &ndash; загрузка данных блока в двоичном формате">RDS_BFM_LOADBIN</a></span>,
<span class="cpp"><a href="RDS_BFM_LOADSTATE.htm" title="А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока">RDS_BFM_LOADSTATE</a></span>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="rdsSetLayerPosition.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="rdsReportTextLoadError.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="app_index.htm#light_htm:rdsReadBlockData">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
