<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;1.2. Блоки и связи в RDS, их типы и основные параметры</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_1">Глава 1. Необходимые сведения об устройстве RDS</a></p>
<div class="level"><p>&sect;1.2. Блоки и связи в RDS, их типы и основные параметры</p>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_1_1.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_1_3.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 1. Необходимые сведения об устройстве RDS</h2>
<h3>&sect;1.2. Блоки и связи в RDS, их типы и основные параметры</h3>
<p class="abstract">Кратко описываются типы блоков, из которых в RDS состоит каждая схема, особенности каждого из этих типов, а также общие параметры блоков и способ их соединения.</p>


<p><span id="ref2"><span id="ref1">Схема</span></span>
в RDS состоит из набора отдельных
<span class="term" id="light_ref2">блоков</span>,
соединенных друг с другом
<span class="term" id="light_ref1">связями</span>.
<span id="ref3">Блоку</span>
может ставиться в соответствие
функция-<span class="term" id="light_ref3">модель</span>
во внешней библиотеке (DLL), определяющая
его реакцию на различные события и действия пользователя. Блоки либо
<a href="um_2_5.htm" title="&sect;2.5. Добавление в схему стандартных блоков">добавляются</a> в
схему из библиотеки или панели блоков, либо
<a href="um_2_9_1.htm" title="&sect;2.9.1. Создание простого блока и окно его параметров">создаются</a>
пользователем самостоятельно. В схеме они могут выглядеть по-разному: большинство блоков,
выполняющих простые функции, изображается прямоугольниками с текстом или значком
внутри (например, стандартный интегратор обычно изображается квадратом со
знаком интеграла), более сложные блоки могут иметь анимированные изображения,
изменяющиеся в зависимости от состояния блока (например, индикаторы и графики).
Изображение блока создается его разработчиком, но, в некоторых пределах,
может быть изменено пользователем (см.
<a href="um_2_9_1.htm#ref11" title="Параметры блока - внешний вид">&sect;2.9.1</a> и
<a href="um_index.htm#light_htm:um_2_10" title="&sect;2.10. Редактирование векторной картинки блока">&sect;2.10</a>).</p>

<p><span id="ref4">У большинства блоков</span>
есть набор
<span class="term" id="light_ref4"><a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a></span>,
которые служат для хранения данных и передачи их между блоками.
Статическая переменная может быть входом блока, выходом или внутренней.
Выход одного блока может соединяться
со входами нескольких других при помощи связи, которая изображается как линия
(возможно, разветвленная) со стрелками в местах соединения со входами блоков.
Связи
<a href="um_2_7_1.htm" title="&sect;2.7.1. Общие принципы создания связей">создаются пользователем</a>
при редактировании схемы. Каждая связь может быть подключена только к одному
выходу блока и к произвольному числу входов. К одному входу блока может быть
подключено несколько связей, в этом случае на вход будут переданы данные той
связи, которая сработала последней. Связь не может реагировать на какие-либо
события или изменять передаваемые данные, вся обработка должна осуществляться в
блоках, к которым подключена эта связь.
<span id="ref5">Кроме</span> обычных связей, в схеме могут
присутствовать
<span class="term" id="light_ref5"><a href="um_2_8.htm" title="&sect;2.8. Использование шин">шины</a></span> &ndash;
группы связей, изображаемых одной линией, как правило, жирной. Шина состоит из
независимых друг от друга каналов передачи данных, к которым снаружи могут
подключаться обычные связи (одна – ко входу канала, произвольное число – к выходу).</p>

<p><span id="ref6">Блоки</span>

также могут создавать и уничтожать
<span class="term" id="light_ref6">динамические переменные</span>,
доступные нескольким блокам одновременно. Они обычно используются для передачи каких-либо
часто используемых данных, которые требуются одновременно большому количеству блоков,
и рисование многочисленных связей для которых загромоздило бы схему.
<span id="ref7">Например</span>, все
стандартные блоки в RDS читают значение текущего системного времени из
динамической переменной с именем
&laquo;<span class="rdsvar"><span id="light_ref7">DynTime</span></span>&raquo;. Работа блоков с
динамическими переменными, как правило, скрыта от пользователя, и
реализуется разработчиками моделей этих блоков программно.</p>

<p><span id="ref8">Все блоки</span>

в RDS принадлежат к одному из пяти <span id="light_ref8">типов</span>:</p>
<ul>

  <div class="picright"><div class="container" id="pic1">
<img src="../img/SimpleBlock.png" width="204" height="107" alt="Простой блок с подключенными связями" />
<p id="light_pic1">Рис.&nbsp;2. Простой блок<br />с подключенными связями</p>
</div></div>


  <li><span class="term"><span id="light_ref9">Простой блок</span></span>.
  Это &ndash; самый распространенный тип блока
  (<a href="#pic1" title="Простой блок с подключенными связями">рис.&nbsp;2</a>).
  Его поведение определяется только его параметрами и
  функцией модели. Первые две переменных любого простого блока всегда
  жестко зафиксированы: первая из них является входом, управляющим запуском модели блока,
  а вторая &ndash; выходом, сигнализирующим о срабатывании модели и разрешающим передачу
  данных по связям. В большинстве случаев пользователю не нужно думать о подключении
  этих специальных переменных: модели блоков обычно написаны так, чтобы блок автоматически
  срабатывал при изменении его входов или по прошествии определенного времени.
  Тем не менее, некоторые блоки позволяют управлять своей работой при помощи входа
  запуска &ndash; такая возможность указывается в описании каждого конкретного блока.
  В некоторых случаях создаются простые блоки без моделей &ndash; если задать такому блоку
  <a href="um_index.htm#light_htm:um_2_10" title="&sect;2.10. Редактирование векторной картинки блока">векторную картинку</a> и связать ее элементы с входами блока,
  можно создавать анимированные изображения, движущиеся и изменяющиеся согласно значениям,
  поступающим на входы.</li>

  <div class="picright"><div class="container" id="pic2">
<img src="../img/SubSystem.png" width="284" height="328" alt="Подсистема с внешними входами Input1 и Input2 и выходом Output1" />
<p id="light_pic2">Рис.&nbsp;3. Подсистема с внешними<br />входами &laquo;<span class="rdsvar">Input1</span>&raquo; и &laquo;<span class="rdsvar">Input2</span>&raquo; и<br /> выходом &laquo;<span class="rdsvar">Output1</span>&raquo;</p>
</div></div>


  <li><span class="term"><span id="light_ref10">Подсистема</span></span> &ndash;  блок,
  <a href="um_2_11_1.htm" title="&sect;2.11.1. Общие сведения о подсистемах">содержащий внутри себя</a>
  другие блоки и связи
  (<a href="#pic2" title="Подсистема с внешними входами Input1 и Input2 и выходом Output1">рис.&nbsp;3</a>).
  Каждая подсистема отображается в отдельном окне.
  <span id="ref11">Схема</span>
  
  всегда содержит хотя бы одну подсистему &ndash;
  <span class="term" id="light_ref11">корневую</span> (главную),
  в которой содержатся все остальные блоки схемы. Подсистема может быть создана
  пользователем внутри любой другой подсистемы, вложенность подсистем друг в друга
  не ограничена.</li>

  <li><span class="term"><span id="light_ref12">Внешний вход</span></span> &ndash;
  блок, служащий для
  <a href="um_2_11_2.htm" title="&sect;2.11.2. Создание подсистемы и размещение в ней блоков">передачи данных внутрь подсистемы</a>.
  <span id="ref13">Он</span>
  
  всегда имеет единственную статическую переменную-выход, при этом ей всегда
  соответствует статическая переменная-вход того же типа в
  <span class="term" id="light_ref13">родительской</span>
  подсистеме (то есть в подсистеме, внутри которой находится этот блок). Для того,
  чтобы передать данные внутрь подсистемы, необходимо присоединить связь к
  переменной-входу в этой подсистеме, затем найти внутри нее внешний вход,
  соответствующий этой переменной, и продолжить связь от него.
  Например, на <a href="#pic2" title="Подсистема с внешними входами Input1 и Input2 и выходом Output1">рис.&nbsp;3</a> связь, подключенная к входу
  &laquo;<span class="rdsvar">Input1</span>&raquo; подсистемы &laquo;<span class="rdsvar">Sys1</span>&raquo;,
  продолжается внутри нее от внешнего входа &laquo;<span class="rdsvar">Input1</span>&raquo;. Внешние входы могут
  быть созданы в любой подсистеме в любом количестве,
  в их параметрах указывается имя и тип переменной, которая создается в родительской
  подсистеме. Чаще всего сам внешний вход называют так же, как и соответствующую
  ему переменную, но это не обязательно.</li>

  <li><span class="term"><span id="light_ref14">Внешний выход</span></span> &ndash;
  блок, служащий для передачи данных изнутри подсистемы наружу. Он всегда имеет
  единственную статическую переменную-вход, при этом ей всегда соответствует статическая
  переменная-выход того же типа в родительской подсистеме. Для передачи данных наружу
  необходимо присоединить связь к единственной переменной внешнего выхода,
  а затем продолжить ее от соответствующего выхода самой подсистемы. Как и внешние
  входы, внешние выходы могут быть созданы в любой подсистеме в любом количестве,
  имя и тип соответствующего им выхода подсистемы задается в их параметрах.</li>

  <div class="picright"><div class="container" id="pic3">
<img src="../img/BusPort.png" width="297" height="334" alt="Ввод шины в подсистему" />
<p id="light_pic3">Рис.&nbsp;4. Ввод шины в подсистему</p>
</div></div>

  <li><span class="term"><span id="light_ref15">Ввод шины</span></span>
  &ndash; блок, позволяющий
  <a href="um_2_11_3.htm" title="&sect;2.11.3. Ввод шин в подсистему">соединить</a>
  шину внутри подсистемы с шиной снаружи. Число таких
  вводов в подсистеме не ограничено. Для того, чтобы соединить внутреннюю и внешнюю
  шины, необходимо добавить в подсистему ввод, соединить с ним внутреннюю шину, а затем
  соединить внешнюю шину с подсистемой, указав имя этого ввода (можно действовать и
  в обратной последовательности). Соединенные шины имеют один и тот же набор каналов
  и обеспечивают передачу данных между подсистемами. Например, на
  <a href="#pic3" title="Ввод шины в подсистему">рис.&nbsp;4</a>
  изображены две шины с тремя каналами &laquo;<span class="rdsvar">Alpha</span>&raquo;,
  &laquo;<span class="rdsvar">Beta</span>&raquo; и &laquo;<span class="rdsvar">Gamma</span>&raquo; каждая. В верхней части рисунка
  изображена шина в основной подсистеме &ndash; в ней данные с полей ввода
  поступают в каналы &laquo;<span class="rdsvar">Alpha</span>&raquo; и &laquo;<span class="rdsvar">Beta</span>&raquo;, а данные с
  канала &laquo;<span class="rdsvar">Gamma</span>&raquo; подаются на индикатор. Эта шина через ввод
  &laquo;<span class="rdsvar">Port1</span>&raquo; соединена с подсистемой &laquo;<span class="rdsvar">Sys2</span>&raquo;, соединенная
  шина внутри которой получает данные для канала &laquo;<span class="rdsvar">Gamma</span>&raquo; с поля ввода
  и выдает данные каналов &laquo;<span class="rdsvar">Alpha</span>&raquo; и &laquo;<span class="rdsvar">Beta</span>&raquo; на индикаторы.</li>

</ul>

<p>Все пять перечисленных выше типов блоков по умолчанию имеют стандартные изображения,
но пользователь может, при необходимости, задать им другие.  Подсистемы, внешние
входы и выходы и вводы шин, как и простые блоки, могут иметь функцию модели, но она
<a href="um_1_3.htm#ref5" title="В расчете участвуют только простые блоки">не сможет влиять на данные</a>,
передаваемые в подсистему и из нее,
поэтому подключение моделей к подсистемам, входам, выходам и вводам шин используется
достаточно редко.</p>

<p>Блоки можно сохранять в отдельные файлы для последующего использования в других схемах.
Библиотека и панель
<a href="um_2_5.htm" title="&sect;2.5. Добавление в схему стандартных блоков">стандартных блоков</a>
RDS, фактически, представляют собой
набор отдельных файлов блоков в соответствующих папках.
<span id="ref16">Простые</span>
<span id="ref17">блоки</span>, внешние входы и выходы, вводы
шин обычно сохраняются в файлы
с расширением &laquo;<span class="file"><span id="light_ref16">.blk</span></span>&raquo;,
а подсистемы &ndash; в файлы с
расширением &laquo;<span class="file"><span id="light_ref17">.rds</span></span>&raquo;, как и
схемы (схема на диске &ndash; это, по сути, ее корневая подсистема, сохраненная
в файл). Таким образом, сохраненные схемы можно, при желании, использовать
как блоки в других схемах.</p>

<p><span id="ref18">Каждый</span> блок схемы имеет
<span class="term" id="light_ref18">имя</span>,
уникальное в его родительской подсистеме. Имя блока &ndash; это строка произвольной длины,
которая не может содержать символов двоеточия, доллара и коммерческого AT
(&laquo;&nbsp;:&nbsp;&raquo;, &laquo;&nbsp;$&nbsp;&raquo; и &laquo;&nbsp;@&nbsp;&raquo;).
При добавлении в схему нового блока ему автоматически присваивается уникальное имя,
основанное на его типе или, если он &ndash; стандартный, его имени в библиотеке.
Позже это имя может быть <a href="um_2_9_1.htm#pic4" title="Вкладка общие окна параметров простого блока">изменено</a>
пользователем. Имя блока обычно отображается в окне подсистемы непосредственно под
изображением этого блока, но, при необходимости, оно может быть
<a href="um_2_6.htm#light_ref10" title="Положение имени блока">перемещено</a> или вообще отключено. Можно также отключить
отображение всех имен блоков в конкретной подсистеме при помощи пункта главного меню
или кнопки в <a href="um_2_3.htm" title="&sect;2.3. Элементы и меню окна подсистемы">окне подсистемы</a>.</p>

<p><span id="ref19">Поскольку</span> в разных подсистемах блоки могут
иметь одинаковые имена, для однозначного указания конкретного блока схемы
используется его <span class="term" id="light_ref19">полное имя</span>. Полное имя
блока начинается с
двоеточия, за которым следует последовательное перечисление через двоеточие всех
имен подсистем на пути от корневой подсистемы до этого блока, которое завершается
именем самого блока. Например, полное имя &laquo;<span class="rdsvar">:Sys1:Sys100:Block1</span>&raquo;
говорит о том, что блок с именем Block1 находится в подсистеме Sys100, которая, в
свою очередь, находится в подсистеме Sys1 корневой подсистемы. Полные имена блоков
могут использоваться в сообщениях об ошибках, в
<a href="um_2_17.htm" title="&sect;2.17. Просмотр информации о загруженной схеме">окне информации о схеме</a>, в списке результатов
при <a href="um_2_15_2.htm" title="&sect;2.15.2. Поиск блоков">поиске блоков</a> и т.п.</p>

<p><span id="ref20">Для</span>
каждого блока, независимо от его типа,
может быть задан <span class="term" id="light_ref20">комментарий</span> &ndash;
произвольный текст, состоящий
из нескольких строк. Этот текст
<a href="um_2_9_1.htm#pic4" title="Вкладка общие окна параметров простого блока">вводится</a> в
окне параметров блока и обычно никак
не влияет на его поведение. Он может использоваться для указания каких-либо
примечаний и пояснений к блоку, однако, поскольку пользователь может увидеть его,
только открыв окно параметров в режиме редактирования, разработчики блоков чаще
всего выносят важные примечания во всплывающие подсказки блоков, формируемые их
моделями. Некоторые простые модели блоков хранят в комментарии различные параметры в
текстовом виде &ndash; такое поведение должно быть явно указано в описании блока.
В большинстве случаев пользователь может использовать комментарий так, как
ему заблагорассудится.</p>

<p><span class="term"><span id="light_ref21">Внешний вид</span></span>
любого блока в окне подсистемы задается одним из трех возможных способов: картинкой,
прямоугольником с текстом, или программным рисованием моделью блока.
Конкретный способ обычно выбирается разработчиком блока, но пользователь, при желании,
может <a href="um_2_9_1.htm#pic5" title="Вкладка внешний вид окна параметров простого блока при выбранном изображении картинкой (картинка отсутствует)">изменить</a>
внешний вид любого блока, например, задав ему
векторную анимированную картинку вместо статичного прямоугольника с текстом.</p>

<p><span class="term"><span id="light_ref22">Картинка блока</span></span>
&ndash; это набор векторных элементов: прямоугольников, линий, многоугольников,
блоков текста и т.п. Некоторые элементы и группы элементов могут быть связаны с
переменными блока, в этом случае в режимах
<a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и
<a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a>
внешний вид блока будет отражать изменения этих переменных &ndash; элементы будут
появляться, исчезать, перемещаться и поворачиваться, будет меняться их текст,
цвет и т.п. Картинка задается в
<a href="um_2_10_1.htm" title="&sect;2.10.1. Общие сведения о редакторе картинки">редакторе</a>,
встроенном в RDS, который вызывается из окна параметров. Если для блока задано
отображение картинкой, а сама картинка не задана, блок будет иметь стандартный внешний
вид, определяемый его типом (например, на
рис. <a href="#pic2" title="Подсистема с внешними входами Input1 и Input2 и выходом Output1">3</a> и <a href="#pic3" title="Ввод шины в подсистему">4</a>
подсистемы, внешние входы и выходы и ввод шины имеют стандартный внешний вид).</p>

<p>Прямоугольник с текстом обычно используется в тех случаях, когда внешний вид блока
не должен изменяться &ndash; для большинства простых блоков достаточно названия в
прямоугольной рамке. Такой внешний вид блока
<a href="um_2_9_1.htm#pic7" title="Нижняя часть вкладки внешний вид окна параметров простого блока при при изображении прямоугольником">задается</a>
в окне параметров,
текст может состоять из нескольких строк, при этом указывается шрифт,
цвет текста и цвет прямоугольника. Задаваемый текст статичен, он не может быть
привязан к значению какой-либо переменной блока.</p>

<p>Рисование функцией модели &ndash; самый сложный способ задания внешнего вида блока,
он требует добавления в модель блока специальных функций рисования, поэтому пользователь
никак не может изменить рисуемое изображение. Это может сделать только программист &ndash;
разработчик блока. Пользователь, однако, может отключить такое рисование в
окне параметров блока
(см.&nbsp;<a href="um_2_9_1.htm" title="&sect;2.9.1. Создание простого блока и окно его параметров">&sect;2.9.1</a>), заменив его прямоугольником с
текстом или векторной картинкой. Программное рисование используется в блоках,
изображение которых устроено слишком сложно, чтобы формировать его другими способами
&ndash; например, в графиках, сложных числовых индикаторах и т.п.</p>

<p><span id="ref23">Независимо</span>
от способа формирования изображения блока, в окне его родительской подсистемы
это изображение будет находиться на
одном из <span class="term" id="light_ref23">слоев</span>.
Каждая подсистема схемы обладает своим списком слоев, количество которых не
ограничено &ndash; пользователь может добавлять и удалять их (при удалении слоя
все блоки и связи на нем не удаляются, а просто перемещаются на другой слой).
Для каждого слоя задается произвольное имя,
видимость, активность и близость к переднему плану.
<span class="term">Имя</span> слоя может быть любым, но оно должно быть уникальным в
данной подсистеме. В одной подсистеме не может быть двух слоев с одинаковыми
именами. Имена слоев используются в интерфейсе RDS в тех случаях, когда
пользователь должен указать конкретный слой для какой-либо операции (например,
для перемещения на него блока или связи). <span class="term">Видимость</span> слоя определяет, будут ли
блоки и связи, находящиеся на нем, отображаться в окне подсистемы &ndash; объекты на
невидимых слоях не отображаются. <span class="term">Активность</span> слоя в
режиме <a href="um_1_3.htm#ref1" title="Режим редактирования">редактирования</a> разрешает выбирать,
удалять и изменять параметры блоков и связей на нем, а в
режимах моделирования и расчета &ndash; нажимать на виртуальные кнопки,
вводить значения в поля и т.п. (неактивные блоки не реагируют на действия
пользователя и не могут быть изменены). <span class="term">Близость к переднему плану</span> определяет
взаимное перекрытие изображений блоков и связей: объекты на близких к переднему
плану слоях всегда перекрывают объекты на дальних. В пределах одного слоя близость
блоков и связей к переднему плану задается их
<a href="um_2_3.htm#light_ref9" title="Перемещение на задний план">взаимным расположением</a>, причем в одном слое
связи всегда рисуются поверх блоков. Разумеется, дальний блок ближнего слоя все
равно будет перекрывать ближний блок дальнего слоя.</p>

<p><span id="ref24">Если</span>
имя &ndash; неотъемлемая часть самого слоя, то видимость, активность и близость к
переднему плану относится к
<span class="term" id="light_ref24">конфигурации слоев</span>. В подсистеме может быть произвольное
число конфигураций слоев (пользователь может создавать и удалять их), в каждой из
которых каждый слой имеет свое состояние и свою близость к переднему плану.
Один и тот же слой в одной конфигурации может быть ближним, видимым и активным, в
другой &ndash; дальним неактивным, в третьей &ndash; невидимым. Использование
конфигураций позволяет быстро переключаться между разными внешними видами одной и
той же подсистемы, что бывает удобно при большом числе блоков и связей. В каждой
конфигурации есть <span class="term">текущий слой</span>, на котором по умолчанию размещаются все добавляемые
блоки и создаваемые связи. В разных конфигурациях текущий слой может отличаться.
Для добавления, удаления и изменения
параметров слоев и их конфигураций служит
<a href="um_2_12.htm" title="&sect;2.12.1. Использование слоев">окно редактора слоев</a>.</p>

<p><span id="ref25">Для</span>
управления видимостью блоков и связей кроме слоев можно использовать еще и
<span class="term" id="light_ref25">классы</span>. Класс &ndash; это созданное пользователем
множество с произвольным именем, к которому может принадлежать блок, связь или шина, причем каждый
объект может принадлежать одновременно к нескольким классам или не принадлежать ни к одному. В отличие
от слоев, набор которых может отличаться в разных подсистемах, классы создаются для всей схемы в
целом. В подсистемах индивидуально задается только видимость отдельных классов &ndash; хотя набор
классов и общий, в разных подсистемах могут быть видимыми разные классы. Редактирование списка классов
описано в <a href="um_2_12a.htm" title="&sect;2.12.2. Использование классов">&sect;2.12.2</a>. Принадлежность к классам задается в
окнах параметров <a href="um_2_9_1.htm#ref25" title="Задание классов блока">блоков</a>,
<a href="um_2_7_2.htm#ref7" title="Задание классов связи">связей</a> и <a href="um_2_8.htm#ref2" title="Окно параметров шины">шин</a>, а также через
<a href="um_2_15_3.htm#ref15" title="Задание классов в групповой установке">окно групповой установки</a>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_1_1.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_1_3.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
