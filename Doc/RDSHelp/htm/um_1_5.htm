<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;1.5. Динамические переменные</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_1">Глава 1. Необходимые сведения об устройстве RDS</a></p>
<div class="level"><p>&sect;1.5. Динамические переменные</p>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_1_4.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_1_6.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_5">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 1. Необходимые сведения об устройстве RDS</h2>
<h3>&sect;1.5. Динамические переменные</h3>
<p class="abstract">Описываются динамические переменные, которые создаются блоками в процессе работы и автоматически становятся доступными для других блоков. Использование динамических переменных для передачи данных не загромождает схему лишними связями, что иногда может оказаться удобным.</p>


<p><span id="light_ref1">Динамическая переменная</span>
программно создается моделью какого-либо блока, после чего другие блоки получают
возможность считывать и записывать ее значение &ndash; таким образом, блоки могут
обмениваться данными без явного проведения связей между ними. В отличие от
<a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a>
блоков, динамические переменные скрыты от пользователя &ndash; просмотреть или ввести
их значения и даже просто узнать об их существовании он может только в том случае,
если какой-либо блок предоставит ему такую возможность. В некоторых случаях блок
позволяет пользователю указать имена динамических переменных, с которыми
он работает &ndash; например, в окне настроек блока-графика можно указать имя
переменной, из которой блок считывает текущее значение времени. Динамические
переменные используются разработчиками моделей в тех случаях, когда необходимо
организовать передачу одинаковых данных большому количеству блоков, поскольку
связи в этом случае загромоздили бы всю схему.
<span id="ref3"><span id="ref2">Типичный пример</span></span> таких, необходимых всем,
данных &ndash; текущее значение системного времени, которое формируется
<span id="light_ref2">блоком-планировщиком</span>
расчета в динамической переменной с именем
&laquo;<span class="rdsvar"><span id="light_ref3">DynTime</span></span>&raquo;
и считывается оттуда всеми остальными блоками.</p>

<p>Несмотря на то, что пользователю не приходится иметь дело с динамическими переменными
напрямую, рассмотрим основные принципы доступа к ним, которые помогут лучше понять
работу некоторых блоков.</p>

<p>Любая динамическая переменная связана одновременно с двумя блоками: блоком, в
котором она расположена, и блоком, который ее создал, причем чаще всего эти два
блока не совпадают. Блок может разместить создаваемую им динамическую переменную в
одном из трех следующих блоков:</p>
<ul>
  <li>в самом себе;</li>
  <li>в своей <a href="um_1_2.htm#ref13" title="Родительская подсистема">родительской подсистеме</a>;</li>
  <li>в <a href="um_1_2.htm#ref11" title="Корневая подсистема">корневой подсистеме</a> схемы.</li>
</ul>

<p>Если динамическая переменная расположена в подсистеме, доступ к ней могут получить
только блоки, находящиеся в этой же подсистеме, или в подсистемах, вложенных в нее.
Если переменная расположена в блоке любого другого типа, доступ к ней сможет получить
только этот блок. По этой причине размещение блоком динамической переменной в самом
себе используется крайне редко &ndash; ее нельзя будет использовать для связи с
другими блоками, а для хранения своих личных данных у модели блока есть множество
других, более простых, способов. Гораздо чаще используется размещение динамической
переменной в родительской подсистеме &ndash; в этом случае считывать и записывать ее
значение смогут все &laquo;соседи&raquo; блока по подсистеме, а также блоки на
более глубоких уровнях вложенности. При этом блоки в подсистемах выше по иерархии
не увидят эту переменную. Такая иерархическая организация области видимости
динамических переменных позволяет использовать одинаковые переменные в разных
частях схемы: например, можно имитировать разное течение времени во всей схеме
и в отдельной ее подсистеме, создав динамические переменные &laquo;<span class="rdsvar">DynTime</span>&raquo;
в корневой и в этой отдельной подсистеме и изменять их значения с разной скоростью.</p>

<p>Размещение переменной в корневой подсистеме позволяет дать к ней доступ всем блокам
без исключения, поскольку в корневую подсистему вложены все остальные подсистемы и
блоки схемы. Чаще всего такие переменные используются для записи каких-либо глобальных
значений, общих для всей схемы.</p>

<p><span id="ref4">Доступ</span> к динамической переменной
организуется программно из модели блока при помощи
механизма <span class="term" id="light_ref4">подписки</span>,
который подробно рассматривается в
<a href="um_index.htm#light_htm:um_3_7_3" title="&sect;3.7.3. Работа с динамическими переменными">&sect;3.7.3 описания пользователя</a>
и <a href="pm_index.htm#light_htm:pm_2_6" title="&sect;2.6. Динамические переменные">&sect;2.6 руководства программиста</a>.
Этот механизм, как и создание динамических переменных, скрыт
от пользователя, однако некоторые блоки позволяют указать режим подписки: подписка
с поиском по иерархии и без такового. При подписке без поиска
RDS ищет переменную с заданным именем и типом в указанной
(родительской или корневой) подсистеме. Если переменная найдена, блоку
предоставляется доступ к ней, если нет, RDS ждет, когда она появится, и сообщает
об этом блоку.</p>

<p>Механизм подписки с поиском несколько сложнее &ndash; блок получает доступ к первой
встреченной динамической переменной с заданным именем и типом на пути от его
родительской подсистемы вверх по иерархии: если такая переменная есть в родительской
подсистеме, RDS предоставит блоку доступ к ней, если ее нет в родительской,
но она присутствует в подсистеме более высокого уровня, RDS найдет ее и
сообщит об этом блоку. Если заданной переменной не оказалось ни в одной подсистеме
от родительской до корневой, блок получит информацию об отсутствии переменной в
схеме. RDS при этом будет ждать появления такой переменной и, как только она
будет создана, даст подписавшемуся блоку доступ к ней. Если при поиске с подпиской
блок уже получил доступ к какой-то переменной, но после этого переменная с этим
же именем и типом была создана в подсистеме ближе по иерархии к запросившему
блоку, RDS автоматически переключит этот блок на использование этой, более
близкой, переменной. Если после этого близкая переменная будет удалена, RDS
снова переключит блок на дальнюю.</p>

<p>Рассмотрим в качестве примера схему, иерархия блоков которой представлена на
<a href="#pic1" title="Области видимости динамических переменных">рис.&nbsp;12</a>.
Корневая подсистема содержит в себе блок &laquo;<span class="rdsvar">Block1</span>&raquo; и подсистемы
&laquo;<span class="rdsvar">Sys1</span>&raquo; и &laquo;<span class="rdsvar">Sys2</span>&raquo;, подсистема &laquo;<span class="rdsvar">Sys1</span>&raquo;
содержит блок &laquo;<span class="rdsvar">Block2</span>&raquo; и подсистемы &laquo;<span class="rdsvar">Sys3</span>&raquo; и
&laquo;<span class="rdsvar">Sys4</span>&raquo; и т.д. согласно рисунку. В корневой подсистеме и в
подсистеме &laquo;<span class="rdsvar">Sys2</span>&raquo; созданы динамические переменные одинакового типа
с одинаковым именем &laquo;<span class="rdsvar">DynVar1</span>&raquo;. Каков тип этих переменных и что именно
за блоки находятся в подсистемах для данного примера не существенно.</p>

<div class="pic"><div class="container" id="pic1">
<img src="../img/DynVarTree.png" width="629" height="378" alt="Области видимости динамических переменных" />
<p id="light_pic1">Рис.&nbsp;12. Области видимости динамических переменных</p>
</div></div>


<p>Среди стандартных блоков RDS также есть блок, основная задача которого &ndash;
работа с динамической переменной, имя и тип которой задается пользователем.
Такие блоки можно использовать для передачи данных между блоками без
создания связей (<a href="#pic2" title="Стандартные блоки для работы с динамическими переменными">рис.&nbsp;13</a>).</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/DynVarBlocks.png" width="559" height="316" alt="Стандартные блоки для работы с динамическими переменными" />
<p id="light_pic2">Рис.&nbsp;13. Стандартные блоки для работы с динамическими переменными</p>
</div></div>


<p>На рисунке изображен фрагмент схемы, в которой рукоятка и поле ввода подключены к
таким блокам, записывающим данные в вещественную переменную &laquo;<span class="rdsvar">DynVar1</span>&raquo; и
целую переменную &laquo;<span class="rdsvar">DynVar2</span>&raquo; соответственно. Первая из них может,
например, содержать реальное значений какой-либо величины, а вторая &ndash; установленное
на это значение ограничение. В подсистеме &laquo;<span class="rdsvar">Sys1</span>&raquo; значения этих
переменных снимаются с таких же блоков и подаются на два разных входа блока
с индикаторной шкалой &ndash; реальное значение со входа &laquo;<span class="rdsvar">Main</span>&raquo;
изображается стрелкой в центре прибора, а ограничение со входа
&laquo;<span class="rdsvar">Ref</span>&raquo; &ndash; дополнительной красной линией на шкале.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_1_4.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_1_6.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_5">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
