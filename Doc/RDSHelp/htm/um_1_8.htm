<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;1.8. Автоматическая компиляция моделей блоков</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_1">Глава 1. Необходимые сведения об устройстве RDS</a></p>
<div class="level"><p>&sect;1.8. Автоматическая компиляция моделей блоков</p>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_1_7.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_2_1.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_8">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 1. Необходимые сведения об устройстве RDS</h2>
<h3>&sect;1.8. Автоматическая компиляция моделей блоков</h3>
<p class="abstract">Кратко описываются возможности модуля автоматической компиляции, позволяющего пользователю создавать собственные модели блоков.</p>




<p><span id="ref1">Если</span> пользователю недостаточно стандартных блоков, входящих в состав RDS,
он может написать свои собственные <span id="light_ref1">модели</span>,
воспользовавшись модулями автоматической компиляции. В RDS входят модули,
позволяющие создавать модели на языке C++ с использованием следующих компиляторов:</p>

<ul>
  <li><a href="um_3_2_1.htm" title="&sect;3.2.1. Установка и подключение компилятора Borland C++ 5.5">Borland C++ 5.5</a> (бесплатный);</li>
  <li><a href="um_3_2_2.htm" title="&sect;3.2.2. Установка и подключение компилятора Open Watcom C++">OpenWatcom C++</a> 1.4 (бесплатный);</li>
  <li><a href="um_3_2_3.htm" title="&sect;3.2.3. Установка и подключение компилятора Digital Mars C++">DigitalMars C++</a> (бесплатный);</li>
  <li><a href="um_3_2_4.htm" title="&sect;3.2.4. Установка и подключение компилятора MinGW GCC">MinGW gcc</a> 3.4.2 (бесплатный);</li>
  <li><a href="um_3_2_5.htm" title="&sect;3.2.5. Установка и подключение компилятора Microsoft Visual C++ 2003 toolkit">Microsoft Visual C 2003 toolkit</a> (бесплатный);</li>
  <li>Borland C++ Builder 6 (коммерческий);</li>
  <li>Microsoft Visual C++ 6 (коммерческий).</li>
</ul>

<p class="noindent">Фактически, эти модули представляют собой один и тот же модуль с
разными настройками параметров, поэтому, при необходимости, любой из них можно
настроить на работу и с каким-либо другим компилятором C++, если этот компилятор
позволяет создавать динамически подключаемые библиотеки (DLL) Windows и управляется из
командной строки. RDS также позволяет
<a href="um_2_19_1.htm" title="&sect;2.19.1. Подключение модулей автоматической компиляции моделей блоков">подключать</a>
другие модули автоматической
компиляции (в том числе и для других языков программирования), если таковые будут
<a href="pm_index.htm#light_htm:pm_4" title="Глава 4. Создание модулей автоматической компиляции">созданы</a> сторонними разработчиками.</p>

<p>Стандартный модуль автоматической компиляции позволяет пользователю сосредоточиться на
основных действиях, выполняемых блоком, беря на себя встраивание написанных им фрагментов
программы в необходимую для функционирования модели блока структуру программного кода
и вызов компилятора, который преобразует этот код в исполняемую библиотеку. Например,
для того, чтобы создать модель блока, складывающего вещественные входы
&laquo;<span class="rdsvar">x1</span>&raquo; и &laquo;<span class="rdsvar">x2</span>&raquo; и выдающего результат на выход
&laquo;<span class="rdsvar">y</span>&raquo;, пользователю достаточно в специальном окне редактора модели ввести
список входов и выходов блока и записать строку
&laquo;<span class="cpp">y=x1+x2;</span>&raquo;
(<a href="#pic1" title="Внешний вид окна редактора модели блока">рис.&nbsp;17</a>).
Эта строка фактически представляет собой оператор присваивания в синтаксисе языка C,
но для ее написания не требуется глубокого знания этого синтаксиса. Пользователю,
создающему модель, можно не задумываться о том, как заявленные им переменные
&laquo;<span class="rdsvar">x1</span>&raquo;, &laquo;<span class="rdsvar">x2</span>&raquo; и &laquo;<span class="rdsvar">y</span>&raquo; будут связаны с
входами и выходами блока в RDS &ndash; модуль автоматической компиляции
установит эту связь за него. Модели, создаваемые при помощи этого модуля, не
ограничиваются простыми алгебраическими выражениями, вроде приведенного выше &ndash;
модуль также позволяет использовать динамические переменные, записывать реакции блока
на действия пользователя и системные события, программно рисовать внешний вид блока,
описывать для этого блока окно настройки параметров и т.п. Во фрагментах программного
кода, которые пользователь вводит в редактор модели, можно использовать функции
стандартной математической библиотеки языка C, функции Windows API и
<a href="app_index.htm#light_htm:app_a" title="Приложение А. Функции, константы и структуры RDS">специализированные функции RDS</a>,
что позволяет создавать достаточно сложные блоки. Следует, однако, учитывать,
что использование автоматической компиляции накладывает на модель некоторые
ограничения &ndash; особенно сложные модели блоков (например, открывающие
дополнительные окна) лучше создавать вручную, в полноценной среде разработки,
содержащей развитые средства отладки. Кроме того, редактор модели в модуле
автоматической компиляции не поддерживает реакции блока на некоторые редко
используемые системные события. Тем не менее, средств, предоставляемых модулем,
будет вполне достаточно для создания большинства блоков.</p>
<div class="pic"><div class="container" id="pic1">
<img src="../img/AutocompExample.png" width="627" height="484" alt="Внешний вид окна редактора модели блока" />
<p id="light_pic1">Рис.&nbsp;17. Внешний вид окна редактора модели блока</p>
</div></div>


<p>Работа со стандартным модулем автокомпиляции и создание с его помощью моделей блоков
подробно описана в <a href="um_index.htm#light_htm:um_3" title="Глава 3. Использование стандартных модулей автокомпиляции">главе 3</a>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_1_7.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_2_1.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_1_8">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
