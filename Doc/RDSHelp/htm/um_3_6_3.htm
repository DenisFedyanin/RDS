<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.6.3. Динамические переменные блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_6">&sect;3.6. Окно редактора модели</a></p>
<div class="level"><p>&sect;3.6.3. Динамические переменные блока</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_6_2.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_4.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_3">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.6. Окно редактора модели</h3>
<h4>&sect;3.6.3. Динамические переменные блока</h4>
<p class="abstract">Описывается добавление в модель блока динамических переменных, с помощью которых блоки могут обмениваться информацией без явного проведения связей между ними.</p>


<div class="picright"><div class="container" id="pic1">
<img src="../img/AC_editor_dynvars.png" width="284" height="147" alt="Список динамических переменных" />
<p id="light_pic1">Рис.&nbsp;334. Список динамических переменных</p>
</div></div>


<p>В нижней части вкладки &laquo;<span class="menu">переменные</span>&raquo; дополнительной панели
<a href="um_3_6_1.htm" title="&sect;3.6.1. Элементы и меню окна редактора модели">окна редактора модели</a>, непосредственно под
<a href="um_3_6_2.htm" title="&sect;3.6.2. Статические переменные блока">списком статических переменных</a>, задается список
динамических переменных
(<a href="#pic1" title="Список динамических переменных">рис.&nbsp;334</a>).
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">Динамические переменные</a> создаются моделями блоков скрыто от
пользователя для обмена информацией друг с другом. Чаще всего такие переменные применяются в тех случаях,
когда множеству блоков схемы необходимо одно и то же значение &ndash; передача его по связям ко всем блокам во
всех подсистемах загромоздила бы схему. Типичный пример &ndash; текущее значение времени, которое нужно для
работы всем динамическим блокам.
<span id="ref1">Один</span>
<span id="ref2">из</span>
стандартных блоков RDS &ndash; <span id="light_ref1">планировщик расчета</span> &ndash;
создает вещественную динамическую переменную с именем
&laquo;<span class="rdsvar"><span id="light_ref2">DynTime</span></span>&raquo; и постоянно записывает в нее значение времени,
изменяющееся с заданной скоростью и шагом, а все остальные блоки находят эту переменную и считывают ее значение.
В RDS встроен специальный механизм <span class="term">подписки</span> на динамическую переменную,
который позволяет блоку найти переменную с заданным именем и типом &ndash; кратко он описан в
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">&sect;1.5 описания пользователя</a>, подробнее &ndash;
в <a href="pm_index.htm#light_htm:pm_2_6" title="&sect;2.6. Динамические переменные">&sect;2.6 руководства программиста</a>. Примеры моделей блоков, создающих динамические
переменные и подписывающихся на них, приведены в
<a href="um_index.htm#light_htm:um_3_7_3" title="&sect;3.7.3. Работа с динамическими переменными">&sect;3.7.3</a>, здесь же описан только интерфейс, позволяющий добавлять в модель
такие переменные.</p>

<p>Список динамических переменных состоит из четырех колонок:</p>

<ul>
  <li><span class="emph">Безымянная колонка</span> &ndash; содержит знак &laquo;+&raquo;, если модель блока
  создает эту переменную, изображение лупы, если модель будет обращаться к переменной, созданной другим блоком,
  или пустой белый квадрат, если вся работа с динамической переменной будет выполняться программистом
  вручную, путем
  <a href="um_3_7_7a.htm" title="&sect;3.7.8. Программное управление динамическими переменными">вызова функций-членов</a> создаваемого для нее объекта.</li>

  <li>&laquo;<span class="menu">Имя в C++</span>&raquo; &ndash; имя объекта, создаваемого в модели для доступа к данной динамической
  переменной. Именно это имя будет использоваться в текстах фрагментов программы, вводимых в редакторе модели,
  внутри операторов присваивания или получения значения переменной. Оно может отличаться от имени переменной в
  RDS, указываемого отдельно.</li>

  <li>&laquo;<span class="menu">Тип</span>&raquo; &ndash; описание <a href="um_3_6_2.htm#light_ref4" title="Типы переменных блока">типа</a> переменной. Динамические переменные в
  RDS имеют те же самые типы, что и статические.</li>

  <li>&laquo;<span class="menu">Имя в RDS</span>&raquo; &ndash; имя динамической переменной, используемое в RDS. Под этим именем
  переменная будет известна в RDS, оно будет использоваться для поиска и создания переменной.
  Имя либо жестко задается в модели (&laquo;фиксированное имя&raquo;), либо считывается из
  <a href="um_3_7_7.htm" title="&sect;3.7.7. Задание пользователем имен динамических переменных">настроечного параметра</a> блока. При жестком задании имени все
  блоки с данной моделью будут связаны с одной и той же динамической переменной, имена таких фиксированных
  переменных в списке отображаются в кавычках. Если же имя переменной хранится в параметре блока, его можно
  сделать разным в разных блоках с одной и той же моделью. Для
  динамических переменных, вся работа с которыми выполняется программистами вручную, имя не указывается.</li>
</ul>

<p class="noindent">Чаще всего, чтобы избежать путаницы, имя переменной в С++ делают таким же, как и имя в RDS, если оно фиксировано.
Однако, это не всегда возможно: требования к синтаксису динамических переменных в RDS мягче требований к
идентификаторам C++, и некоторые имена не могут быть использованы в программе без изменений. Формально имя
переменной в С++ может быть никак не связано с ее именем в RDS &ndash; например, объект для доступа к
стандартной динамической переменной времени &laquo;<span class="rdsvar">DynTime</span>&raquo; можно назвать просто
&laquo;<span class="cpp">t</span>&raquo;, и, в этом случае, во всех фрагментах программы, вводимых в редакторе модели, для обращения к
значению времени можно будет использовать объект <span class="cpp">t</span>.</p>

<p>Непосредственно под списком находятся кнопки, позволяющие добавлять, удалять и изменять переменные:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Кнопка</th>
    <th>Действие</th>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_ArrowUp.png" width="25" height="25" alt="Кнопка: вверх" /></td>
    <td>Переместить выбранную переменную на одну позицию вверх по списку.</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_ArrowDown.png" width="25" height="25" alt="Кнопка: вниз" /></td>
    <td>Переместить выбранную переменную на одну позицию вниз по списку.</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Plus.png" width="25" height="25" alt="Кнопка: добавить" /></td>
    <td>Добавить новую переменную (открывает отдельное окно, см. <a href="#pic2" title="Окно параметров динамической переменной">рис.&nbsp;335</a>).</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_properties.png" width="25" height="25" alt="Кнопка: свойства" /></td>
    <td>Изменить выбранную переменную (открывает отдельное окно).</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Delete.png" width="25" height="25" alt="Кнопка: удалить" /></td>
    <td>Удалить выбранную переменную.</td>
  </tr>
</table>
</div></div>

<p>Порядок переменных в списке нужен только для их визуального упорядочения на панели редактора модели.
Он никак отражается на работе модели, все динамические переменные равноправны.</p>

<p><span id="ref3">При</span>
добавлении новой переменной или изменении уже существующей ее параметры отображаются в отдельном
<span id="light_ref3">окне</span>
(<a href="#pic2" title="Окно параметров динамической переменной">рис.&nbsp;335</a>). В верхней части окна можно установить либо флажок &laquo;<span class="menu">стандартная переменная</span>&raquo; и выбрать
одну из стандартных динамических переменных в выпадающем списке (параметры стандартных переменных жестко заданы),
либо флажок &laquo;<span class="menu">произвольная переменная</span>&raquo;, если все параметры переменной указываются вручную.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_dynvarparams.png" width="630" height="364" alt="Окно параметров динамической переменной" />
<p id="light_pic2">Рис.&nbsp;335. Окно параметров динамической переменной</p>
</div></div>


<p>На данный момент в модуле автокомпиляции предусмотрена единственная стандартная переменная: текущее время
динамического расчета &laquo;<span class="rdsvar">DynTime</span>&raquo; типа <span class="cpp">double</span>. При ее выборе все поля
окна автоматически заполнятся запомненными для этой переменной параметрами &ndash; достаточно нажать кнопку
&laquo;<span class="menu">OK</span>&raquo;, чтобы связь с этой стандартной динамической переменной была добавлена в модель блока.
Изменить при этом можно будет только имя переменной в программе, все остальные поля ввода будут заблокированы.
<span id="ref4">Список</span> стандартных динамических переменных во внутреннем формате RDS
хранится в <span id="light_ref4">файле &laquo;<span class="file">dynvars.lst</span>&raquo;</span> в папке &laquo;<span class="file">Common</span>&raquo; внутри стандартной
<a href="um_2_18.htm#ref2" title="Папка настроек">папки настроек RDS</a>
(путь к стандартной папке настроек можно узнать,
<a href="um_2_18.htm" title="&sect;2.18. Настройки RDS">вызвав пункт главного меню</a>
&laquo;<span class="menu">сервис | настройки RDS</span>&raquo;), формат этого файла здесь не рассматривается.</p>

<p>Если в верхней части окна установлен флажок &laquo;<span class="menu">произвольная переменная</span>&raquo;, все параметры
динамической переменной следует ввести вручную. Должны быть заполнены следующие поля:</p>

<ul>
  <li>&laquo;<span class="menu">Имя переменной в RDS</span>&raquo; &ndash; имя динамической переменной. Все остальные блоки будут
  получать к ней доступ по этому имени. Если блок подключается к переменной, созданной другим блоком,
  имя этой переменной необходимо узнать у создателя модели последнего. Если же блок сам создает переменную, для
  нее желательно выбрать уникальное имя, чтобы переменная с таким же именем не использовалась другими
  разработчиками моделей. Имена динамических переменных чувствительны к регистру (&laquo;<span class="rdsvar">Var</span>&raquo;,
  &laquo;<span class="rdsvar">VAR</span>&raquo; и &laquo;<span class="rdsvar">var</span>&raquo; будут считаться разными переменными) и не должны содержать
  знака доллара, точек, запятых и скобок. Для большей совместимости моделей лучше всего использовать в них только
  латинские буквы, цифры и знак подчеркивания. Имя переменной в RDS вводится только в том случае, если в поле
  &laquo;<span class="menu">действие</span>&raquo; (см. ниже) будет указано одно из стандартных действий. В окне можно выбрать один из
  двух вариантов указания имени динамической переменной:</li>
  <ul>
    <li>&laquo;<span class="menu">Фиксированное имя</span>&raquo; &ndash; имя жестко задается в программе модели, все блоки с
    этой моделью будут связаны с одной и той же переменной. Само имя вводится в поле ввода справа от
    названия этого варианта.</li>
    <li>&laquo;<span class="menu">Из настроечного параметра</span>&raquo; &ndash; указывается имя настроечного параметра блока,
    из которого будет считываться имя динамической переменной. Имя параметра либо вводится вручную в поле
    справа от названия варианта, либо выбирается в этом поле из списка уже имеющихся у блока параметров.
    Параметр для хранения имени динамической переменной обязательно должен иметь тип
    &laquo;<span class="cpp"><span id="light_ref5"><a href="um_3_7_2_5.htm#ref1" title="Класс rdsbcppString">rdsbcppString</a></span></span>&raquo;,
    используемый в автокомпилируемых моделях для работы со
    строками. Если введенный в поле параметр отсутствует в блоке, при закрытии окна кнопкой
    &laquo;<span class="menu">OK</span>&raquo; будет предложено создать его вместе с полем для его ввода в окне настроек
    (см. <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">&sect;3.6.6</a> и <a href="um_3_7_7.htm" title="&sect;3.7.7. Задание пользователем имен динамических переменных">&sect;3.7.7</a>).</li>
  </ul>

  <li>&laquo;<span class="menu">Имя переменной в программе</span>&raquo; &ndash; имя, которое будет использоваться в тексте
  программы для обращения к данной переменной. Это имя должно удовлетворять стандартным требованиям к
  идентификаторам в языке C, то есть состоять только из букв, цифр и знака подчеркивания и не начинаться с
  цифры. По умолчанию в качестве имени переменной в программе подставляется копия имени переменной в RDS,
  в которой все недопустимые для языка C символы заменены на подчеркивания. Пользователь может изменить это имя
  так, как ему удобно, оно используется только внутри модели и недоступно RDS и другим блокам.</li>

  <li>&laquo;<span class="menu">Тип</span>&raquo; &ndash; <a href="um_3_6_2.htm#light_ref4" title="Типы переменных блока">тип</a> переменной, которую нужно создать или найти.
  Тип выбирается из выпадающего списка. Если выбрать в списке &laquo;массив&raquo; или &laquo;матрица&raquo;,
  под ним появится дополнительный список для выбора типа элемента массива или матрицы
  (на <a href="#pic2" title="Окно параметров динамической переменной">рис.&nbsp;335</a>, например, переменная имеет тип
  &laquo;матрица double&raquo;).</li>

  <li>&laquo;<span class="menu">Блок-владелец</span>&raquo; &ndash; блок, внутри которого будет искаться или создаваться динамическая
  переменная. Можно выбрать один из трех вариантов: &laquo;этот блок&raquo;, &laquo;подсистема&raquo; и
  &laquo;система&raquo; (в выпадающем списке после названия каждого варианта в скобках приведена стандартная
  константа, которой этот вариант обозначается в сервисных функциях RDS). Если выбрать вариант
  &laquo;этот блок&raquo;, при подключении к переменной или ее создании модель будет обращаться к своему
  собственному блоку (этот вариант практически не применяется, поскольку при этом другие блоки, вероятнее всего,
  не будут иметь доступа к переменной). Вариант
  &laquo;подсистема&raquo; указывает модели обращаться для создания или поиска переменной к
  <a href="um_1_2.htm#ref13" title="Родительская подсистема">родительской подсистеме</a> данного блока (к переменной будут иметь доступ все
  блоки этой подсистемы и подсистем, вложенных в нее). Наконец, вариант &laquo;<span class="menu">система</span>&raquo; указывает модели
  обращаться для создания или поиска переменной к
  <a href="um_1_2.htm#ref11" title="Корневая подсистема">корневой подсистеме</a> схемы (к переменной будут иметь доступ все блоки схемы).
  Если в поле &laquo;<span class="menu">действие</span>&raquo;, описанном ниже, выбирается вариант &laquo;вручную&raquo;, блок-владелец
  не указывается: он будет задан программистом вручную при работе с объектом переменной внутри программы.</li>

  <li>&laquo;<span class="menu">Действие</span>&raquo; &ndash; что именно модель должна сделать с переменной. Можно выбрать один из
  четырех вариантов: &laquo;создать&raquo;, &laquo;подписаться&raquo;, &laquo;найти и подписаться&raquo; и
  &laquo;все действия &ndash; вручную&raquo;. Если выбран вариант &laquo;создать&raquo;, переменная будет
  создана в блоке, указанном в поле &laquo;<span class="menu">блок-владелец</span>&raquo;, если, конечно, в нем еще нет переменной с
  этим же именем. Если выбран вариант &laquo;подписаться&raquo;, модель попытается получить доступ к переменной
  с заданными именем и типом в блоке из поля &laquo;<span class="menu">блок-владелец</span>&raquo;. При этом, если такой переменной в этом
  блоке нет, дальнейший поиск производиться не будет. Если выбран вариант &laquo;найти и подписаться&raquo;,
  модель, как и в предыдущем варианте, сначала попытается получить доступ к заданной переменной в блоке из поля
  &laquo;<span class="menu">блок-владелец</span>&raquo;. Если в нем переменная не будет найдена, модель будет искать ее в родительской
  подсистеме этого блока. Если ее нет и там, поиск будет осуществляться в ее родительской подсистеме, и т.д.
  до корневой подсистемы схемы. Наконец, если выбран вариант &laquo;все действия &ndash; вручную&raquo;, модель
  не будет создавать переменную или подписываться на нее (поля ввода &laquo;<span class="menu">имя переменной в RDS</span>&raquo; и
  &laquo;<span class="menu">блок-владелец</span>&raquo; при этом будут заблокированы). Все действия с переменной в этом случае должны
  выполняться программистом в реакциях на различные события. Чаще всего этот вариант используется в тех случаях,
  когда имя динамической переменной формируется программно и его нельзя жестко указать в
  редакторе модели (пример модели с программным заданием имени переменной приведен в
  <a href="um_3_7_7a.htm" title="&sect;3.7.8. Программное управление динамическими переменными">&sect;3.7.8</a>).</li>
</ul>

<p class="noindent">Фактически, действия, выполняемые моделью для динамической переменной, определяются сочетанием полей
&laquo;<span class="menu">блок-владелец</span>&raquo; и &laquo;<span class="menu">действие</span>&raquo;. Их можно проиллюстрировать следующей таблицей:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th colspan="2" rowspan="2"></th>
    <th colspan="3">Блок-владелец</th>
  </tr>
  <tr>
    <th>Этот блок</th>
    <th>Подсистема</th>
    <th>Система</th>
  </tr>
  <tr>
    <th rowspan="4">Действие</th>
    <th>Создать</th>
    <td>Переменная будет создана в этом блоке, другие блоки не будут иметь к ней доступа</td>
    <td>Переменная будет создана в родительской подсистеме этого блока, ее смогут найти блоки этой же подсистемы и всех вложенных</td>
    <td>Переменная будет создана в корневой подсистеме схемы, ее смогут найти все блоки</td>
  </tr>
  <tr>
    <th>Подписаться</th>
    <td>Модель получит доступ к переменной в своем собственном блоке, только если она там есть</td>
    <td>Модель получит доступ к переменной в  родительской подсистеме своего блока, только если она там есть</td>
    <td rowspan="2" style="vertical-align:middle;">Модель получит доступ к переменной в  корневой подсистеме схемы, только если она там есть</td>
  </tr>
  <tr>
    <th>Найти и подписаться</th>
    <td>Модель будет искать переменную начиная с собственного блока вверх по иерархии подсистем</td>
    <td>Модель будет искать переменную начиная с родительской подсистемы собственного блока вверх по иерархии подсистем</td>
  </tr>
  <tr>
    <th>Все действия &ndash; вручную</th>
    <td colspan="3">Модель не выполняет никаких действий для доступа к переменной или ее создания, в программе для переменной просто создается объект, с которым должен работать сам программист</td>
  </tr>
</table>
</div></div>

<p>Следует помнить, что, в отличие от статических переменных, которые создаются вместе с блоком и, с точки
зрения модели, существуют всегда, динамические переменные могут появляться и исчезать в процессе работы.
Добавление динамической переменной в редакторе модели блока не гарантирует ее существование &ndash; блок может не
найти переменную с указанными именем и типом в заданной подсистеме. Даже если модели указано создать переменную,
RDS может не дать ей сделать это, если переменная с таким именем уже существует в указанной в параметрах
подсистеме. Обращение к отсутствующей переменной в программе модели вызовет критическую ошибку, поэтому по
умолчанию модуль автокомпиляции автоматически блокирует все вызовы модели, если хотя бы одна из внесенных в
список динамических переменных отсутствует. Эту блокировку можно отключить в
<a href="um_3_6_7.htm" title="&sect;3.6.7. Параметры модели">параметрах модели</a>, но при этом, перед обращением к переменной,
необходимо проверять ее существование &ndash; пример этого приведен
в <a href="um_3_7_3_1.htm#ref5" title="Проверка существования динамической переменной">&sect;3.7.3.1</a>. Переменные, для которых не задано никаких действий, из
автоматической проверки существования исключаются, независимо от включения блокировки в параметрах модели.</p>

<p>Нажатие кнопки &laquo;<span class="menu">OK</span>&raquo; занесет новые параметры переменной в список. Нажатием
<span class="keys">Ctrl</span>&nbsp;+&nbsp;<span class="keys">C</span> выделенную в списке переменную можно скопировать в буфер обмена для последующей
вставки в текст программы.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_6_2.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_4.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_3">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
