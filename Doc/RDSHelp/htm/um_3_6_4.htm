<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.6.4. Описания программы и реакции блока на события</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_6">&sect;3.6. Окно редактора модели</a></p>
<div class="level"><p>&sect;3.6.4. Описания программы и реакции блока на события</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_6_3.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_5.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_4">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.6. Окно редактора модели</h3>
<h4>&sect;3.6.4. Описания программы и реакции блока на события</h4>
<p class="abstract">Описывается ввод фрагментов программ на языке C++, которые определяют поведение блока при наступлении различных системных событий.</p>


<div class="picright"><div class="container" id="pic1">
<img src="../img/AC_EventsTree.png" width="326" height="464" alt="Список фрагментов программы модели" />
<p id="light_pic1">Рис.&nbsp;336. Список фрагментов<br />программы модели</p>
</div></div>


<p>Программа модели блока, формируемая модулем автокомпиляции, может состоять из большого числа вводимых
пользователем фрагментов &ndash; как реакций блока на различные события, так и описаний, которые
пользователь считает нужным включить в модель. Эти фрагменты добавляются и удаляются на вкладке
&laquo;<span class="menu">события</span>&raquo; дополнительной панели
<a href="um_3_6_1.htm" title="&sect;3.6.1. Элементы и меню окна редактора модели">окна редактора модели</a>
(<a href="#pic1" title="Список фрагментов программы модели">рис.&nbsp;336</a>).
Разбиение полной программы модели блока на отдельные фрагменты, связанные с конкретными событиями,
позволяет переложить ответственность за правильную сборку полной программы на модуль автокомпиляции &ndash;
пользователю достаточно указать, что именно должен делать блок при наступлении того или иного события, а
модуль самостоятельно оформит этот текст в виде функции и включит в программу ее вызов в нужном месте.</p>

<p>Список фрагментов программы на этой вкладке организован в виде дерева, в котором события и описания
объединены в группы по смыслу. Каждую группу можно раскрыть нажатием на значок &laquo;<span class="menu">+</span>&raquo; слева от ее
названия. Перед названием каждого отдельного фрагмента в группе отображается иконка желтого цвета, если
для этого фрагмента введен текст программы, и белого, если текста нет, то есть реакция на данное событие или
данное описание отсутствует в модели. Иконка рядом с названием группы имеет желтый цвет, если хотя бы один
фрагмент внутри нее содержит текст программы &ndash; так можно видеть заполненные события и описания даже
если их группы не раскрыты.
На <a href="#pic1" title="Список фрагментов программы модели">рис.&nbsp;336</a>, например, видно, что пользователем введены тексты
фрагментов программы для глобальных описаний модели, для выполнения одного такта расчета (пункт
&laquo;<span class="menu">модель</span>&raquo; в группе &laquo;<span class="menu">моделирование и режимы</span>&raquo;), для реакции на запуск расчета
и для каких-то реакций блока на вызов функций (группа &laquo;<span class="menu">функции блока</span>&raquo; не раскрыта, поэтому не
видно, для каких именно). Рядом с названием каждой реакции блока на событие в скобках отображается имя
константы, соответствующей этому событию в описаниях RDS. Зная имя этой константы, можно найти описание
события в
<a href="app_index.htm" title="Приложения">приложениях</a> и изучить возможности и примеры реакции на него.
Модуль автокомпиляции позволяет включить в программу реакции не на все возможные события, но для большинства
моделей будет достаточно тех, что есть. Список всех реакций и описаний, которые можно ввести в автокомпилируемую
модель, приведен в <a href="um_index.htm#light_htm:um_3_8" title="&sect;3.8. Краткий перечень вводимых в модель описаний и реакций на события">&sect;3.8</a>.</p>

<p>Не каждому введенному фрагменту программы модели соответствует открытая вкладка в правой части окна
редактора, некоторые вкладки могут быть закрыты. При закрытии вкладки текст соответствующей реакции не
исчезает, он просто больше не показывается пользователю. Для того, чтобы снова открыть закрытую вкладку
с фрагментом программы, следует либо дважды щелкнуть на названии фрагмента в списке, либо выделить его
в списке левым щелчком мыши и нажать кнопку под списком слева. Для того, чтобы полностью удалить
фрагмент программы из модели, следует выделить его в списке и нажать кнопку под списком справа (редактор
запросит подтверждение удаления текста). Пустые тексты фрагментов при сохранении модели удаляются автоматически.
Если для модели не введено ни одного фрагмента программы, при открытии окна редактора автоматически появляется
вкладка для
<a href="ac_RDS_BFM_MODEL.htm" title="&sect;3.8.3.1. Выполнение такта расчета">реакции на один такт расчета</a>,
поскольку это самое часто используемое в моделях событие
(см. <a href="um_3_3.htm#pic8" title="Окно редактора пустой модели">рис.&nbsp;321</a>).</p>

<p>Чтобы понять, как именно введенные пользователем фрагменты вставляются в формируемый текст полной
программы модели, необходимо представлять себе общую структуру этого текста. Этот текст содержит
(см. также <a href="um_3_8_1.htm" title="&sect;3.8.1. Дополнительные описания, вводимые в модель">&sect;3.8.1</a>):</p>

<ul>
  <li>команды включения необходимых для работы файлов заголовков (&laquo;<span class="file">windows.h</span>&raquo;,
  &laquo;<span class="file">math.h</span>&raquo; и т.п.);</li>
  <li>описания глобальных переменных и служебные функции, автоматически формируемые модулем согласно параметрам
  модели;</li>
  <li><span id="ref1">автоматически</span> формируемую
  <span id="light_ref1">главную функцию DLL</span>, которую должна иметь каждая динамически подключаемая
  библиотека в Windows;</li>
  <li>глобальные описания пользователя, если таковые имеются;</li>
  <li>автоматически формируемое описание класса блока, содержащее все переменные и функции, необходимые для его
  работы, включая пользовательские описания полей и функций класса, если они есть;</li>
  <li>дополнительные пользовательские описания, если таковые имеются;</li>
  <li><a href="app_a_2_1.htm" title="А.2.1. Функция модели блока">функцию модели блока</a>, автоматически формируемую согласно
  правилам RDS, содержащую оператор
  <span class="cpp">switch</span> с большим количеством меток <span class="cpp">case</span> (по одной метке на
  каждое событие), из которого вызываются функции реакции на события;</li>
  <li>введенные пользователем реакции на события, оформленные как функции-члены класса блока.</li>
</ul>

<p class="noindent">В целом, формируемый модулем автокомпиляции текст программы устроен примерно так же,
как и примеры моделей блоков в
<a href="pm_index.htm" title="Руководство программиста">руководстве программиста</a>, за исключением того, что там для доступа к переменным блока
используются макросы, а в автокомпилируемых моделях &ndash;
специальные классы, и все данные блока тоже всегда оформляются как класс. Именно поэтому модуль
автокомпиляции может работать только с компиляторами языка C++, а компиляторы &laquo;чистого&raquo; C для
этого не подходят. Пользователь, создающий автокомпилируемые модели, может и не обращать особого внимания на
структуру формируемого текста, но знание этой структуры может помочь в поиске ошибок. Если место какого-либо
фрагмента в общем тексте программы покажется непонятным, всегда можно вызвать пункт меню
<a href="um_3_6_1.htm" title="&sect;3.6.1. Элементы и меню окна редактора модели">окна редактора</a>
&laquo;<span class="menu">модель | показать текст C++</span>&raquo; и найти свой фрагмент в общем тексте.</p>

<p>Примеры моделей с реакциями на различные события рассмотрены в
<a href="um_index.htm#light_htm:um_3_7" title="&sect;3.7. Принципы создания автокомпилируемых моделей блоков">&sect;3.7</a>, здесь же мы кратко перечислим доступные в редакторе модели фрагменты
с их характеристиками. Все упомянутые ниже константы и структуры подробно описаны в
<a href="pm_index.htm" title="Руководство программиста">руководстве программиста</a> и <a href="app_index.htm" title="Приложения">приложениях</a>.</p>

<ul>
  <li>Группа &laquo;<span class="menu">описания</span>&raquo; &ndash; описания и функции, не связанные непосредственно с реакциями блока
  на события (см. также <a href="um_3_8_1.htm" title="&sect;3.8.1. Дополнительные описания, вводимые в модель">&sect;3.8.1</a>):
  <ul>
    <li>&laquo;<span class="menu">Глобальные описания</span>&raquo; &ndash; описания глобальных переменных и пользовательских функций,
    а также команды включения нестандартных файлов заголовков, вставляемые перед описанием генерируемого для блока класса.
    Внутри функций в этих описаниях нельзя ссылаться на переменные блока: эти описания не являются частью класса
    блока и не имеют доступа к его полям. Чаще всего здесь размещают глобальные функции общего назначения.</li>

    <li>&laquo;<span class="menu">Описания внутри класса блока</span>&raquo; &ndash; фрагмент, размещаемый в самом конце секции
    <span class="cpp">public</span> класса блока. Здесь обычно описывают дополнительные пользовательские параметры,
    которые хранятся вместе с блоком, а также дополнительные функции, которым необходим доступ к
    <a href="um_1_2.htm#ref4">статическим</a> или <a href="um_1_2.htm#ref6">динамическим</a>
    переменным блока. Следует помнить, что, в отличие от
    <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">настроечных параметров блока</a>,
    для описанных здесь параметров модуль автокомпиляции не формирует команды загрузки и сохранения, поэтому
    их значения теряются при выгрузке схемы из памяти и ее последующей загрузке. Если дополнительные данные,
    хранимые в блоке, должны сохраняться вместе со схемой, необходимо либо переместить их в настроечные параметры,
    либо загружать и сохранять их вручную в реакциях на соответствующие события.</li>

    <li>&laquo;<span class="menu">Описания после класса блока</span>&raquo; &ndash; фрагмент, размещаемый сразу после класса блока. Здесь
    обычно описывают функции, которым необходим доступ к классу блока, или тела функций-членов класса блока,
    описания которых сделаны в фрагменте &laquo;<span class="menu">описания внутри класса блока</span>&raquo;. Можно разместить здесь и
    описания глобальных функций и переменных.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">создание и уничтожение</span>&raquo; &ndash; реакции на события, связанные с появлением и
  исчезновением блоков:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_INIT.htm" title="&sect;3.8.2.1. Инициализация блока">Инициализация блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref2"><a href="RDS_BFM_INIT.htm" title="А.2.4.7. RDS_BFM_INIT &ndash; инициализация блока">RDS_BFM_INIT</a></span></span>, возникающее в момент подключения модели к блоку: при загрузке схемы с
    этим блоком, при добавлении блока в схему из библиотеки, при подключении модели к блоку в окне параметров и т.п.
    Обычно в реакции на это событие присваивают начальные значения каким-либо дополнительным параметрам,
    описанным в классе блока, а также отводят дополнительную память, если она нужна модели. В автокомпилируемых
    моделях пользовательская реакция на это событие используется крайне редко, поскольку инициализация всех
    необходимых для работы блока объектов добавляется в программу модели автоматически, без участия
    пользователя. Следует помнить, что в реакции на событие инициализации <span class="emph">нельзя</span> обращаться к статическим
    переменным блока &ndash; это событие возникает до проверки допустимости структуры переменных,
    поэтому переменные блока на момент реакции могут не существовать.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_CLEANUP.htm" title="&sect;3.8.2.2. Очистка данных блока">Очистка блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref3"><a href="RDS_BFM_CLEANUP.htm" title="А.2.4.3. RDS_BFM_CLEANUP &ndash; очистка данных блока">RDS_BFM_CLEANUP</a></span></span>, возникающее перед отключением модели от блока: при выгрузке схемы
    из памяти, при стирании блока, при замене одной модели на другую и т.п. Обычно здесь освобождают
    дополнительную память, отведенную при инициализации блока. Как и реакция на событие инициализации,
    пользовательская реакция на очистку данных блока в автокомпилируемых моделях практически не используется &ndash;
    все необходимые действия добавляются в программу автоматически. Следует помнить, что в реакции на событие
    очистки <span class="emph">нельзя</span> обращаться к статическим переменным блока &ndash; это событие
    возникает, в том числе, и для блоков с недопустимой структурой переменных.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MANUALINSERT.htm" title="&sect;3.8.2.3. Добавление блока пользователем">Добавление блока пользователем</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref4"><a href="RDS_BFM_MANUALINSERT.htm" title="А.2.7.2. RDS_BFM_MANUALINSERT &ndash; вставка блока пользователем">RDS_BFM_MANUALINSERT</a></span></span>, возникающее при добавлении блока в схему пользователем при
    помощи вставки из буфера обмена, загрузки из отдельного файла, добавления из библиотеки или с панели блоков.
    При загрузке блока в память в составе схемы это событие не возникает. Здесь можно, например, запросить у
    пользователя какие-либо параметры нового блока. В функцию, формируемую для реакции на это событие, передается
    указатель на структуру <span class="cpp"><a href="RDS_BFM_MANUALINSERT.htm#ref1" title="Структура RDS_MANUALINSERTDATA">RDS_MANUALINSERTDATA</a></span>, содержащую причину добавления блока в схему.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MANUALDELETE.htm" title="&sect;3.8.2.4. Удаление блока пользователем">Удаление блока пользователем</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref5"><a href="RDS_BFM_MANUALDELETE.htm" title="А.2.7.1. RDS_BFM_MANUALDELETE &ndash; удаление блока пользователем">RDS_BFM_MANUALDELETE</a></span></span>, возникающее перед тем, как блок или содержащая его подсистема
    будут удалены из схемы пользователем. При выгрузке всей схемы из памяти это событие не возникает. Здесь можно,
    например, предупредить пользователя о том, что данный блок важен для работы всей схемы. Отменить удаление в
    реакции на это событие нельзя &ndash; блок будет удален независимо от выполненных в фрагменте программы действий.
    В функцию, формируемую для реакции на это событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_MANUALDELETE.htm#ref1" title="Структура RDS_MANUALDELETEDATA">RDS_MANUALDELETEDATA</a></span>, содержащую описание действий пользователя, приведших к удалению
    блока.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_UNLOADSYSTEM.htm" title="&sect;3.8.2.5. Перед выгрузкой схемы">Перед выгрузкой системы</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref6"><a href="RDS_BFM_UNLOADSYSTEM.htm" title="А.2.4.17. RDS_BFM_UNLOADSYSTEM &ndash; схема будет выгружена из памяти">RDS_BFM_UNLOADSYSTEM</a></span></span>, возникающее перед тем, как вся загруженная в данный момент
    схема будет удалена из памяти из-за загрузки другой схемы, создания новой или завершения RDS. Здесь можно,
    например, стереть временные файлы, созданные моделью в процессе работы.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">моделирование и режимы</span>&raquo; &ndash; реакции на события, связанные с
  <a href="um_1_3.htm#ref4" title="Такт расчета">работой модели в режиме расчета</a> и с переключением
  <a href="um_1_3.htm" title="&sect;1.3. Режимы работы RDS">режимов RDS</a>:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MODEL.htm" title="&sect;3.8.3.1. Выполнение такта расчета">Модель</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref7"><a href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a></span></span>, которое возникает у всех простых блоков в каждом
    такте расчета. В <a href="um_1_3.htm#ref3" title="Режим расчета">режиме расчета</a> все модели
    <a href="um_1_2.htm#light_ref9" title="Простой блок">простых блоков</a>, запуск которых разрешен, циклически вызываются для
    реакции на это событие &ndash; именно так устроен расчет в RDS. Это &ndash; самое часто используемое
    событие в автокомпилируемых моделях. Фактически, большинство таких моделей состоит только из реакции на
    это событие, в которой значения выходов блока вычисляются по значениям его входов (см. пример в
    <a href="um_3_3.htm" title="&sect;3.3. Создание нового блока с автокомпилируемой моделью">&sect;3.3</a>). Следует помнить, что реакция будет вызвана только в том случае,
    если запуск модели разрешен, то есть в параметрах блока
    <a href="um_2_9_1.htm#light_ref8" title="Установка режима запуска блока">включен расчет каждый такт</a>
    или его <a href="um_1_4.htm#ref25" title="Сигнал запуска блока">первая сигнальная переменная</a> имеет ненулевое значение.</li>

    <li>&laquo;<span class="menu"><span id="light_ref8"><a href="ac_RDS_BFM_STARTCALC.htm" title="&sect;3.8.3.2. Запуск расчета">Запуск расчета</a></span></span>&raquo; &ndash; реакция на событие <span class="cpp"><span id="light_ref9"><a href="RDS_BFM_STARTCALC.htm" title="А.2.4.14. RDS_BFM_STARTCALC &ndash; запуск расчета">RDS_BFM_STARTCALC</a></span></span>, которое возникает при
    переходе RDS в <a href="um_1_3.htm#ref3" title="Режим расчета">режим расчета</a>. Следует учитывать, что это событие возникает
    при любом запуске расчета, в том числе и при его продолжении после остановки. В этой реакции обычно
    выполняют какие-либо вычисления, которые не нужно выполнять постоянно на каждом такте. Например, здесь можно
    вычислить значения каких-либо сложных функций от
    <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">настроечных параметров</a>
    &ndash; настроечные параметры не могут
    быть изменены пользователем без выхода из режима расчета, поэтому их значения в течение всего расчета можно
    считать неизменными. В функцию, формируемую для реакции на это событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_STARTCALC.htm#ref1" title="Структура RDS_STARTSTOPDATA">RDS_STARTSTOPDATA</a></span>, содержащую параметры запуска расчета, в том числе и признак того,
    что расчет запущен в первый раз после сброса &ndash; этот признак можно использовать для инициализации блока.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_STOPCALC.htm" title="&sect;3.8.3.3. Остановка расчета">Остановка расчета</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref10"><a href="RDS_BFM_STOPCALC.htm" title="А.2.4.15. RDS_BFM_STOPCALC &ndash; остановка расчета">RDS_BFM_STOPCALC</a></span></span>, которое возникает при выходе RDS из режима расчета.
    Здесь можно, например, сообщить пользователю о возникших в процессе расчета ошибках, если это необходимо.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_RESETCALC.htm" title="&sect;3.8.3.4. Сброс расчета">Сброс расчета</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref11"><a href="RDS_BFM_RESETCALC.htm" title="А.2.4.12. RDS_BFM_RESETCALC &ndash; сброс расчета">RDS_BFM_RESETCALC</a></span></span>, которое возникает сразу после
    <a href="um_1_3.htm#ref9" title="Сброс расчета">сброса расчета</a> во всей схеме или ее отдельной подсистеме (последнее возможно
    только в результате вызова <a href="rdsResetSystemState.htm" title="А.5.7.3. rdsResetSystemState &ndash; сбросить состояние блока или подсистемы">специальных функций RDS</a>
    моделями блоков &ndash; например, блоком оптимизации). Здесь обычно сбрасывают в исходные значения
    различные параметры блока, значения которых меняются в процессе расчета. Сбрасывать значения
    <a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a> не нужно, при сбросе им автоматически
    присваиваются заданные для них в <a href="um_2_9_2.htm" title="&sect;2.9.2. Редактирование списка переменных блока">редакторе</a>
    значения по умолчанию.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_EDITMODE.htm" title="&sect;3.8.3.5. Переход в режим редактирования">Режим редактирования</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref12"><a href="RDS_BFM_EDITMODE.htm" title="А.2.4.5. RDS_BFM_EDITMODE &ndash; переход в режим редактирования">RDS_BFM_EDITMODE</a></span></span>, которое возникает при переходе RDS в
    <a href="um_1_3.htm#ref1" title="Режим редактирования">режим редактирования</a> и сразу после загрузки схемы (если режим редактирования не
    запрещен <a href="pm_index.htm#light_htm:pm_3" title="Глава 3. Управление RDS из других приложений">внешним приложением</a>, после загрузки новой схемы RDS переходит
    в этот режим автоматически). В реакции на это событие можно взводить какие-либо флаги, меняющие поведение
    блока. Например, блоки, которые <a href="um_3_7_5.htm" title="&sect;3.7.5. Блоки, программно рисующие свое изображение">сами рисуют свои изображения</a>,
    могут по-разному вести себя в режимах редактирования, моделирования и расчета. Для отслеживания текущего
    режима можно использовать реакции на события смены режимов.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_CALCMODE.htm" title="&sect;3.8.3.6. Переход в режим моделирования">Режим моделирования</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref13"><a href="RDS_BFM_CALCMODE.htm" title="А.2.4.1. RDS_BFM_CALCMODE &ndash; переход из режима редактирования в режим моделирования">RDS_BFM_CALCMODE</a></span></span>, которое возникает при переходе RDS в
    <a href="um_1_3.htm#ref2" title="Режим моделирования">режим моделирования</a>. Это событие, как и событие перехода в режим редактирования,
    можно использовать для отслеживания текущего режима.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_DYNVARCHANGE.htm" title="&sect;3.8.3.7. Изменение динамической переменной">Изменение динамической переменной</a></span>&raquo; &ndash; реакция на
    событие <span class="cpp"><span id="light_ref14"><a href="RDS_BFM_DYNVARCHANGE.htm" title="А.2.4.4. RDS_BFM_DYNVARCHANGE &ndash; изменение динамической переменной">RDS_BFM_DYNVARCHANGE</a></span></span>, которое возникает при создании и удалении
    <a href="um_1_2.htm#ref6">динамической переменной</a>, на которую подписался блок, а также в
    результате <a href="rdsNotifyDynVarSubscribers.htm" title="А.5.16.6. rdsNotifyDynVarSubscribers &ndash; уведомить подписчиков об изменении переменной">уведомления</a> каким-либо другим блоком
    всех остальных об изменении значения этой переменной.
    <span id="ref15">Следует помнить</span>, что это событие не возникает
    автоматически при записи в динамическую переменную нового значения &ndash; записавший значение блок должен явно
    уведомить все остальные блоки, использующие эту переменную, о том, что ее значение изменилось.
    В автокомпилируемых моделях это делается вызовом у переменной функции-члена
    <span class="cpp" id="light_ref15">NotifySubscribers</span>: например, после изменения значения переменной
    <span class="cpp">DynVar1</span> необходимо сделать вызов &laquo;<span class="cpp">DynVar1.NotifySubscribers();</span>&raquo;,
    чтобы у всех блоков, подписанных на эту переменную (то есть блоков, запросивших к ней доступ), возникло событие
    <span class="cpp">RDS_BFM_DYNVARCHANGE</span>.
    <span id="ref16">В</span> функцию, формируемую для реакции на это событие, передается
    специальный идентификатор типа <span class="cpp" id="light_ref16">RDS_PDYNVARLINK</span>,
    указывающий на изменившуюся переменную. Примеры моделей, реагирующих на изменение динамической переменной и
    уведомляющих другие блоки о таком изменении, рассмотрены в
    <a href="um_index.htm#light_htm:um_3_7_3" title="&sect;3.7.3. Работа с динамическими переменными">&sect;3.7.3</a>.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">мышь и клавиатура</span>&raquo; &ndash; реакции на действия пользователя:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MOUSEDOWN.htm" title="&sect;3.8.4.1. Нажатие кнопки мыши">Нажатие кнопки мыши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref17"><a href="RDS_BFM_MOUSEDOWN.htm" title="А.2.6.9. RDS_BFM_MOUSEDOWN &ndash; нажатие кнопки мыши">RDS_BFM_MOUSEDOWN</a></span></span>, которое возникает в режимах
    <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a> при нажатии пользователем
    кнопки мыши в пределах изображения блока, находящегося на видимом активном
    <a href="um_2_12.htm" title="&sect;2.12.1. Использование слоев">слое</a>, если в
    <a href="pm_1_4.htm#pic3" title="Параметры блока &ndash; модель и реакции">параметрах этого блока</a> разрешена реакция на мышь.
    В этой реакции можно не только определить факт нажатия кнопки, но и узнать, в какой части изображения блока в
    этот момент находился курсор. Пример модели, реагирующей на нажатие кнопки мыши, приведен в
    <a href="um_3_7_10.htm" title="&sect;3.7.11. Реакция блока на мышь">&sect;3.7.11</a>. В функцию, формируемую для реакции на это событие, передается
    указатель на структуру <span class="cpp"><a href="RDS_BFM_MOUSEDBLCLICK.htm#ref2" title="Структура RDS_MOUSEDATA">RDS_MOUSEDATA</a></span>, содержащую идентификатор нажатой кнопки,
    координаты курсора мыши и т.п..</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MOUSEUP.htm" title="&sect;3.8.4.2. Отпускание кнопки мыши">Отпускание кнопки мыши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref18"><a href="RDS_BFM_MOUSEUP.htm" title="А.2.6.11. RDS_BFM_MOUSEUP &ndash; отпускание кнопки мыши">RDS_BFM_MOUSEUP</a></span></span>, которое возникает в режимах <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a>
    при отпускании ранее нажатой пользователем кнопки мыши над изображением блока. Это событие &ndash; парное к
    предыдущему. Чаще всего оно используется при создании блоков, изображающих кнопки: при нажатии кнопки
    мыши блок изображает кнопку в нажатом состоянии до тех пор, пока не получит информацию об отпускании
    кнопки. В функцию, формируемую для реакции на это событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_MOUSEDBLCLICK.htm#ref2" title="Структура RDS_MOUSEDATA">RDS_MOUSEDATA</a></span>, содержащую идентификатор кнопки, координаты курсора мыши и т.п.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MOUSEDBLCLICK.htm" title="&sect;3.8.4.3. Двойной щелчок мыши">Двойной щелчок мыши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref19"><a href="RDS_BFM_MOUSEDBLCLICK.htm" title="А.2.6.8. RDS_BFM_MOUSEDBLCLICK &ndash; двойной щелчок мыши">RDS_BFM_MOUSEDBLCLICK</a></span></span>, которое возникает в режимах
    <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a> при двойном щелчке на
    изображении блока, находящегося на видимом активном <a href="um_2_12.htm" title="&sect;2.12.1. Использование слоев">слое</a>, если в
    <a href="pm_1_4.htm#pic3" title="Параметры блока &ndash; модель и реакции">параметрах этого блока</a> разрешена реакция на мышь.
    Следует учитывать, что из-за природы двойного щелчка перед реакцией на это событие блок сначала среагирует на
    нажатие и отпускание кнопки. Как и для остальных событий, связанных с мышью, в функцию реакции передается указатель на
    структуру <span class="cpp"><a href="RDS_BFM_MOUSEDBLCLICK.htm#ref2" title="Структура RDS_MOUSEDATA">RDS_MOUSEDATA</a></span>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MOUSEMOVE.htm" title="&sect;3.8.4.4. Перемещение курсора мыши">Перемещение мыши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref20"><a href="RDS_BFM_MOUSEMOVE.htm" title="А.2.6.10. RDS_BFM_MOUSEMOVE &ndash; перемещение курсора мыши">RDS_BFM_MOUSEMOVE</a></span></span>, которое возникает в режимах
    <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a>
    при перемещении курсора мыши над изображением блока, находящегося на видимом активном
    <a href="um_2_12.htm" title="&sect;2.12.1. Использование слоев">слое</a>, если в <a href="pm_1_4.htm#pic3" title="Параметры блока &ndash; модель и реакции">параметрах этого блока</a>
    разрешена реакция на мышь. В параметрах блока можно разрешить реакцию на это событие только при нажатых кнопках
    мыши или независимо от состояния кнопок (последнее используется реже). Эта реакция чаще всего используется для
    создания блоков, имитирующих различные рукоятки, которые пользователь может двигать, меняя значения переменных.
    В функцию реакции на это событие тоже передается указатель на структуру <span class="cpp"><a href="RDS_BFM_MOUSEDBLCLICK.htm#ref2" title="Структура RDS_MOUSEDATA">RDS_MOUSEDATA</a></span>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_KEYDOWN.htm" title="&sect;3.8.4.5. Нажатие клавиши">Нажатие клавиши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref21"><a href="RDS_BFM_KEYDOWN.htm" title="А.2.6.5. RDS_BFM_KEYDOWN &ndash; нажатие клавиши">RDS_BFM_KEYDOWN</a></span></span>, которое возникает в режимах
    <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a> при нажатии какой-либо клавиши на
    клавиатуре, если окно подсистемы с этим блоком внутри находится на переднем плане и в
    <a href="pm_1_4.htm#pic3" title="Параметры блока &ndash; модель и реакции">параметрах блока</a> разрешена реакция на клавиатуру. В реакции
    на это событие можно выполнять какие-либо действия по нажатиям разных клавиш, создавая таким образом
    &laquo;виртуальные пульты управления&raquo;. В функцию, формируемую для реакции на это событие, передается
    указатель на структуру <span class="cpp"><a href="RDS_BFM_KEYDOWN.htm#ref2" title="Структура RDS_KEYDATA">RDS_KEYDATA</a></span>, содержащую код клавиши, флаги и т.п.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_KEYUP.htm" title="&sect;3.8.4.6. Отпускание клавиши">Отпускание клавиши</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref22"><a href="RDS_BFM_KEYUP.htm" title="А.2.6.6. RDS_BFM_KEYUP &ndash; отпускание клавиши">RDS_BFM_KEYUP</a></span></span>, которое возникает в режимах
    <a href="um_1_3.htm#ref2" title="Режим моделирования">моделирования</a> и <a href="um_1_3.htm#ref3" title="Режим расчета">расчета</a> при отпускании ранее нажатой
    клавиши на клавиатуре, если окно подсистемы с этим блоком внутри находится на переднем плане и в
    <a href="pm_1_4.htm#pic3" title="Параметры блока &ndash; модель и реакции">параметрах блока</a> разрешена реакция на клавиатуру. Это
    событие &ndash; парное к предыдущему. В функцию, формируемую для реакции на это событие, тоже передается указатель на
    структуру <span class="cpp"><a href="RDS_BFM_KEYDOWN.htm#ref2" title="Структура RDS_KEYDATA">RDS_KEYDATA</a></span>.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">функции блока</span>&raquo; объединяет реакции на вызовы функций блока, внесенных в список функций на
  <a href="um_3_6_5.htm" title="&sect;3.6.5. Функции блока">вкладке &laquo;<span class="menu">функции</span>&raquo;</a>. В этой группе для каждой внесенной в
  список функции можно ввести текст программы реакции. Если в редакторе модели не добавлено ни одной функции блока,
  группа будет пустой. Примеры моделей, использующих функции блоков, приведены в
  <a href="um_index.htm#light_htm:um_3_7_12" title="&sect;3.7.13. Вызов функций блоков">&sect;3.7.13</a>.</li>

  <li>Группа &laquo;<span class="menu">загрузка и запись данных</span>&raquo; &ndash; события, связанные с загрузкой и сохранением
  данных блока и всей схемы:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_LOADTXT.htm" title="&sect;3.8.6.1. Загрузка данных блока">Загрузка данных блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref23"><a href="RDS_BFM_LOADTXT.htm" title="А.2.5.5. RDS_BFM_LOADTXT &ndash; загрузка данных блока в текстовом формате">RDS_BFM_LOADTXT</a></span></span>, которое возникает при загрузке параметров блока в момент загрузки
    схемы или при чтении данных этого блока из файла в библиотеке или из буфера обмена при вставке его в схему.
    В функцию реакции на это событие передается строка текста, сформированная этим же блоком при сохранении,
    которую модель должна разобрать, получив из нее все необходимые значения и присвоив их нужным параметрам.
    Эта реакция редко используется а автокомпилируемых моделях, поскольку загрузка значений
    <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">настроечных параметров блока</a> производится автоматически,
    и никаких дополнительных реакций для этого не требуется. Создавать эту реакцию нужно только в том случае,
    если у блока есть какие-то свои, нестандартные, параметры (например, оформленные как поля класса блока),
    которые необходимо сохранять и загружать вручную. Кроме того, ее можно использовать для выполнения каких-либо
    действий сразу после загрузки настроечных параметров блока &ndash; пример этого приведен в
    <a href="um_3_7_7a.htm" title="&sect;3.7.8. Программное управление динамическими переменными">&sect;3.7.8</a>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_SAVETXT.htm" title="&sect;3.8.6.2. Запись данных блока">Запись данных блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref24"><a href="RDS_BFM_SAVETXT.htm" title="А.2.5.7. RDS_BFM_SAVETXT &ndash; запись данных блока в текстовом формате">RDS_BFM_SAVETXT</a></span></span>, которое возникает при сохранении параметров блока в момент
    сохранения всей схемы или при записи данных этого блока в отдельный файл или в буфер обмена. Это событие
    &ndash; парное к предыдущему. Для блоков, в которых нет нестандартных параметров, реакция на него не требуется
    &ndash; сохранение <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">настроечных параметров</a> добавляется в программу модели
    автоматически.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_BEFORESAVE.htm" title="&sect;3.8.6.3. Перед сохранением схемы">Перед сохранением схемы</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref25"><a href="RDS_BFM_BEFORESAVE.htm" title="А.2.5.3. RDS_BFM_BEFORESAVE &ndash; начато сохранение схемы">RDS_BFM_BEFORESAVE</a></span></span>, возникающее у всех блоков непосредственно перед сохранением схемы в
    файл. Эта реакция используется крайне редко, в основном &ndash; в блоках, вносящих временные изменения в схему,
    чтобы они могли их отменить перед сохранением.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_AFTERSAVE.htm" title="&sect;3.8.6.4. После сохранения схемы">После сохранения схемы</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref26"><a href="RDS_BFM_AFTERSAVE.htm" title="А.2.5.2. RDS_BFM_AFTERSAVE &ndash; завершено сохранение схемы">RDS_BFM_AFTERSAVE</a></span></span>, возникающее у всех блоков сразу после сохранения схемы в файл.
    Используется крайне редко.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_AFTERLOAD.htm" title="&sect;3.8.6.5. После загрузки схемы">После загрузки схемы</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref27"><a href="RDS_BFM_AFTERLOAD.htm" title="А.2.5.1. RDS_BFM_AFTERLOAD &ndash; завершена загрузка схемы">RDS_BFM_AFTERLOAD</a></span></span>, возникающее у всех блоков сразу после загрузки схемы из файла.
    Обычно используется для инициализации каких-либо журналов событий (пример такой модели приведен
    в <a href="um_3_7_12_4.htm#ref1" title="Пример ведения журнала">&sect;3.7.13.4</a>).</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">загрузка и запись состояния блока</span>&raquo; &ndash; события, связанные с запоминанием состояния
  блока и его восстановлением по команде:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_LOADSTATE.htm" title="&sect;3.8.7.1. Загрузка состояния блока">Загрузка состояния блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref28"><a href="RDS_BFM_LOADSTATE.htm" title="А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока">RDS_BFM_LOADSTATE</a></span></span>, возникающее у блока, если его текущее состояние восстанавливается по
    команде от модели какого-либо другого блока. Сохранение и загрузка состояния одного или нескольких блоков
    используется в RDS для управления расчетом: вызовом сервисной функции
    <span class="cpp"><span id="light_ref29"><a href="rdsSaveSystemState.htm" title="А.5.7.4. rdsSaveSystemState &ndash; сохранить состояние блока/подсистемы">rdsSaveSystemState</a></span></span> можно сохранить в памяти текущее состояние одного или нескольких блоков,
    а затем, вызвав <span class="cpp"><span id="light_ref30"><a href="rdsLoadSystemState.htm" title="А.5.7.2. rdsLoadSystemState &ndash; загрузить сохраненное состояние">rdsLoadSystemState</a></span></span>, вернуть эти блоки в запомненное состояние
    (подробнее это описано в <a href="pm_2_14_3.htm" title="&sect;2.14.3. Сохранение и загрузка состояния блоков">&sect;2.14.3 руководства программиста</a>. Реагируя на событие
    загрузки состояния, модель должна загрузить значения всех тех параметров, которые она сохранила в реакции на
    событие <span class="cpp"><a href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a></span>. Для загрузки должна использоваться сервисная функция
    <span class="cpp"><span id="light_ref31"><a href="rdsReadBlockData.htm" title="А.5.10.1. rdsReadBlockData &ndash; считать данные блока в двоичном формате">rdsReadBlockData</a></span></span>. Следует учитывать, что текущие значения статических переменных блока
    восстанавливать не нужно &ndash; они сохраняются и восстанавливаются автоматически.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_SAVESTATE.htm" title="&sect;3.8.7.2. Запись состояния блока">Запись состояния блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref32"><a href="RDS_BFM_SAVESTATE.htm" title="А.2.4.13. RDS_BFM_SAVESTATE &ndash; запись состояния блока">RDS_BFM_SAVESTATE</a></span></span>, возникающее у блока, если его текущее состояние сохраняется по
    команде от модели какого-либо другого блока. Это событие &ndash; парное к предыдущему. Реагируя на него,
    модель должна сохранить значения всех изменяющихся со временем параметров блока, чтобы потом, в реакции на
    событие <span class="cpp"><a href="RDS_BFM_LOADSTATE.htm" title="А.2.4.8. RDS_BFM_LOADSTATE &ndash; загрузка состояния блока">RDS_BFM_LOADSTATE</a></span>, восстановить их. Для сохранения должна использоваться сервисная
    функция <span class="cpp"><span id="light_ref33"><a href="rdsWriteBlockData.htm" title="А.5.10.4. rdsWriteBlockData &ndash; записать данные блока в двоичном формате">rdsWriteBlockData</a></span></span>.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">реакции подсистемы</span>&raquo; объединяет реакции на различные действия пользователя с
  окном подсистемы:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_WINDOWOPERATION.htm" title="&sect;3.8.8.1. Действия с окном подсистемы">Действия с окном подсистемы</a></span>&raquo; &ndash; реакция на
    событие <span class="cpp"><span id="light_ref34"><a href="RDS_BFM_WINDOWOPERATION.htm" title="А.2.6.20. RDS_BFM_WINDOWOPERATION &ndash; открытие и закрытие окна подсистемы">RDS_BFM_WINDOWOPERATION</a></span></span>, возникающее у
    <a href="um_1_2.htm#light_ref10" title="Подсистема">подсистемы</a>, если ее окно
    открывается или закрывается, а также у <a href="um_1_2.htm#ref8" title="Типы блоков в RDS">блоков других типов</a>, если открывается
    или закрывается окно их <a href="um_1_2.htm#ref13" title="Родительская подсистема">родительской подсистемы</a>. В функцию, формируемую для
    реакции на это событие, передается указатель на структуру <span class="cpp"><a href="RDS_BFM_WINDOWOPERATION.htm#ref1" title="Структура RDS_WINOPERATIONDATA">RDS_WINOPERATIONDATA</a></span>,
    содержащую текущий режим RDS, дескриптор окна и т.п.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_WINDOWMOUSEDOWN.htm" title="&sect;3.8.8.2. Нажатие кнопки мыши (в окне подсистемы)">Нажатие кнопки мыши</a></span>&raquo;,
    &laquo;<span class="menu"><a href="ac_RDS_BFM_WINDOWMOUSEUP.htm" title="&sect;3.8.8.3. Отпускание кнопки мыши (в окне подсистемы)">отпускание кнопки мыши</a></span>&raquo; и др. &ndash; реакции на события,
    аналогичные событиям из группы &laquo;<span class="menu">мышь и клавиатура</span>&raquo;, но вызываемые не для блоков, а для подсистем
    при действиях мышью в свободном от блоков месте рабочего поля их окон. Если, например, ни один из блоков не
    среагировал на нажатие кнопки мыши, и для подсистемы разрешена реакция на мышь в свободных областях ее окна,
    будет вызвана реакция модели этой подсистемы. Поскольку автокомпилируемые модели подсистем на практике не
    применяются, события из этой группы используются крайне редко.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">внешний вид блока</span>&raquo; &ndash; события, связанные с изображением блока и его
  положением на рабочем поле:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_RESIZE.htm" title="&sect;3.8.9.1. Размер блока изменен">Размер блока изменен</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref35"><a href="RDS_BFM_RESIZE.htm" title="А.2.7.6. RDS_BFM_RESIZE &ndash; размер блока изменен пользователем">RDS_BFM_RESIZE</a></span></span>, возникающее у блоков, внешний вид которых
    рисуется программно, сразу после <a href="um_2_6.htm#ref9" title="Изменение размеров блока">изменения размеров</a>
    такого блока пользователем. В этой реакции можно отменить изменение размеров или скорректировать заданные
    пользователем размеры &ndash; например, изменять ширину блока синхронно с высотой, чтобы пропорции блока
    оставались неизменными. В функцию, формируемую для реакции на это событие, передается указатель на
    структуру <span class="cpp"><a href="RDS_BFM_RESIZE.htm#ref2" title="Структура RDS_RESIZEDATA">RDS_RESIZEDATA</a></span>, содержащую новые размеры блока и маркер выделения, который
    пользователь перетащил, чтобы изменить размеры.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_RESIZING.htm" title="&sect;3.8.9.2. Проверка изменения размера блока">Проверка изменения размера</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref36"><a href="RDS_BFM_RESIZING.htm" title="А.2.7.7. RDS_BFM_RESIZING &ndash; изменение размеров блока пользователем">RDS_BFM_RESIZING</a></span></span>, возникающее у блоков, внешний вид которых рисуется программно, в
    процессе изменения размера такого блока <a href="um_2_6.htm#ref9" title="Изменение размеров блока">перетаскиванием</a> одного из восьми маркеров
    выделения блока, то есть при каждом движении курсора мыши. Чаще всего эта реакция используется для создания
    визуальной обратной связи при изменении размеров: в ней можно корректировать размер инверсного прямоугольника,
    которым обозначается новый размер блока в процессе перетаскивания маркеров. В функцию, формируемую для реакции
    на это событие, тоже передается указатель на структуру <span class="cpp"><a href="RDS_BFM_RESIZE.htm#ref2" title="Структура RDS_RESIZEDATA">RDS_RESIZEDATA</a></span>. Пример модели,
    реагирующей на это событие, приведен в <a href="um_3_7_5.htm#ref18" title="Пример модели: стрелочный прибор">&sect;3.7.5</a>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MOVED.htm" title="&sect;3.8.9.3. Блок перемещен">Блок перемещен</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref37"><a href="RDS_BFM_MOVED.htm" title="А.2.7.4. RDS_BFM_MOVED &ndash; перемещение блока">RDS_BFM_MOVED</a></span></span>, возникающее у блока сразу после
    перемещения его <a href="um_2_6.htm#ref7" title="Перемещение блока мышью">пользователем</a> или программным вызовом из модели другого
    блока. Реакция на это событие используется достаточно редко &ndash; чаще всего, для автоматического
    перемещения каких-либо блоков вместе с данным. Модель блока не может отменить перемещение блока в этой
    реакции. В функцию, формируемую для реакции на событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_MOVED.htm#ref1" title="Структура RDS_MOVEDATA">RDS_MOVEDATA</a></span>, содержащую новые и старые координаты блока и причину его перемещения.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_DRAW.htm" title="&sect;3.8.9.4. Рисование блока">Рисование блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref38"><a href="RDS_BFM_DRAW.htm" title="А.2.6.3. RDS_BFM_DRAW &ndash; рисование внешнего вида блока">RDS_BFM_DRAW</a></span></span>, возникающее у блоков, внешний вид которых рисуется программно,
    при обновлении окна подсистемы с этим блоком. В реакции на это событие модель блока должна нарисовать в окне
    подсистемы его изображение, используя для этого
    <a href="app_index.htm#light_htm:app_a_5_18" title="А.5.18. Графические функции">сервисные функции RDS</a> или графические функции API Windows.
    Следует помнить, что для включения программного рисования в
    <a href="um_2_9_1.htm#ref11" title="Параметры блока - внешний вид">окне параметров блока</a> должен быть установлен флаг
    &laquo;<span class="menu">внешний вид блока &ndash; определяется функцией DLL</span>&raquo;, в противном случае блок будет
    изображаться либо векторной картинкой, либо прямоугольником с текстом, и реакция на это событие вызываться не
    будет. Функции рисования и различные их особенности подробно рассматриваются в
    <a href="pm_index.htm#light_htm:pm_2_10" title="&sect;2.10. Программное рисование внешнего вида блока">&sect;2.10 руководства программиста</a>, примеры моделей блока, рисующих изображения программно,
    приведены в <a href="um_3_7_5.htm" title="&sect;3.7.5. Блоки, программно рисующие свое изображение">&sect;3.7.5</a>. В функцию, формируемую для реакции, передается
    указатель на структуру <span class="cpp"><a href="RDS_BFM_DRAW.htm#ref1" title="Структура RDS_DRAWDATA">RDS_DRAWDATA</a></span>, содержащую оконные координаты, по которым
    необходимо нарисовать изображение, а также другие необходимые для рисования параметры.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_DRAWADDITIONAL.htm" title="&sect;3.8.9.5. Дополнительное рисование блока">Дополнительное рисование блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref39"><a href="RDS_BFM_DRAWADDITIONAL.htm" title="А.2.6.4. RDS_BFM_DRAWADDITIONAL &ndash; дополнительное рисование">RDS_BFM_DRAWADDITIONAL</a></span></span>, возникающее у всех блоков при обновлении окна их
    родительской подсистемы после того, как все изображения уже нарисованы. В отличие от события рисования
    <span class="cpp">RDS_BFM_DRAW</span>, которое возникает только у блоков, внешний вид которых рисуется
    программно, это событие возникает у всех блоков независимо от их <a href="um_1_2.htm#light_ref21" title="Варианты внешнего вида блока">внешнего вида</a>:
    у рисуемых программно, у имеющих
    векторную картинку и у изображаемых прямоугольником с текстом. В реакции на него можно вывести поверх
    изображения блока какую-либо дополнительную информацию &ndash; например, иконки, сигнализирующие об ошибках.
    В функцию, формируемую для реакции на событие, тоже передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_DRAW.htm#ref1" title="Структура RDS_DRAWDATA">RDS_DRAWDATA</a></span>. Пример модели блока, реагирующего на это событие, приведен в
    <a href="um_3_7_9.htm" title="&sect;3.7.10. Пометки на блоках">&sect;3.7.10</a>.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">сеть</span>&raquo; &ndash; события, связанные с встроенным в RDS механизмом обмена данными
  по сети (более подробно сетевые механизмы RDS описаны в
  <a href="pm_index.htm#light_htm:pm_2_15" title="&sect;2.15. Обмен данными по сети">&sect;2.15 руководства программиста</a>, здесь они не рассматриваются):
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_NETRECEIVEDDATA.htm" title="&sect;3.8.10.1. Получены данные по сети">Получены данные</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref40"><a href="RDS_BFM_NETDATARECEIVED.htm" title="А.2.8.3. RDS_BFM_NETDATARECEIVED &ndash; получение данных блоком">RDS_BFM_NETDATARECEIVED</a></span></span>, возникающее при получении блоком каких-либо данных по
    сети от другого блока. В функцию, формируемую для реакции, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_NETDATARECEIVED.htm#ref1" title="Структура RDS_NETRECEIVEDDATA">RDS_NETRECEIVEDDATA</a></span>, содержащую принятые данные и описание отправившего их блока и
    сервера, через который идет обмен данными.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_NETCONNECT.htm" title="&sect;3.8.10.2. Сетевое соединение установлено">Соединение установлено</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref41"><a href="RDS_BFM_NETCONNECT.htm" title="А.2.8.1. RDS_BFM_NETCONNECT &ndash; установка соединения">RDS_BFM_NETCONNECT</a></span></span>, возникающее после того, как соединение с сервером,
    запрошенное моделью блока при помощи сервисной функции RDS
    <span class="cpp"><a href="rdsNetConnect.htm" title="А.5.20.3. rdsNetConnect &ndash; установка сетевого соединения">rdsNetConnect</a></span>, успешно установлено. Обычно в этой реакции взводят какой-либо
    внутренний флаг в параметрах блока, указывающий на то, что теперь можно передавать данные другим блокам.
    В функцию, формируемую для реакции, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_NETCONNECT.htm#ref1" title="Структура RDS_NETCONNDATA">RDS_NETCONNDATA</a></span>, содержащую параметры установленного соединения.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_NETDISCONNECT.htm" title="&sect;3.8.10.3. Сетевое соединение разорвано">Соединение разорвано</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref42"><a href="RDS_BFM_NETDISCONNECT.htm" title="А.2.8.4. RDS_BFM_NETDISCONNECT &ndash; разрыв соединения">RDS_BFM_NETDISCONNECT</a></span></span>, возникающее после разрыва ранее установленного моделью блока
    соединения с сервером. Соединение может быть разорвано по разным причинам. Если соединение было разорвано по
    инициативе модели блока вызовом <span class="cpp"><a href="rdsNetCloseConnection.htm" title="А.5.20.2. rdsNetCloseConnection &ndash; разорвать соединение">rdsNetCloseConnection</a></span>, оно останется разорванным, в
    противном случае RDS будет пытаться самостоятельно восстановить это соединение без каких-либо запросов от
    модели. Обычно в этой реакции взводят какой-либо внутренний флаг в параметрах блока, указывающий на то, что
    передавать данные другим блокам сейчас нельзя. В функцию, формируемую для реакции, тоже передается указатель на
    структуру <span class="cpp"><a href="RDS_BFM_NETCONNECT.htm#ref1" title="Структура RDS_NETCONNDATA">RDS_NETCONNDATA</a></span>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_NETDATAACCEPTED.htm" title="&sect;3.8.10.4. Данные приняты сервером">Данные приняты сервером</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref43"><a href="RDS_BFM_NETDATAACCEPTED.htm" title="А.2.8.2. RDS_BFM_NETDATAACCEPTED &ndash; получение данных сервером">RDS_BFM_NETDATAACCEPTED</a></span></span>, возникающее после того, как сервер, через который блок
    отправил свои данные, подтвердил их получение. Это событие возникает только в том случае, если, передавая
    данные, блок запросил у сервера подтверждение их приема в параметрах функций
    <span class="cpp"><a href="rdsNetBroadcastData.htm" title="А.5.20.1. rdsNetBroadcastData &ndash; передача данных всем блокам канала">rdsNetBroadcastData</a></span> или <span class="cpp"><a href="rdsNetSendData.htm" title="А.5.20.4. rdsNetSendData &ndash; передача данных конкретному блоку канала">rdsNetSendData</a></span>. Следует помнить, что
    подтверждение выдается при получении данных сервером, а не блоком-получателем данных &ndash; серверу еще только
    предстоит отправить данные получателю. Эту реакцию можно использовать для организации в блоке собственной очереди
    передачи данных, не связанной с очередью RDS, чтобы блок не передавал очередную порцию данных, пока не
    получит от сервера подтверждение приема предыдущей. В функцию, формируемую для реакции, передается указатель на
    структуру <span class="cpp"><a href="RDS_BFM_NETDATAACCEPTED.htm#ref1" title="Структура RDS_NETACCEPTDATA">RDS_NETACCEPTDATA</a></span>, содержащую параметры сетевого соединения и идентификатор блока
    данных, получение которого подтверждается.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_NETERROR.htm" title="&sect;3.8.10.5. Ошибка сети">Ошибка сети</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref44"><a href="RDS_BFM_NETERROR.htm" title="А.2.8.5. RDS_BFM_NETERROR &ndash; ошибка при работе с сетью">RDS_BFM_NETERROR</a></span></span>, возникающее у блоков, участвующих в приеме или передаче данных,
    при возникновении различных ошибок в сетевом соединении. Большую часть
    таких ошибок RDS обрабатывает самостоятельно, поэтому, как правило, в моделях блоков реакция на это событие
    не требуется. В функцию, формируемую для реакции, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_NETERROR.htm#ref1" title="Структура RDS_NETERRORDATA">RDS_NETERRORDATA</a></span>, содержащую параметры сетевого соединения и код ошибки.</li>
  </ul>
  </li>

  <li>Группа &laquo;<span class="menu">разное</span>&raquo; &ndash; различные события, не вошедшие в одну из уже описанных групп:
  <ul>
    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_RENAME.htm" title="&sect;3.8.11.1. Переименование блока">Переименование блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref45"><a href="RDS_BFM_RENAME.htm" title="А.2.7.5. RDS_BFM_RENAME &ndash; переименование блока">RDS_BFM_RENAME</a></span></span>, возникающее после переименования блока. В функцию, формируемую для
    реакции, передается строка с именем блока до переименования. В реакции на это событие можно, например, изменить
    имена каких-либо связанных с блоком объектов, которые формируются из имени блока.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_SETUP.htm" title="&sect;3.8.11.2. Вызов настройки">Вызов настройки</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref46"><a href="RDS_BFM_SETUP.htm" title="А.2.6.13. RDS_BFM_SETUP &ndash; вызов функции настройки блока">RDS_BFM_SETUP</a></span></span>, возникающее в
    режиме редактирования при <a href="um_2_6.htm#ref3" title="Настройка блока">вызове функции настройки блока</a>. Редактор модели
    позволяет <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">достаточно простыми средствами</a> создавать окно для
    задания настроечных параметров блока без необходимости вручную писать программу для этой реакции. Реакцию
    на это событие можно использовать в тех случаях, когда встроенных в редактор модели возможностей окна
    настройки не хватает. Следует помнить, что если в редакторе модели одновременно описать настроечные параметры
    блока с окном их настройки и ввести текст для реакции на событие <span class="cpp">RDS_BFM_SETUP</span>,
    сначала будет открыто окно настройки, созданное средствами редактора, а введенная программа реакции
    вызовется только после закрытия этого окна кнопкой &laquo;<span class="menu">OK</span>&raquo; (кнопка
    &laquo;<span class="menu">отмена</span>&raquo; заблокирует вызов реакции) &ndash; пример такого использования этой реакции приведен в
    <a href="um_3_7_7a.htm" title="&sect;3.7.8. Программное управление динамическими переменными">&sect;3.7.8</a>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_REMOTEMSG.htm" title="&sect;3.8.11.3. Сообщение от управляющей программы">Сообщение от управляющей программы</a></span>&raquo; &ndash; реакция на
    событие <span class="cpp"><span id="light_ref47"><a href="RDS_BFM_REMOTEMSG.htm" title="А.2.4.11. RDS_BFM_REMOTEMSG &ndash; вызов от внешнего приложения">RDS_BFM_REMOTEMSG</a></span></span>, возникающее при
    <a href="pm_index.htm#light_htm:pm_3" title="Глава 3. Управление RDS из других приложений">управлении RDS из внешнего приложения</a> в момент вызова этим
    приложением данного блока схемы с помощью предназначенных для этого функций библиотеки
    &laquo;<span class="file">RdsCtrl.dll</span>&raquo;. В функцию, формируемую для реакции, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_REMOTEMSG.htm#ref1" title="Структура RDS_REMOTEMSGDATA">RDS_REMOTEMSGDATA</a></span>, содержащую переданные управляющим приложением данные.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_TIMER.htm" title="&sect;3.8.11.4. Срабатывание таймера">Реакция на таймер</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref48"><a href="RDS_BFM_TIMER.htm" title="А.2.4.16. RDS_BFM_TIMER &ndash; срабатывание таймера блока">RDS_BFM_TIMER</a></span></span>, возникающее при срабатывании таймера блока, созданного его моделью при
    помощи сервисной функции RDS <span class="cpp"><a href="rdsSetBlockTimer.htm" title="А.5.12.4. rdsSetBlockTimer &ndash; создать таймер">rdsSetBlockTimer</a></span>. В функцию, формируемую для реакции на
    это событие, передается идентификатор сработавшего таймера. Реакция на таймер может использоваться для
    периодического или отложенного на заданное время выполнения моделью блока каких-либо действий.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_WINREFRESH.htm" title="&sect;3.8.11.5. Обновление окон блока">Обновление окон блока</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref49"><a href="RDS_BFM_WINREFRESH.htm" title="А.2.6.21. RDS_BFM_WINREFRESH &ndash; обновление окон блока">RDS_BFM_WINREFRESH</a></span></span>, возникающее при необходимости обновить открытые окна,
    принадлежащие данному блоку. В функцию, формируемую для реакции на это событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_WINREFRESH.htm#ref1" title="Структура RDS_WINREFRESHDATA">RDS_WINREFRESHDATA</a></span>, в которой содержится идентификатор таймера, вызвавшего обновление окон
    (если обновление вызвано таймером),
    и в которую функция модели может записать время, потраченное ей на рисование содержимого этих окон, для учета в
    <a href="um_2_18.htm#ref23" title="Автоподстройка частоты обновления окон">алгоритме подстройки частоты обновления</a>. Создание моделей блоков,
    открывающих и поддерживающих собственные окна &ndash; довольно сложная задача, требующая использования
    блокировки данных, поэтому в автокомпилируемых моделях эта реакция практически не используется (желающие
    могут изучить <a href="pm_1_8.htm" title="&sect;1.8. Открытие окон в модели блока">&sect;1.8 руководства программиста</a>).</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_POPUPHINT.htm" title="&sect;3.8.11.6. Всплывающая подсказка">Всплывающая подсказка</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref50"><a href="RDS_BFM_POPUPHINT.htm" title="А.2.6.12. RDS_BFM_POPUPHINT &ndash; вывод всплывающей подсказки">RDS_BFM_POPUPHINT</a></span></span>, возникающее при запросе у блока текста всплывающей подсказки,
    если курсор мыши задержался в пределах изображения этого блока (при этом вывод всплывающей подсказки должен быть
    разрешен в <a href="um_2_9_1.htm#ref21" title="Вкладка DLL параметров блока">параметрах</a> блока). В функцию, формируемую для реакции на это
    событие, передается указатель на структуру <span class="cpp"><a href="RDS_BFM_POPUPHINT.htm#ref3" title="Структура RDS_POPUPHINTDATA">RDS_POPUPHINTDATA</a></span>, в которой содержатся
    координаты курсора мыши и текущие параметры изображения блока, и через которую модель возвращает
    параметры показа подсказки, если это необходимо. Текст подсказки возвращается в RDS при помощи сервисной
    функции <span class="cpp"><span id="light_ref51"><a href="rdsSetHintText.htm" title="А.5.6.53. rdsSetHintText &ndash; текст всплывающей подсказки">rdsSetHintText</a></span></span>. В этой реакции можно формировать не только статичные
    всплывающие подсказки, но и подсказки, изменяющиеся в зависимости от положения курсора на изображении блока
    (см. <a href="um_3_7_8.htm" title="&sect;3.7.9. Всплывающие подсказки">&sect;3.7.9</a>).</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_CONTEXTPOPUP.htm" title="&sect;3.8.11.7. Вызов контекстного меню">Вызов контекстного меню</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref52"><a href="RDS_BFM_CONTEXTPOPUP.htm" title="А.2.6.2. RDS_BFM_CONTEXTPOPUP &ndash; вызов контекстного меню блока">RDS_BFM_CONTEXTPOPUP</a></span></span>, возникающее при открытии контекстного (то есть вызываемого по
    правой кнопке мыши) меню блока. В этой реакции модель может добавить в это меню свои собственные пункты. В функцию,
    формируемую для реакции на это событие, передается указатель на структуру
    <span class="cpp"><a href="RDS_BFM_CONTEXTPOPUP.htm#ref1" title="Структура RDS_CONTEXTPOPUPDATA">RDS_CONTEXTPOPUPDATA</a></span>, в которой содержится признак нахождения RDS в режиме редактирования
    (чаще всего пункты контекстного меню в режиме редактирования и в режимах моделирования и расчета не совпадают).
    Примеры моделей, добавляющих свои пункты в контекстное меню, приведены в
    <a href="um_3_7_11.htm" title="&sect;3.7.12. Добавление пунктов в контекстное и системное меню">&sect;3.7.12</a>.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_MENUFUNCTION.htm" title="&sect;3.8.11.8. Выбор пункта меню">Выбор пункта меню</a></span>&raquo; &ndash; реакция на событие
    <span class="cpp"><span id="light_ref53"><a href="RDS_BFM_MENUFUNCTION.htm" title="А.2.6.7. RDS_BFM_MENUFUNCTION &ndash; выбор пользователем пункта меню">RDS_BFM_MENUFUNCTION</a></span></span>, возникающее при выборе пользователем одного из пунктов,
    добавленных моделью блока в его контекстное меню или в главное меню RDS. В функцию, формируемую для
    реакции на это событие, передается указатель на структуру <span class="cpp"><a href="RDS_BFM_MENUFUNCTION.htm#ref1" title="Структура RDS_MENUFUNCDATA">RDS_MENUFUNCDATA</a></span>, описывающую
    выбранный пользователем пункт.</li>

    <li>&laquo;<span class="menu"><a href="ac_RDS_BFM_VARCHECK.htm" title="&sect;3.8.11.9. После создания статических переменных">После создания статических переменных</a></span>&raquo; &ndash; фрагмент
    программы, вызываемый немедленно после автоматически формируемой модулем автокомпиляции реакции на событие проверки
    типа <a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a> <span class="cpp"><span id="light_ref54"><a href="RDS_BFM_VARCHECK.htm" title="А.2.4.18. RDS_BFM_VARCHECK &ndash; проверка допустимости структуры статических переменных блока">RDS_BFM_VARCHECK</a></span></span>,
    если фактические типы переменных блока совпали с заданными в редакторе модели. Если переменные блока
    отличаются по типам и последовательности от списка, заданного на
    <a href="um_3_6_2.htm" title="&sect;3.6.2. Статические переменные блока">вкладке &laquo;<span class="menu">переменные</span>&raquo;</a> левой панели редактора,
    этот фрагмент, как и все остальные реакции на события, вызываться не будет. В моделях блоков крайне редко
    возникает необходимость выполнить какие-либо действия после успешной проверки соответствия переменных блока
    ожиданиям модели, поэтому данная реакция практически не используется.</li>
    
    <li>&laquo;<span class="menu"><a href="ac_miscevents.htm" title="&sect;3.8.11.10. Прочие события">Прочие события</a></span>&raquo; &ndash; общая реакция 
    на все остальные события, возникающие в схеме. Эти события используются значительно реже перечисленных 
    выше, поэтому отдельные пункты в список для них не добавлены. В общую функцию, формируемую для реакции 
    на эти события, передается идентификатор конкретного события и указатель общего вида, 
    который нужно привести к типу, соответствующему параметрам события. Полный список 
    событий приведен в <a href="app_index.htm#light_htm:app_a_2" title="А.2. События блока и связанные с ними описания">А.2 приложений</a>.</li>
  </ul>
  </li>

</ul>

<p class="noindent">Для перечисленных выше событий автоматически формируются функции следующего вида:</p>

<pre class="cpp">  void rdsbcppBlockClass::<i>имя_функции</i>(<i>параметры</i>)
  {
    <i>текст пользователя</i>
  }</pre>

<p class="noindent">где <span class="cpp"><span id="light_ref55">rdsbcppBlockClass</span></span> &ndash;
имя класса блока (оно всегда одно и то же во всех моделях, несмотря на то, что содержимое этого класса
изменяется от модели к модели), <span class="cpp"><i>имя_функции</i></span> &ndash; жестко заложенное в
модуль автокомпиляции имя функции реакции на данное событие,
<span class="cpp"><i>параметры</i></span> &ndash; жестко заданный для каждого типа события набор параметров,
<span class="cpp"><i>текст пользователя</i></span> &ndash; введенный пользователем на вкладке редактора модели
фрагмент текста программы. Все возможные варианты создаваемых функций перечислены в
<a href="um_index.htm#light_htm:um_3_8" title="&sect;3.8. Краткий перечень вводимых в модель описаний и реакций на события">&sect;3.8</a>. Заголовок такой функции со всеми ее параметрами отображается в верхней
части вкладки, на которой вводится текст реакции
(<a href="#pic2" title="Заголовок функции реакции на событие">рис.&nbsp;337</a>) &ndash; таким образом, пользователь может понять, какие параметры функции он может
использовать в тексте.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_TabHeader.png" width="799" height="120" alt="Заголовок функции реакции на событие" />
<p id="light_pic2">Рис.&nbsp;337. Заголовок функции реакции на событие</p>
</div></div>


<p>Для описаний, в отличие от реакций на события, функции не генерируются &ndash; введенный пользователем текст
вставляется <a href="um_3_8_1.htm" title="&sect;3.8.1. Дополнительные описания, вводимые в модель">непосредственно в программу</a>
внутри или снаружи описания класса блока.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_6_3.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_5.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_4">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
