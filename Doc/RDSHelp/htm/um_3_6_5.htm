<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.6.5. Функции блока</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_6">&sect;3.6. Окно редактора модели</a></p>
<div class="level"><p>&sect;3.6.5. Функции блока</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_6_4.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_6.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_5">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.6. Окно редактора модели</h3>
<h4>&sect;3.6.5. Функции блока</h4>
<p class="abstract">Описывается добавление в модель функций блока, при помощи которых блок может непосредственно, без использования связей, вызывать другие блоки и передавать им данные, а также реагировать на такие вызовы от других блоков.</p>


<p>Одним из способов взаимодействия блоков схемы друг с другом является непосредственный вызов модели одного
блока моделью другого &ndash; в RDS это называется <span class="term">вызовом функции блока</span>.
Блок может выполнять несколько функций, каждая такая функция должна иметь уникальное текстовое имя, по которому
ее можно отличить от других. Обычно, если разработчик модели решает, что его блок может выполнять какие-либо
полезные действия по запросам от других блоков, он придумывает для этих действий имя функции &ndash; достаточно
длинное, и сложное, чтобы избежать возможного пересечения с функциями, придуманными другими разработчиками
&ndash; и встраивает в свою модель реакцию на выполнение этой функции. Имя функции блока в RDS не ограничено
по длине, поэтому чаще всего в него включают имя разработчика, название выполняемой задачи, библиотеку, в модели
из которой эта функция впервые появилась, и т.п. Общие рекомендации по выбору имен для новых функций даются в
<a href="pm_2_13_1.htm" title="&sect;2.13.1. Общие принципы вызова функций блоков">&sect;2.13.1 руководства программиста</a>.</p>

<p><span id="ref1">Технически</span>
механизм вызова функций блоков устроен в RDS следующим образом. Чтобы модель блока могла
вызывать функции других блоков и реагировать на вызов своих функций, эти функции должны быть
<span class="term" id="light_ref1">зарегистрированы</span> в RDS. Для этого модель должна передать в
RDS имя функции и получить присвоенный этой функции целый идентификатор (для этого используется вызов
<span class="cpp"><span id="light_ref2"><a href="rdsRegisterFunction.htm" title="А.5.13.12. rdsRegisterFunction &ndash; регистрация функции блока">rdsRegisterFunction</a></span></span>), и вся дальнейшая работа с функцией ведется с использованием этого
идентификатора. Для вызова функции другого блока необходимо передать RDS его
<a href="app_ids.htm#light_ref1" title="Идентификатор блока">идентификатор</a> (или идентификатор
<a href="um_1_2.htm#light_ref10" title="Подсистема">подсистемы</a>, если нужно вызвать функцию у всех ее блоков), идентификатор вызываемой функции и указатель на
область данных параметров функции (как правило, это какая-либо структура). Вызванная модель блока получает
идентификатор функции и указатель на область ее параметров, она должна сравнить этот идентификатор с
идентификаторами поддерживаемых ей функций и выполнить необходимые действия, если он совпал с одним из них.</p>

<p>Стандартный модуль автокомпиляции автоматизирует регистрацию функций и распознавание вызванной функции:
пользователю необходимо только добавить необходимые описания на вкладке &laquo;<span class="menu">функции</span>&raquo; дополнительной
панели <a href="um_3_6_1.htm" title="&sect;3.6.1. Элементы и меню окна редактора модели">окна редактора модели</a>
(<a href="#pic1" title="Список функций блока">рис.&nbsp;338</a>,
на рисунке дополнительная панель растянута по горизонтали, чтобы уместились длинные имена функций). Для каждой
из функций в списке на этой вкладке в модель будет автоматически добавлен регистрирующий ее вызов и
соответствующее ей событие в
<a href="um_3_6_4.htm" title="&sect;3.6.4. Описания программы и реакции блока на события">список событий</a>
(см. также <a href="#pic3" title="Реакции на вызов функций в списке событий модели">рис.&nbsp;340</a>).</p>

<div class="pic"><div class="container" id="pic1">
<img src="../img/AC_editor_functions.png" width="577" height="181" alt="Список функций блока" />
<p id="light_pic1">Рис.&nbsp;338. Список функций блока</p>
</div></div>


<p class="noindent">Список функций на вкладке состоит из четырех колонок:</p>
<ul>
  <li><span class="emph">Безымянная колонка</span> &ndash; отображает одну или две иконки. В левой части колонки
  белая иконка пустого листа означает, что текст реакции на вызов этой функции не введен в модель, а желтая
  иконка &ndash; что этот текст введен. На рисунке текст реакции введен только для третьей сверху функции. В
  правой части колонки изображается иконка дополнительных действий с функцией. Иконка с лупой (на рисунке &ndash;
  вторая сверху функция) указывает на то, что в модель данного блока будет добавлен автоматический поиск блока,
  зарегистрировавшегося в RDS в качестве
  <a href="um_3_7_12_4.htm" title="&sect;3.7.13.4. Регистрация и поиск исполнителя функции">исполнителя этой функции</a>. Иконка со знаком &laquo;<span class="menu">+</span>&raquo;
  (третья сверху функция на рисунке) &ndash; на то, что модель зарегистрирует данный блок как исполнителя функции.
  Наконец, отсутствие иконки в правой части колонки означает, что никаких дополнительных действий с функцией
  модель производить не будет.</li>

  <li>&laquo;<span class="menu">Имя в C++</span>&raquo; &ndash; имя объекта, созданного для хранения идентификатора этой функции и
  работы с ней. Вызов функции у других блоков производится с использованием этого объекта &ndash; примеры
  различных способов вызова приводятся в <a href="um_index.htm#light_htm:um_3_7_12" title="&sect;3.7.13. Вызов функций блоков">&sect;3.7.13</a>. Особенности использования
  объектов, создаваемых для работы с функциями, рассматриваются в <a href="um_3_7_12_5.htm" title="&sect;3.7.13.5. Объекты функций в автокомпилируемых моделях">&sect;3.7.13.5</a>.</li>

  <li>&laquo;<span class="menu">Имя в RDS</span>&raquo; &ndash; имя функции блока, под которым она регистрируется в RDS. Другие модели
  для вызова этой функции или реакции на ее вызов должны зарегистрировать ее под этим же именем.</li>

  <li>&laquo;<span class="menu">Параметр</span>&raquo; &ndash; тип указателя на область данных параметров функции, или пустая строка, если
  у функции нет параметров. На рисунке первая функция не имеет параметров, вторая использует в качестве параметра
  вещественное число (поэтому в колонке отображается &laquo;<span class="cpp">double*</span>&raquo;, то есть
  &laquo;указатель на <span class="cpp">double</span>&raquo;), параметром третей является некторая структура
  или класс с именем &laquo;<span class="cpp">TUMParams2</span>&raquo;.</li>
</ul>

<p class="noindent">Под списком располагаются кнопки, позволяющие добавлять, удалять и изменять функции, а также
переходить к вводу текста реакции на их вызов:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Кнопка</th>
    <th>Действие</th>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_AC_filledtext.png" width="25" height="25" alt="Кнопка: текст" /></td>
    <td>Открыть вкладку для ввода текста реакции на вызов выбранной функции.</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Plus.png" width="25" height="25" alt="Кнопка: добавить" /></td>
    <td>Добавить новую функцию (открывает отдельное окно, см. <a href="#pic2" title="Окно параметров функции блока">рис.&nbsp;339</a>).</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_properties.png" width="25" height="25" alt="Кнопка: свойства" /></td>
    <td>Изменить выбранную функцию (открывает отдельное окно).</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Delete.png" width="25" height="25" alt="Кнопка: удалить" /></td>
    <td>Удалить выбранную функцию.</td>
  </tr>
</table>
</div></div>

<p><span id="ref3">При</span>
добавлении новой функции блока или изменении уже существующей ее параметры отображаются в
<span id="light_ref3">отдельном окне</span>
(<a href="#pic2" title="Окно параметров функции блока">рис.&nbsp;339</a>).
В верхней части окна можно либо установить флажок &laquo;<span class="menu">стандартная функция</span>&raquo; и выбрать в выпадающем
списке одну из функций, поддерживаемых стандартными блоками, входящими в состав RDS, либо установить флажок
&laquo;<span class="menu">произвольная функция</span>&raquo; и ввести все параметры функции вручную.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_funcparams.png" width="567" height="411" alt="Окно параметров функции блока" />
<p id="light_pic2">Рис.&nbsp;339. Окно параметров функции блока</p>
</div></div>


<p>Для произвольной функции в нижней части окна заполняются следующие поля:</p>
<ul>
  <li>&laquo;<span class="menu">Имя функции в RDS</span>&raquo; &ndash; имя, под которым модель регистрирует функцию блока в RDS. Это
  же имя необходимо использовать для регистрации этой функции во всех остальных моделях, которые будут ее
  использовать.</li>

  <li>&laquo;<span class="menu">Идентификатор функции в программе</span>&raquo; &ndash; имя объекта, который будет создан в программе
  модели для хранения идентификатора этой функции. Его имя должно удовлетворять требованиям языка C (содержать
  только латинские буквы, цифры и знак подчеркивания и не начинаться с цифры) и не должно совпадать с именами
  <a href="um_3_6_2.htm" title="&sect;3.6.2. Статические переменные блока">статических</a> и <a href="um_3_6_3.htm" title="&sect;3.6.3. Динамические переменные блока">динамических</a>
  переменных блока. Запоминание в этом объекте идентификатора, полученного от RDS при регистрации функции,
  будет добавлено в программу автоматически. При первом вводе имени функции в окне параметров это поле
  заполняется само &ndash; по умолчанию имя объекта формируется добавлением к введенному имени
  функции приставки &laquo;<span class="cpp">rdsfunc</span>&raquo; и заменой всех символов, недопустимых для имен переменных в языке
  C, на подчеркивания (на рисунке для функции &laquo;<span class="rdsvar">UserManual.MyFunction2</span>&raquo; было автоматически
  сформировано имя переменной rdsfuncUserManual_MyFunction2). При желании, автоматически
  сформированное имя можно заменить на любое другое, не совпадающее с именами других глобальных объектов в
  программе.</li>

  <li>&laquo;<span class="menu">Имя функции реакции в классе блока</span>&raquo; &ndash; имя функции-члена класса блока, которая
  будет автоматически вызываться в том случае, если какой-нибудь другой блок вызовет блок с этой моделью
  для выполнения данной функции. Текст в этом поле формируется автоматически и не может быть изменен:
  он получается добавлением к имени переменной из предыдущего поля слова &laquo;Event&raquo;.</li>

  <li>&laquo;<span class="menu">Тип параметра функции (указатель)</span>&raquo; &ndash; тип указателя C++, к которому необходимо
  привести указатель на область параметров функции. Например, если параметром функции является вещественное число
  типа <span class="cpp">double</span>, в это поле необходимо ввести &laquo;<span class="cpp">double*</span>&raquo;. На рисунке в
  поле введено &laquo;<span class="cpp">TUMParams2*</span>&raquo; &ndash; это означает, что параметром функции будет являться
  некоторая структура типа <span class="cpp">TUMParams2</span>.</li>

  <li>&laquo;<span class="menu">Дополнительные действия</span>&raquo; &ndash; одно из двух возможных действий, которые модель может
  выполнить для этой функции: либо зарегистрировать блок с этой моделью в RDS как исполнителя данной функции,
  чтобы все остальные блоки схемы могли его легко найти (на рисунке выбран именно такой вариант), либо, наоборот,
  заставить модель найти блок, зарегистрированный как исполнитель функции, чтобы можно было вызывать его. Можно не
  указывать никаких действий &ndash; в этом случае модель все равно сможет вызывать функцию и реагировать на ее
  вызов, но все действия в этой модели по определению вызываемого блока и в других моделях по поиску этого должны
  будут выполняться вручную.</li>
</ul>

<div class="picright"><div class="container" id="pic3">
<img src="../img/AC_editor_functions_events.png" width="331" height="109" alt="Реакции на вызов функций в списке событий модели" />
<p id="light_pic3">Рис.&nbsp;340. Реакции на вызов функций<br />в списке событий модели</p>
</div></div>


<p class="noindent">Нажатие кнопки &laquo;<span class="menu">OK</span>&raquo; занесет новые параметры функции в список. При добавлении новой функции
блока ее имя автоматически появляется в группе &laquo;<span class="menu">функции блока</span>&raquo; в списке событий на
<a href="um_3_6_4.htm" title="&sect;3.6.4. Описания программы и реакции блока на события">панели &laquo;<span class="menu">события</span>&raquo;</a>, где можно будет ввести реакцию на
ее вызов у блока с данной моделью. Реакции на вызовы функций из списка на
<a href="#pic1" title="Список функций блока">рис.&nbsp;338</a> в списке событий изображены
на <a href="#pic3" title="Реакции на вызов функций в списке событий модели">рис.&nbsp;340</a>.
Если модель должна не только вызывать эту функцию, но и реагировать на ее вызов, открыть вкладку для ввода
текста реакции можно как из списка событий, дважды щелкнув на имени функции, так и из самого списка функций,
выбрав в нем нужную функцию и нажав кнопку с желтым листком слева снизу под списком.</p>

<p>Для реакции на вызов функции без параметров автоматически формируется функция-член класса
блока следующего вида:</p>

<pre class="cpp">  void rdsbcppBlockClass::<i>имя_функции</i>(
    <a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm#ref2" title="Указатель на RDS_FUNCTIONCALLDATA">RDS_PFUNCTIONCALLDATA</a> FData,
    int &Result)
  {
    <i>текст пользователя</i>
  }</pre>

<p class="noindent">где <span class="cpp">rdsbcppBlockClass</span> &ndash; жестко заданное модулем автокомпиляции имя класса блока,
<span class="cpp"><i>имя_функции</i></span> &ndash; автоматически сформированное имя функции реакции из поля
&laquo;<span class="menu">имя функции реакции в классе блока</span>&raquo;
<a href="#pic2" title="Окно параметров функции блока">окна параметров функции</a>,
<span class="cpp">FData</span> &ndash; указатель на структуру
<span class="cpp"><a href="RDS_BFM_FUNCTIONCALL.htm#ref1" title="Структура RDS_FUNCTIONCALLDATA">RDS_FUNCTIONCALLDATA</a></span> (см.
<a href="um_3_8_5.htm" title="&sect;3.8.5. Вызов функции блока">&sect;3.8.5</a>), описывающую вызов функции (какой блок ее вызвал, в
каком режиме и т.п.), <span class="cpp">Result</span> &ndash; ссылка на целую переменную, через которую
функция возвращает результат,
<span class="cpp"><i>текст пользователя</i></span> &ndash; введенный пользователем на вкладке редактора
модели фрагмент текста программы. Для функции с параметрами в описание добавляется еще и параметр указанного при
добавлении функции типа:</p>

<pre class="cpp">  void rdsbcppBlockClass::<i>имя_функции</i>(<i>тип_параметра</i> Param,
    <a class="hidden" href="RDS_BFM_FUNCTIONCALL.htm#ref2" title="Указатель на RDS_FUNCTIONCALLDATA">RDS_PFUNCTIONCALLDATA</a> FData,
    int &Result)
  {
    <i>текст пользователя</i>
  }</pre>

<p class="noindent">где <span class="cpp"><i>тип_параметра</i></span> &ndash; указанный при создании функции тип
указателя на область ее параметров, <span class="cpp">Param</span> &ndash; приведенный к этому типу
указатель.</p>

<p>Примеры моделей, вызывающих функции других блоков и реагирующих на такие вызовы, приведены в
<a href="um_index.htm#light_htm:um_3_7_12" title="&sect;3.7.13. Вызов функций блоков">&sect;3.7.13</a>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_6_4.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_6.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_5">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
