<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.6.7. Параметры модели</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_6">&sect;3.6. Окно редактора модели</a></p>
<div class="level"><p>&sect;3.6.7. Параметры модели</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_6_6.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_8.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_7">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.6. Окно редактора модели</h3>
<h4>&sect;3.6.7. Параметры модели</h4>
<p class="abstract">Рассматривается ввод различных описаний и параметров модели, влияющих на ее общее поведение.</p>


<p>Возможности модели блока и особенности ее поведения зависят не только от
<a href="um_3_6_4.htm" title="&sect;3.6.4. Описания программы и реакции блока на события">реакций на события</a>, введенных пользователем,
но и от общих параметров модели, влияющих на формируемый модулем автокомпиляции текст программы.
Не следует путать параметры модели с
<a href="um_index.htm#light_htm:um_3_9" title="&sect;3.9. Настройки стандартного модуля автокомпиляции">параметрами самого модуля</a>: хотя и те, и другие управляют
формированием текста программы, параметры модели индивидуальны для каждой модели, а параметры модуля
&ndash; общие для всех моделей, обслуживаемых этим модулем.</p>

<p><span id="ref1">Чтобы</span>
изменить параметры модели, следует в
<a href="um_3_6_1.htm" title="&sect;3.6.1. Элементы и меню окна редактора модели">окне ее редактора</a> вызвать пункт главного меню
&laquo;<span class="menu">модель | параметры модели</span>&raquo;. При этом откроется окно с четырьмя вкладками, самая важная из которых
&ndash; &laquo;<span class="menu"><span id="light_ref1">компиляция</span></span>&raquo;
(<a href="#pic1" title="Окно параметров модели &ndash; параметры исходного текста">рис.&nbsp;353</a>).
На ней расположены флажки, большая часть которых управляет добавлением в программу модели тех или
иных автоматически выполняемых действий.</p>

<div class="pic"><div class="container" id="pic1">
<img src="../img/AC_ModelParams_Comp.png" width="472" height="365" alt="Окно параметров модели &ndash; параметры исходного текста" />
<p id="light_pic1">Рис.&nbsp;353. Окно параметров модели &ndash; параметры исходного текста</p>
</div></div>


<p>Флажок &laquo;<span class="menu">не реагировать на события без динамических переменных</span>&raquo; отключает все реакции модели на
события, если хотя бы одна из
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">динамических переменных</a>, занесенных пользователем в
список на <a href="um_3_6_3.htm" title="&sect;3.6.3. Динамические переменные блока">вкладке &laquo;<span class="menu">переменные</span>&raquo;</a>, отсутствует.
Динамические переменные, в отличие от
<a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических</a>, создаются не заранее, а в процессе работы схемы, и могут
быть удалены создавшими их блоками в любой момент. Обращение к отсутствующей в данный момент динамической переменной
вызывает критическую ошибку, поэтому модели блоков должны проверять их существование перед каждым обращением.
Установка этого флажка добавляет в программу модели проверку существования всех указанных в модели
динамических переменных перед вызовом реакции на каждое событие. Если эта проверка не проходит, программа модели
немедленно завершается, и введенные пользователем фрагменты программ не выполняются. В этом случае внутри них можно
обращаться к любым динамическим переменным, не заботясь об их существовании: если хотя бы одной переменной не будет,
вся реакция не будет выполнена. Для большинства моделей такое поведение подходит &ndash; действительно, если
одна из необходимых для работы блока переменных отсутствует, работа модели бессмысленна &ndash; поэтому в новых
пустых моделях этот флажок установлен по умолчанию.
<span id="ref2">Однако</span>, если при отсутствии динамической переменной модель все
равно должна предпринимать какие-либо действия (например, выводить пользователю сообщение об ошибке, или брать
данные из статической переменной), флажок следует отключить, и проверять существование каждой динамической переменной
вручную, при помощи функции-члена ее класса
<span class="cpp" id="light_ref2"><a href="um_3_7_3_1.htm#ref5" title="Проверка существования динамической переменной">Exists</a></span>.</p>

<p>Флажок &laquo;<span class="menu">перехватывать ошибки математических функций</span>&raquo; добавляет в программу модели
специальные функции, которые предотвращают прерывание выполнения модели при возникновении каких-либо ошибок
в стандартной математической библиотеке. Какие именно функции необходимо вставить в программу при установке этого
флажка, определяют
<a href="um_3_9_10.htm" title="&sect;3.9.10. Настройка обработки исключений и ошибок">параметры модуля автокомпиляции</a>.
<span id="ref3">По</span>
<span id="ref4">умолчанию</span> в программу вставляется
функция с названием <span class="cpp" id="light_ref4">_matherr</span>, которая заменяет результат операции, которая не
может быть выполнена, на ноль в случае ошибки потери точности, и на специальное значение, предусмотренное для
индикации ошибки операции с вещественными числами, при любой другой ошибке (это значение хранится в
глобальной переменной <span class="cpp" id="light_ref3">rdsbcppHugeDouble</span>). Следует помнить, что данный флажок
управляет только перехватом ошибок математической библиотеки, а не любых операций с вещественными числами:
например, деление на ноль он отследить не в состоянии. Подробнее о перехвате математических ошибок можно прочесть в
руководстве по используемому компилятору.</p>

<p><span id="ref5">Флажок</span>
&laquo;<span class="menu"><span id="ref6">перехватывать </span>все <span id="light_ref7">исключения</span>, возникшие в модели</span>&raquo;, заключает всю функцию модели блока
внутрь оператора
<span class="cpp" id="light_ref5">try</span>&hellip;<span class="cpp" id="light_ref6">catch</span>.
Если внутри этого оператора возникнет ошибка, приводящая к прерыванию работы модели, пользователю будет выведено
сообщение об этом, и расчет, если он запущен, будет остановлен. Если не устанавливать этот флажок, возникшая
ошибка все равно будет перехвачена RDS, и пользователю будет выведено стандартное диагностическое сообщение
(<a href="#pic2" title="Стандартное сообщение RDS о критической ошибке в модели">рис.&nbsp;354</a>)
с предложением завершить работу. С установленным флажком поведение модели будет зависеть от дополнительного
флажка &laquo;<span class="menu">игнорировать исключения и продолжать расчет</span>&raquo;: если он установлен, модель продолжит работу,
несмотря на исключение, в противном случае пользователю будет выведено короткое сообщение, причем модель не
позволит пользователю завершить работу с потерей всех не сохраненных изменений в схеме. Использование общего
перехвата исключений, управляемого данными двумя флажками, следует рассматривать только как временную меру:
если в модели содержатся ошибки, вызывающие исключения, разработчик должен самостоятельно перехватывать их
именно в тех местах, где они возникают, и обрабатывать должным образом.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/StdExceptionMessage.png" width="575" height="262" alt="Стандартное сообщение RDS о критической ошибке в модели" />
<p id="light_pic2">Рис.&nbsp;354. Стандартное сообщение RDS о критической ошибке в модели</p>
</div></div>


<p>Флажок &laquo;<span class="menu">автозапуск при изменении динамических переменных</span>&raquo; добавляет в программу модели
автоматическое присвоение единицы
<a href="um_1_4.htm#ref25" title="Сигнал запуска блока">первой сигнальной переменной блока</a>, всегда используемой в качестве команды
на запуск модели, при изменении любой
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">динамической переменной</a>, внесенной пользователем в список на
<a href="um_3_6_3.htm" title="&sect;3.6.3. Динамические переменные блока">вкладке &laquo;<span class="menu">переменные</span>&raquo;</a> дополнительной панели редактора.
Очень многие блоки должны выполнять одинаковые действия и при изменении их
<a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a>
(то есть при поступлении данных на их входы), и при изменении динамических переменных, с которыми эти блоки
связаны. Чтобы не записывать одну и ту же программу два раза и в
<a href="ac_RDS_BFM_MODEL.htm" title="&sect;3.8.3.1. Выполнение такта расчета">реакции на такт расчета</a>
(событие <span class="cpp"><a href="RDS_BFM_MODEL.htm" title="А.2.4.9. RDS_BFM_MODEL &ndash; выполнение такта расчета">RDS_BFM_MODEL</a></span>), и в
<a href="ac_RDS_BFM_DYNVARCHANGE.htm" title="&sect;3.8.3.7. Изменение динамической переменной">реакции на изменение динамических переменных</a>
(событие <span class="cpp"><a href="RDS_BFM_DYNVARCHANGE.htm" title="А.2.4.4. RDS_BFM_DYNVARCHANGE &ndash; изменение динамической переменной">RDS_BFM_DYNVARCHANGE</a></span>, см. список событий блоков в
<a href="um_3_6_4.htm" title="&sect;3.6.4. Описания программы и реакции блока на события">&sect;3.6.4</a>), можно включить этот флажок и записать необходимые действия только
в реакции на такт расчета. При этом, как только какая-либо из связанных с блоком динамических переменных
изменится, будет автоматически взведен сигнал запуска модели, и в ближайшем такте расчета блок выполнит свою
программу. Разумеется, если в параметрах блоков с данной моделью
<a href="um_2_9_1.htm#light_ref8" title="Установка режима запуска блока">включен запуск каждый такт</a>, модель блока будет
принудительно запускаться в каждом такте расчета независимо от изменений каких-либо переменных, и в
установке данного флажка нет смысла.</p>

<p><span id="ref8">Флажок</span>
&laquo;<span class="menu"><span id="light_ref8">проверять индексы</span> в массивах и матрицах (медленно)</span>&raquo;
добавляет в формируемую модулем автокомпиляции программу модели специальные функции для автоматической проверки
допустимости индексов всех массивов и матриц, являющихся статическими и динамическими переменными блока.
Если флажок выключен, то, как и принято в языке C, такая проверка не производится &ndash; это ускоряет работу
программы. Однако, в этом случае при попытке обращения к элементу за пределами текущего размера массива или матрицы
(например, при обращении к двадцатому элементу массива, в котором всего десять элементов), возникнет критическая
ошибка. Правила написания моделей блоков для RDS требуют обязательной проверки допустимости индекса перед
обращением к массиву или матрице, поэтому в правильно написанной модели устанавливать этот флажок не нужно:
все проверки должны быть выполнены программистом явно. Тем не менее, если модель по непонятным причинам постоянно
выдает исключения и отказывается работать, установка этого флажка может дать понять, в чем именно дело. Если
после его установки модель начала выдавать сообщения о недопустимом индексе с указанием имени модели и имени
массива или матрицы, значит, ошибки возникают именно из-за недопустимых индексов, и их проще будет найти и
исправить. Следует, однако, помнить, что действие этого флажка распространяется только на статические и
динамические переменные блока, для работы с которыми модуль автокомпиляции формирует специальные классы, в
которые и добавляются функции автоматической проверки индексов. Для стандартных описаний массивов и матриц в
синтаксисе языка C проверки не производятся: если, например, внутри какой-либо реакции блока описать массив из
десяти элементов оператором &laquo;<span class="cpp">double a[10];</span>&raquo;, а затем выполнить оператор
&laquo;<span class="cpp">a[20]=1;</span>&raquo;, исключение возникнет независимо от состояния описываемого флажка, и
никаких диагностических сообщений выдано не будет.</p>

<p>Флажок &laquo;<span class="menu">создать макросы RDSBCPP_VT_ для классов переменных</span>&raquo; добавляет для
каждой <a href="um_3_6_2.htm" title="&sect;3.6.2. Статические переменные блока">статической</a>
и <a href="um_3_6_3.htm" title="&sect;3.6.3. Динамические переменные блока">динамической</a>
переменной блока макроопределение для имени класса,
<a href="um_3_7_1.htm#ref21" title="Макросы классов переменных">сгенерированного</a> модулем автокомпиляции
для доступа к этой переменной. Макроопределение имеет следующий вид:</p>

<pre class="cpp">  #define RDSBCPP_VT_<span class="changes"><i>ИмяПеременной</i></span> <span class="changes"><i>ИмяКласса</i></span></pre>

<p class="noindent">(здесь &laquo;<i>ИмяПеременной</i>&raquo; &ndash; имя переменной блока,
&laquo;<i>ИмяКласса</i>&raquo; &ndash; имя класса, созданного для этой переменной).
Например, для доступа к статическим переменным типа &laquo;матрица <span class="cpp">double</span>&raquo;
автоматически создается класс с именем &laquo;<span class="cpp">rdsbcstMDouble</span>&raquo;. Если в блоке есть
статическая матрица с именем &laquo;<span class="rdsvar">A</span>&raquo;, то при включенном флажке создания макросов в
текст программы будет добавлена следующая строка:</p>

<pre class="cpp">  #define RDSBCPP_VT_A rdsbcstMDouble</pre>

<p>В большинстве случаев разработчику модели можно не задумываться, как именно называется класс,
созданный для работы с переменной, поскольку к переменным внутри реакций на события можно обращаться
просто по именам. Однако, если необходимо создать отдельную функцию, которая будет работать
с переменными блока, для описания параметров этой функции необходимо будет указать типы переменных,
что проще всего сделать с использованием автоматически созданных макросов. Пусть, например, требуется
создать функцию, суммирующую все элементы статической матрицы вещественных чисел, причем в блоке
есть переменная &laquo;<span class="rdsvar">A</span>&raquo; нужного типа &laquo;матрица <span class="cpp">double</span>&raquo;.
Тогда функцию можно записать следующим образом:</p>

<pre class="cpp">  double SumMatr(RDSBCPP_VT_A &matr)
  { double sum=0.0;
    for(int c=0;c&lt;matr.<a class="hidden" href="um_3_7_2_2.htm#light_ref4" title="Функция Cols класса матрицы">Cols</a>();c++)
      for(int r=0;r&lt;matr.<a class="hidden" href="um_3_7_2_2.htm#light_ref5" title="Функция Rows класса матрицы">Rows</a>();r++)
        sum+=matr[r][c];
    return sum;
  }</pre>

<p class="noindent">Разместить эту функцию нужно будет в
<a href="um_3_8_1.htm" title="&sect;3.8.1. Дополнительные описания, вводимые в модель">описаниях</a> после класса блока,
поскольку строки с макроопределениями добавляются после описания каждой переменной, то есть
внутри класса блока.</p>

<p><span id="ref9">Флажок</span>
&laquo;<span class="menu"><span id="light_ref10">блок участвует в инициализационном расчете</span></span>&raquo;
разрешает вызов модели блока для реакции на
<a href="ac_RDS_BFM_MODEL.htm" title="&sect;3.8.3.1. Выполнение такта расчета">такт расчета</a> не только в обычном
<a href="um_1_3.htm#ref3" title="Режим расчета">режиме расчета</a>,
но и при проведении
<a href="um_1_3.htm#ref6" title="Инициализационный (предварительный) расчет">предварительного расчета</a> в момент выхода из
<a href="um_1_3.htm#ref1" title="Режим редактирования">режима редактирования</a>.
<span id="light_ref9">Предварительный расчет</span> обычно выполняется по
запросу начальных блоков алгебраических цепочек (например, полей ввода)
и позволяет уменьшить число тактов переходного процесса в таких цепочках. При этом
блоки в цепочке последовательно вызываются для обработки значения, поступившего с предыдущего
блока, и правильное значение на конечном блоке цепочки устанавливается не через несколько
тактов после начала расчета, как обычно (см. <a href="um_1_4.htm#pic4" title="Две ветви алгебраических блоков">рис.&nbsp;10</a>),
а непосредственно перед запуском расчета. Флажок предварительного расчета следует
устанавливать только в том случае, если блок должен вычислять свои выходные
значения немедленно при изменении входных. Если, например, блок моделирует какой-либо
<a href="um_index.htm#light_htm:um_3_7_4" title="&sect;3.7.4. Моделирование длящихся во времени процессов">длящийся во времени процесс</a>, включать его в
предварительный расчет не следует, поскольку он должен вычислять выходы не при
изменении входов, а при изменении динамической переменной времени.
<span id="ref11">Установка</span>
этого флажка вызывает взведение флага <span id="light_ref11" class="cpp">RDS_INITCALC</span>
в поле <span class="cpp">Flags</span> структуры данных блока
<span class="cpp"><a href="um_3_7_1.htm#ref27" title="Структура RDS_BLOCKDATA">RDS_BLOCKDATA</a></span>. В абсолютном большинстве простых моделей
можно обойтись и без предварительного расчета, поскольку задержка данных на
несколько тактов, как правило, не влияет на работоспособность схемы.</p>

<p><span id="ref12">Флажок</span>
&laquo;<span class="menu">блок начинает инициализационный расчет</span>&raquo; устанавливается у блоков,
с которых обычно начинаются алгебраические цепочки, чтобы выходные значения этих блоков
были обработаны этой цепочкой в момент выхода из режима редактирования. Установка этого флажка
вызывает взведение флага <span class="cpp" id="light_ref12">RDS_INITCALCFIRST</span>
в структуре данных блока.</p>

<p><span id="ref13">Флажок</span>,
&laquo;<span class="menu"><span id="light_ref13">запретить редактирование модели</span></span>&raquo;, блокирует все операции по изменению
параметров, переменных, функций и фрагментов программ модели. После его установки модель можно только
просматривать, но нельзя редактировать. Это может оказаться полезным при передаче модели другому пользователю,
чтобы он случайно не изменил ее.
При попытке вызвать редактор модели пользователю будет предложено либо открыть окно редактора в
режиме просмотра, либо сделать копию модели для ее изменения. Если установить дополнительный флажок
&laquo;<span class="menu">при запрете открывать редактор в режиме просмотра</span>&raquo;, окно редактора будет
открываться в режиме просмотра без запроса.
Чтобы снова редактировать модель, этот флажок необходимо будет сбросить.</p>

<p><span id="light_ref14">Вкладка &laquo;<span class="menu">связанные файлы</span>&raquo;</span>
окна параметров модели
(<a href="#pic3" title="Окно параметров модели &ndash; связанные файлы">рис.&nbsp;355</a>)
содержит список файлов, при изменении которых модуль автокомпиляции будет считать, что модель
необходимо скомпилировать заново. Как правило, это файлы заголовков, включаемых в программу модели.
Если, например, в модели используются описания из файла &laquo;<span class="file">AuxDefs.h</span>&raquo;, и в этот файл
внесены изменения, модель необходимо компилировать заново, хотя сама модель не менялась.</p>

<div class="pic"><div class="container" id="pic3">
<img src="../img/AC_ModelParams_Files.png" width="472" height="327" alt="Окно параметров модели &ndash; связанные файлы" />
<p id="light_pic3">Рис.&nbsp;355. Окно параметров модели &ndash; связанные файлы</p>
</div></div>


<p>Верхнюю часть вкладки занимает автоматически созданный список файлов, ссылки на которые (то есть
команды препроцессора &laquo;<span class="cpp">#include</span>&raquo;) модуль автокомпиляции нашел в
<a href="um_3_8_1.htm" title="&sect;3.8.1. Дополнительные описания, вводимые в модель">глобальных описаниях</a>, внесенных пользователем в модель.
Для формирования этого списка должен быть включен флажок &laquo;<span class="menu">искать в глобальных описаниях</span>&raquo;. Если
при этом включен еще и флажок &laquo;<span class="menu">искать в найденных файлах</span>&raquo;, в список попадут не только файлы,
найденные в глобальных описаниях, но и файлы, на которые ссылаются эти найденные файлы &ndash; таким образом,
в список будут добавлены все цепочки ссылающихся друг на друга файлов заголовков. Пользователь не может
самостоятельно добавлять файлы в этот список.</p>

<p>Нижнюю часть вкладки занимает список связанных файлов, создаваемый пользователем вручную. В него обычно
включаются файлы, которые модуль автокомпиляции не нашел автоматически, или которые связаны
с моделью каким-либо образом, отличным от команды &laquo;<span class="cpp">#include</span>&raquo; в описаниях. Для работы со
списком используются кнопки:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Кнопка</th>
    <th>Действие</th>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Plus.png" width="25" height="25" alt="Кнопка: добавить" /></td>
    <td>Добавить новый файл (открывается стандартный диалог выбора файла).</td>
  </tr>
  <tr>
    <td class="center"><img class="btn" src="../img/Button_Delete.png" width="25" height="25" alt="Кнопка: удалить" /></td>
    <td>Удалить выбранный в списке файл.</td>
  </tr>
</table>
</div></div>

<p>Для файлов, находящихся в
<a href="um_2_18.htm#ref8" title="Стандартные папки RDS">стандартных папках RDS</a>, имена этих папок заменяются на
<a href="rdsGetFullFilePath.htm#ref1" title="Символические обозначения стандартных путей">символические обозначения</a>.
На <a href="#pic3" title="Окно параметров модели &ndash; связанные файлы">рис.&nbsp;355</a>,
например, добавленный в список файл &laquo;<span class="file">About.h</span>&raquo; находится в
<a href="um_2_18.htm#ref2" title="Папка настроек">стандартной папке настроек RDS</a>
(обозначение &laquo;$INI$&raquo;).</p>

<p>На <span id="light_ref15">вкладке &laquo;<span class="menu">описание</span>&raquo;</span> окна параметров модели
(<a href="#pic4" title="Окно параметров модели &ndash; описание и версия">рис.&nbsp;356</a>)
вводится текст описания модели и информация о ее версии.</p>

<div class="pic"><div class="container" id="pic4">
<img src="../img/AC_ModelParams_Descr.png" width="472" height="327" alt="Окно параметров модели &ndash; описание и версия" />
<p id="light_pic4">Рис.&nbsp;356. Окно параметров модели &ndash; описание и версия</p>
</div></div>


<p>Описание модели &ndash; это произвольный многострочный текст, он никак не влияет на  работу и обычно
используется для ввода каких-либо комментариев. Этот текст также отображается при
создании модели по шаблону в нижней части
<a href="um_3_3.htm#pic4" title="Выбор создания модели по шаблону">окна выбора шаблона</a>.</p>

<p>Для включения в модель информации о ее версии следует установить флажок
&laquo;<span class="menu">версия модели</span>&raquo; и ввести в поля ввода справа от него три числа, которыми в RDS обозначаются
версии всех моделей и библиотек. Первое число считается старшим номером версии (допустимый диапазон &ndash;
0&hellip;127), второе &ndash; младшим (0&hellip;255), третье &ndash; номером сборки (0&hellip;32767). Номер версии
позволяет пользователю сравнивать разные версии модели друг с другом, чтобы выбрать из них самую последнюю.
При сравнении версий сначала сравниваются старшие номера, и модель с большим старшим номером считается более
поздней. Если старшие номера одинаковы, сравниваются младшие, и более поздней считается модель с большим
младшим номером. Если же и младшие номера одинаковы, сравниваются номера сборки. Например, модель с версией
&laquo;1.0.0&raquo; сделана позднее модели с версией &laquo;0.100.1&raquo;, а модель с версией
&laquo;1.2.3&raquo; сделана позднее модели с версией &laquo;1.2.2&raquo;. Дополнительный флажок
&laquo;<span class="menu">+ время</span>&raquo; позволяет включить в модель не только информацию о версии, но и информацию о времени
последнего изменения. И номер версии, и время последнего изменения, если эта информация есть в модели, отображаются
на
<a href="um_2_17.htm#pic6" title="Информация о схеме: вкладка компиляция">вкладке &laquo;<span class="menu">компиляция</span>&raquo; окна информации о загруженной схеме</a>.

Следует помнить, что номер версии не добавляется в параметры создаваемого файла DLL, поэтому, с точки зрения
Windows, а также сторонних программ создания установочных пакетов, созданные модулем автокомпиляции файлы DLL
не имеют версий.</p>

<p>На последней вкладке окна параметров модели,
&laquo;<span class="menu"><span id="light_ref16">дополнительно</span></span>&raquo;
(<a href="#pic5" title="Окно параметров модели &ndash; дополнительные параметры">рис.&nbsp;357</a>), собраны редко используемые параметры,
предназначенные для создания сложных блоков, программно изменяющих свои собственные модели. Здесь
примеры таких блоков не приводятся.</p>

<div class="pic"><div class="container" id="pic5">
<img src="../img/AC_ModelParams_Misc.png" width="472" height="330" alt="Окно параметров модели &ndash; дополнительные параметры" />
<p id="light_pic5">Рис.&nbsp;357. Окно параметров модели &ndash; дополнительные параметры</p>
</div></div>


<p>Флажок &laquo;<span class="menu">не останавливаться при предупреждениях</span>&raquo; автоматически закрывает
<a href="um_3_3.htm#pic7" title="Окно компиляции">окно компиляции</a>, если в отчете, выданном компилятором,
содержатся предупреждения, но нет ошибок. По умолчанию, то есть если этот флажок не установлен,
при наличии предупреждений окно компиляции остается на экране, отображая общее количество обнаруженных
предупреждений и привлекая внимание пользователя, а после того, как он вручную закроет окно,
открывается редактор модели со списком обнаруженных предупреждений. Если сложный блок каким-либо
образом самостоятельно модифицирует свою модель, в этой программно сформированной модели могут
встретиться ненужные или дублирующие фрагменты, которые не влияют на работу модели, но распознаются
компилятором и помещаются в его отчет как предупреждения: например, наличие не использованной переменной
или повторное присвоение значения. Поскольку модель была сформирована программно, пользователю эти
предупреждения ничего не скажут, и он, вероятнее всего, не сможет их исправить. Поэтому разработчикам
самомодифицирующихся моделей блоков следует включать этот флажок.</p>

<p>Флажок &laquo;<span class="menu">показывать фиксированное сообщение об ошибках</span>&raquo; тесно связан с предыдущим.
По умолчанию список ошибок, обнаруженных компилятором, выдается в нижней части
<a href="um_3_6_1.htm#pic1" title="Элементы окна редактора модели">окна редактора модели</a>. Тексты сообщений об
ошибках при этом формируются самим компилятором. Если модель создается блоком программно,
сами сообщения и строки программы, к которым они относятся, вероятнее всего, ничего не скажут
пользователю. Чаще всего блоки, программно формирующие свои модели, собирают эти модели из
каких-то отдельных фрагментов, введенных пользователем, то есть, фактически, работают
специализированной &laquo;надстройкой&raquo; над модулем автокомпиляции, где пользователь
вводит не реакции на системные события, а, например, какие-либо функции, используемые блоком
для формирования своей сложной вычислительной программы. Если собранная на основе этих фрагментов
модель не компилируется, это указывает на ошибки во введенных пользователем текстах, но исправлять
их нужно не в редакторе модели, а в специализированном интерфейсе, который блок предоставляет
пользователю для ввода. В таких случаях лучше показать пользователю не сообщение об ошибке,
выданное компилятором, а другое, поясняющее, что ошибки возникли в программно сформированной
модели и предлагающее пользователю варианты действий по ее исправлению. Для вывода такого
сообщения и служит данный флажок, а само сообщение вводится в многострочное поле ввода под ним.
Если флажок включен, редактор модели не откроется, а вместо него появится окно с введенным
текстом сообщения. Дополнительный флажок &laquo;<span class="menu">показывать блок с ошибкой в модели</span>&raquo; добавляет
в это окно кнопку, нажав на которую пользователь сможет увидеть в схеме блок, при компиляции
модели которого возникли ошибки.</p>

<p>Выпадающий список
&laquo;<span class="menu"><span id="light_ref17">совместное использование модели</span></span>&raquo; управляет возможностью
подсоединения одного файла модели к нескольким блокам в одной схеме и в разных схемах.
Возможны следующие варианты:</p>

<ul>
  <li>&laquo;Разрешено любое использование&raquo; &ndash; один и тот же файл модели может
  использоваться в нескольких блоках как в одной, так и в разных схемах. Это самый распространенный
  вариант использования моделей, он установлен по умолчанию. При копировании блока с такой моделью
  пользователю выдается <a href="um_3_5.htm#pic2" title="Запрос, выдающийся пользователю при вставке блока с автокомпилируемой моделью из буфера обмена">запрос</a>, должна ли
  копия блока использовать тот же самый файл модели, или нужно сделать его копию. При стирании блока
  из схемы файл его модели всегда остается на диске.</li>

  <li>&laquo;Модель используется только этой схемой&raquo; &ndash; один и тот же файл модели
  может использоваться несколькими блоками, принадлежащими одной схеме, но не может использоваться
  в других схемах (обычно файл модели при этом находится в одной папке с файлом схемы). При копировании
  блока с этой моделью в пределах схемы пользователю выдается запрос на копирование файла модели,
  при копировании блока в другую схему файл модели копируется без запроса. При удалении последнего в
  схеме блока, использующего этот файл модели, файл модели стирается.</li>

  <li>&laquo;Модель используется единственным блоком этой схемы&raquo; &ndash; файл модели связан
  с конкретным блоком схемы (обычно файл модели при этом находится в одной папке с файлом схемы).
  При копировании этого блока автоматически создается и копия файла модели. При удалении блока
  файл модели тоже удаляется.</li>

  <li>&laquo;Модель используется всеми блоками без запросов&raquo; &ndash; один и тот же файл
  модели может использоваться в нескольких блоках как в одной, так и в разных схемах, при
  этом при копировании блока созданная копия автоматически подключается к тому же файлу модели без
  запросов пользователю.</li>
</ul>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_6_6.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_6_8.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_6_7">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
