<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.7.3.2. Создание динамических переменных</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_7">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_7_3">&sect;3.7.3. Работа с динамическими переменными</a></p>
<div class="level"><p>&sect;3.7.3.2. Создание динамических переменных</p>
</div>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_7_3_1.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_3_3.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_3_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</h3>
<h4 class="off">&sect;3.7.3. Работа с динамическими переменными</h4>
<h5>&sect;3.7.3.2. Создание динамических переменных</h5>
<p class="abstract">Описывается создание динамической переменной, к которой смогут обращаться другие блоки, и присвоение ей значений.</p>


<p>В <a href="um_3_7_3_1.htm" title="&sect;3.7.3.1. Подключение к динамической переменной">&sect;3.7.3.1</a> рассмотрена модель блока, считывающего значение из
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">динамической переменной</a>, за создание и присвоение значений которой
отвечает другой блок &ndash; стандартный блок-планировщик динамического расчета. Создадим теперь модель,
которая сама будет создавать динамическую переменную, к которой будут обращаться другие блоки.</p>

<p>Пусть в создаваемой схеме необходимо моделировать какие-либо физические процессы, зависящие от
температуры окружающей среды. Что это за процессы и как они будут моделироваться, в данном случае не важно
&ndash; общие принципы моделирования любых процессов, протекающих во времени, описаны в
<a href="um_index.htm#light_htm:um_3_7_4" title="&sect;3.7.4. Моделирование длящихся во времени процессов">&sect;3.7.4</a>. В такой схеме, вероятно, будет очень много блоков, которым для
расчета необходимо значение этой температуры. Передавать его по связям не очень удобно &ndash; таких связей
будет слишком много, и они покроют собой всю схему. Гораздо лучше сделать температуру окружающей среды динамической
переменной, к которой, при необходимости, смогут подключаться блоки &ndash; точно так же блоки, которым требуется
текущее значение системного времени, подключаются к динамической переменной &laquo;<span class="rdsvar">DynTime</span>&raquo;.</p>

<p>Дадим переменной, в которой будет храниться температура окружающей среды, имя
&laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;, и создадим блок с автокомпилируемой моделью, которая будет создавать
эту переменную и записывать в нее значение своего входа &laquo;<span class="rdsvar">t</span>&raquo;. Структура переменных этого блока будет
очень простой:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Имя</th>
    <th>Тип</th>
    <th>Вход/выход</th>
    <th>Пуск</th>
    <th>Начальное значение</th>
  </tr>

  <tr>
    <td class="vcenter">Start</td>
    <td class="center">Сигнал</td>
    <td class="center">Вход</td>
    <td class="center">&checkmark;</td>
    <td class="center">1</td>
  </tr>

  <tr>
    <td class="vcenter">Ready</td>
    <td class="center">Сигнал</td>
    <td class="center">Выход</td>
    <td></td>
    <td class="center">0</td>
  </tr>

  <tr>
    <td class="vcenter">t</td>
    <td class="center">double</td>
    <td class="center">Вход</td>
    <td class="center">&checkmark;</td>
    <td class="center">0</td>
  </tr>

</table>
</div></div>

<p>Модель блока будет запускаться при самом первом запуске расчета (у сигнала &laquo;<span class="rdsvar">Start</span>&raquo; единичное начальное
значение) и при поступлении нового значения на вход &laquo;<span class="rdsvar">t</span>&raquo; (у этого входа установлен флажок
&laquo;<span class="menu">пуск</span>&raquo;).
<a href="um_3_7_2_1.htm#light_ref6" title="Создание нового блока с моделью">Создадим</a> новый блок с автокомпилируемой моделью, зададим для него
<a href="um_3_7_2_1.htm#pic2" title="Установка запуска по сигналу в окне параметров блока">запуск по сигналу</a> и введем в редакторе модели
указанную выше структуру переменных.</p>

<p>Теперь прикажем модели создавать в подсистеме, в которой находится ее блок, вещественную динамическую переменную
с именем &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;. Можно было бы создать эту переменную сразу в корневой подсистеме,
чтобы ее видели все блоки схемы, однако, лучше использовать для этого подсистему блока-создателя &ndash;
в этом случае переменная будет видна только в этой подсистеме и всех вложенных в нее
(см. <a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">&sect;1.5</a>), и, поэтому, в схеме можно будет разместить несколько подсистем
с разными температурами, если это понадобится. Чтобы добавить в модель создание динамической переменной, следует
выполнить следующие шаги:</p>

<ul>
  <li>на вкладке &laquo;<span class="menu">переменные</span>&raquo; левой панели <a href="um_3_6_1.htm#pic1" title="Элементы окна редактора модели">редактора модели</a>
  в нижней ее части (см. <a href="um_3_6_3.htm#pic1" title="Список динамических переменных">рис.&nbsp;334</a>) нажать кнопку со знаком
  &laquo;<span class="menu">+</span>&raquo;;</li>

  <li>в открывшемся окне добавления динамической переменной
  (<a href="#pic1" title="Добавление создания переменной AmbientTemperature в блок">рис.&nbsp;390</a>)
  установить флажок &laquo;<span class="menu">произвольная переменная</span>&raquo;;</li>

  <li>в поле &laquo;<span class="menu">имя переменной в RDS</span>&raquo; выбрать вариант &laquo;<span class="menu">фиксированное имя</span>&raquo;
  и ввести имя создаваемой переменной (в данном случае
  &ndash; &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;);</li>

  <li>при переходе в поле &laquo;<span class="menu">имя переменной в программе</span>&raquo; в нем появится то же самое имя
  &ndash; его можно оставить без изменения, в программе для обращения к нашей переменной мы будем использовать это
  же имя <span class="cpp">AmbientTemperature</span>;</li>

  <li>в выпадающем списке &laquo;<span class="menu">блок-владелец</span>&raquo; выбрать &laquo;подсистема (RDS_DVPARENT)&raquo; &ndash;
  мы создаем переменную в одной подсистеме с блоком;</li>

  <li>в выпадающем списке &laquo;<span class="menu">действие</span>&raquo; выбрать &laquo;создать&raquo;;</li>

  <li>в выпадающем списке &laquo;<span class="menu">тип</span>&raquo; оставить уже находящийся там вариант &laquo;double&raquo; &ndash;
  наша переменная будет вещественной;</li>

  <li>закрыть окно добавления переменной кнопкой &laquo;<span class="menu">OK</span>&raquo;.</li>
</ul>

<div class="pic"><div class="container" id="pic1">
<img src="../img/AC_createdynvar.png" width="630" height="364" alt="Добавление создания переменной AmbientTemperature в блок" />
<p id="light_pic1">Рис.&nbsp;390. Добавление создания переменной &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; в блок</p>
</div></div>


<p>После всех этих действий в списке на нижней части вкладки &laquo;<span class="menu">переменные</span>&raquo; должна появиться переменная
&laquo;AmbientTemperature&raquo; со значком &laquo;+&raquo; в левой колонке (этот значок указывает на то, что
мы создаем переменную, см. <a href="um_3_6_3.htm" title="&sect;3.6.3. Динамические переменные блока">&sect;3.6.3</a>).</p>

<p><span id="ref1">На</span>
вкладке &laquo;<span class="menu"><a href="um_3_3.htm#pic8" title="Окно редактора пустой модели">модель</a></span>&raquo;
в правой части окна редактора введем следующий текст:</p>

<pre class="cpp">  AmbientTemperature=t;
  AmbientTemperature.NotifySubscribers();</pre>

<p>В первой строчке программы мы записываем в динамическую переменную <span class="cpp">AmbientTemperature</span>
значение входа <span class="cpp">t</span>, во второй &ndash; уведомляем все подписавшиеся на нее блоки об
изменении переменной вызовом у объекта, связанного с этой переменной в нашей программе,
функции-члена <span class="cpp">NotifySubscribers</span>. На этом следует остановиться подробнее.</p>

<p><a href="ac_RDS_BFM_DYNVARCHANGE.htm" title="&sect;3.8.3.7. Изменение динамической переменной">Событие изменения динамической переменной</a>, на которое могут
реагировать модели подключившихся к ней блоков, не возникает автоматически при присвоении этой переменной
нового значения. Динамическая переменная &ndash; это, фактически, общая область памяти, разделяемая несколькими
блоками, и запись данных в эту память не влечет за собой никаких дополнительных последствий. Блок, записавший
что-то в динамическую переменную, должен явно сообщить об этом RDS, когда запись полностью завершена.
В данном случае наша переменная имеет тип <span class="cpp">double</span>, и мы присваиваем ей значение единственным
оператором, поэтому запись начинается и кончается в одном и том же операторе. Если бы переменная была структурой
или массивом, модель должна была бы сообщить RDS об изменении ее значения только после того, как все поля
структуры или все элементы массива записаны (пример работы с динамической переменной сложного типа приведен в
<a href="um_3_7_3_3.htm" title="&sect;3.7.3.3. Динамические переменные сложных типов">&sect;3.7.3.3</a>). По этой причине уведомление RDS об изменении переменной не
встроено в операторы присваивания объектов, через которые осуществляется доступ к этим переменным из
автокомпилируемых моделей: когда запись нового значения окончена, у объекта динамической переменной нужно
вручную вызвать функцию <span class="cpp" id="light_ref1">NotifySubscribers</span>. В этот момент во всех блоках, подписавшихся
на эту переменную, возникнет событие изменения динамической переменной
<span class="cpp">RDS_BFM_DYNVARCHANGE</span>:
управление будет последовательно передано всем моделям этих блоков, которые смогут считать
новое значение и как-то его использовать.</p>

<p>Если все описанные выше операции сделаны правильно, окно редактора модели созданного блока должно выглядеть
примерно так, как на <a href="#pic2" title="Редактор модели блока задания температуры">рис.&nbsp;391</a>.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_tempsetmodel.png" width="714" height="420" alt="Редактор модели блока задания температуры" />
<p id="light_pic2">Рис.&nbsp;391. Редактор модели блока задания температуры</p>
</div></div>


<p>Теперь у нас есть блок, создающий вещественную динамическую переменную &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;
и записывающий в нее значение своего входа при его изменении. Переменная будет создаваться и удаляться вместе
с самим блоком &ndash; если просмотреть полный исходный текст программы, формируемый модулем автокомпиляции для
этой модели (пункт меню &laquo;<span class="menu">модель | показать текст С++</span>&raquo;), можно будет увидеть команды создания и
удаления переменной в конструкторе и деструкторе класса блока соответственно. Проверить работу блока мы пока
не можем &ndash; у нас нет блоков, считывающих значение переменной. Можно, конечно, воспользоваться стандартными
библиотечными блоками работы с динамическими переменными, настроив их на работу с нашей, но мы поступим иначе:
создадим еще одну модель, которая будет выдавать значение &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; на выход блока
&laquo;<span class="rdsvar">t</span>&raquo;. Это поможет проиллюстрировать подписку на нестандартную динамическую переменную &ndash; в
<a href="um_3_7_3_1.htm" title="&sect;3.7.3.1. Подключение к динамической переменной">&sect;3.7.3.1</a> мы подключались к стандартной переменной &laquo;<span class="rdsvar">DynTime</span>&raquo;,
и нам не приходилось настраивать параметры подписки.</p>

<p>Структура переменных блока, читающего динамическую переменную, будет такой:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Имя</th>
    <th>Тип</th>
    <th>Вход/выход</th>
    <th>Пуск</th>
    <th>Начальное значение</th>
  </tr>

  <tr>
    <td class="vcenter">Start</td>
    <td class="center">Сигнал</td>
    <td class="center">Вход</td>
    <td class="center">&checkmark;</td>
    <td class="center">1</td>
  </tr>

  <tr>
    <td class="vcenter">Ready</td>
    <td class="center">Сигнал</td>
    <td class="center">Выход</td>
    <td></td>
    <td class="center">0</td>
  </tr>

  <tr>
    <td class="vcenter">t</td>
    <td class="center">double</td>
    <td class="center">Выход</td>
    <td></td>
    <td class="center">0</td>
  </tr>

</table>
</div></div>

<p>Создадим новый блок с автокомпилируемой моделью, зададим для него запуск по сигналу, введем в модель
эту структуру переменных и добавим в нее подписку на переменную &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;. Для
этого следует:</p>

<ul>
  <li>на вкладке &laquo;<span class="menu">переменные</span>&raquo; левой панели редактора модели в нижней ее части нажать кнопку со
  знаком &laquo;<span class="menu">+</span>&raquo;;</li>

  <li>в открывшемся окне добавления динамической переменной
  (<a href="#pic3" title="Добавление подписки на переменную AmbientTemperature в блок">рис.&nbsp;392</a>)
  установить флажок &laquo;<span class="menu">произвольная переменная</span>&raquo;;</li>

  <li>в поле &laquo;<span class="menu">имя переменной в RDS</span>&raquo; выбрать вариант &laquo;<span class="menu">фиксированное имя</span>&raquo;
  и ввести имя переменной, на которую мы подписываемся, то есть
  &laquo;AmbientTemperature&raquo; &ndash; оно должно точно совпадать с именем, которое мы вводили в
  предыдущем блоке при создании переменной;</li>

  <li>при переходе в поле &laquo;<span class="menu">имя переменной в программе</span>&raquo; в нем появится то же самое имя &ndash;
  его можно оставить без изменения;</li>

  <li>в выпадающем списке &laquo;<span class="menu">блок-владелец</span>&raquo; выбрать &laquo;подсистема (RDS_DVPARENT)&raquo;,
  чтобы поиск переменной начинался в <a href="um_1_2.htm#ref13" title="Родительская подсистема">родительской подсистеме</a> блока;</li>

  <li>в выпадающем списке &laquo;<span class="menu">действие</span>&raquo; выбрать &laquo;найти и подписаться&raquo;, чтобы, если
  переменная будет отсутствовать в родительской подсистеме, поиск продолжился вверх по иерархии;</li>

  <li>в выпадающем списке &laquo;<span class="menu">тип</span>&raquo; оставить уже находящийся там вариант &laquo;double&raquo; &ndash;
  у нас вещественная переменная;</li>

  <li>закрыть окно добавления переменной кнопкой &laquo;<span class="menu">OK</span>&raquo;.</li>
</ul>

<div class="pic"><div class="container" id="pic3">
<img src="../img/AC_subscribedynvar.png" width="630" height="364" alt="Добавление подписки на переменную AmbientTemperature в блок" />
<p id="light_pic3">Рис.&nbsp;392. Добавление подписки на переменную &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; в блок</p>
</div></div>


<p><span id="ref2">Вкладку</span>
&laquo;<span class="menu">модель</span>&raquo; редактора мы оставим пустой &ndash; наша модель не будет ничего вычислять
в <a href="um_1_3.htm#ref4" title="Такт расчета">такте расчета</a>. Вместо этого мы <span id="light_ref2">добавим в нее реакцию на
изменение динамической переменной</span>. Для этого:</p>

<ul>
  <li>на левой панели редактора выберем вкладку события (см.
  <a href="um_3_6_4.htm#pic1" title="Список фрагментов программы модели">рис.&nbsp;336</a>), раскроем знаком
  &laquo;<span class="menu"></span>&raquo; группу &laquo;моделирование и режимы&raquo; и дважды щелкнем на ее последнем подпункте
  &laquo;изменение динамической переменной&raquo; &ndash; в правой части редактора появится новая вкладка
  &laquo;<span class="menu">изменение динамической</span>&raquo;;</li>

  <li>на этой вкладке введем следующий текст программы:</li>
</ul>

<pre class="cpp">  t=AmbientTemperature;
  Ready=1; // Выходные связи должны сработать</pre>

<p>В этой реакции мы переписываем значение из <span class="cpp">AmbientTemperature</span> в выход блока
<span class="cpp">t</span> и взводим сигнал <span class="cpp">Ready</span>, чтобы выходные связи блока сработали
в следующем такте расчета. Выход <span class="cpp">Ready</span>, разрешающий передачу данных выходов блока по
связям, автоматически взводится только перед вызовом реакции на такт расчета, поэтому в любых других реакциях,
где мы изменяем выходы блока, мы должны вручную присвоить ему единицу (после передачи данных он
автоматически сбрасывается обратно в ноль). На самом деле, в данном случае модель работала бы, даже если бы мы
не взводили <span class="cpp">Ready</span> &ndash;
<a href="um_3_6_7.htm" title="&sect;3.6.7. Параметры модели">параметры</a> созданной модели мы не меняли, поэтому при изменении любой
динамической переменной, на которую подписан блок, будет взведен сигнал запуска <span class="cpp">Start</span>, а
это, в свою очередь, приведет к тому, что в ближайшем такте расчета наша модель будет запущена (то, что мы
не вводили реакцию на такт расчета, не повлияет на запуск), а перед запуском RDS автоматически взведет
<span class="cpp">Ready</span>. Тем не менее, лучше взводить <span class="cpp">Ready</span> вручную, а флаг
&laquo;<span class="menu">автозапуск при изменении динамических переменных</span>&raquo;
(см. <a href="um_3_7_3_1.htm#pic4" title="Параметры, обеспечивающие работу модели с динамическими переменными">рис.&nbsp;388</a>) в параметрах модели при этом
можно отключить.</p>

<div class="picright"><div class="container" id="pic4">
<img src="../img/ac_ambienttemp_test.png" width="249" height="88" alt="Проверка блоков, работающих с AmbientTemperature" />
<p id="light_pic4">Рис.&nbsp;393. Проверка блоков, работающих<br />с &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;</p>
</div></div>


<p>Теперь у нас есть блок, записывающий значение температуры в динамическую переменную, и блок, считывающий его
оттуда. Для проверки этих моделей соберем схему, изображенную
на <a href="#pic4" title="Проверка блоков, работающих с AmbientTemperature">рис.&nbsp;393</a>. В этой схеме слева расположен блок с
моделью, записывающий вход в динамическую переменную &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; (к его входу
&laquo;<span class="rdsvar">t</span>&raquo; присоединено поле ввода), а справа &ndash; два одинаковых блока с моделью, подающей
значение этой переменной на выход (к их выходам &laquo;<span class="rdsvar">t</span>&raquo; присоединены числовые индикаторы).
&laquo;Размножить&raquo; созданный блок со второй моделью можно, копируя его в буфер обмена клавишами
<span class="keys">Ctrl</span>&nbsp;+&nbsp;<span class="keys">C</span> и вставляя оттуда клавишами <span class="keys">Ctrl</span>&nbsp;+&nbsp;<span class="keys">V</span>, при этом на
<a href="um_3_5.htm#pic2" title="Запрос, выдающийся пользователю при вставке блока с автокомпилируемой моделью из буфера обмена">запрос</a> модуля автокомпиляции о том, нужно ли создавать
новую модель для копии блока, следует отвечать &laquo;<span class="menu">использовать тот же файл модели</span>&raquo;. Запустив расчет и
изменяя значение в поле ввода, можно увидеть, что значения на индикаторах изменяются синхронно: информация о
температуре передается между блоками через динамическую переменную. Теперь мы можем, при желании, включать подписку
на &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; в модель любого блока, которому для расчетов нужна температура окружающей
среды &ndash; точно так же, как мы подписывались на значение времени, формируемое блоком-планировщиком.</p>

<p>Следует обратить внимание на то, что в этом примере имя переменной
&laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; жестко встроено в созданные нами модели, и, чтобы изменить его,
придется изменить сами модели и скомпилировать их заново. Модуль автокомпиляции позволяет связать имя
переменной с <a href="um_3_6_6.htm" title="&sect;3.6.6. Настроечные параметры блока">настроечным параметром</a> блока, чтобы его мог изменять пользователь.
Для этого необходимо при добавлении динамической переменной в редакторе модели в поле
&laquo;<span class="menu">имя переменной в RDS</span>&raquo; выбрать вместо варианта
&laquo;<span class="menu">фиксированное имя</span>&raquo; вариант
&laquo;<span class="menu">из настроечного параметра</span>&raquo; (см. <a href="#pic3" title="Добавление подписки на переменную AmbientTemperature в блок">рис.&nbsp;392</a>)
и ввести имя параметра, в котором будет храниться имя переменной. Подробнее этот вариант рассматривается
в <a href="um_3_7_7.htm" title="&sect;3.7.7. Задание пользователем имен динамических переменных">&sect;3.7.7</a>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_7_3_1.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_3_3.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_3_2">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
