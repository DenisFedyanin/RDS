<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.7.7. Задание пользователем имен динамических переменных</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_7">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</a></p>
<div class="level"><p>&sect;3.7.7. Задание пользователем имен динамических переменных</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_7_6.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_7a.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_7">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</h3>
<h4>&sect;3.7.7. Задание пользователем имен динамических переменных</h4>
<p class="abstract">Рассматривается способ сделать имена динамических переменных, при помощи которых блоки обмениваются информацией друг с другом без явного проведения связей, настроечными параметрами блока.</p>


<p>В <a href="um_3_7_3_2.htm" title="&sect;3.7.3.2. Создание динамических переменных">&sect;3.7.3.2</a> приведены примеры моделей блоков, передающих друг
другу вещественное значение через
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">динамическую переменную</a>: одна модель записывала в переменную данные,
другая &ndash; считывала их. Такие блоки можно использовать для того, чтобы связать между собой далеко отстоящие
друг от друга части схемы без явного проведения между ними связи: блок в одной части схемы будет записывать данные
в переменную, а блок в другой части &ndash; считывать их. Модели в приведенном примере обладают одним существенным
недостатком: имя переменной, через которую блоки передают данные, жестко встроено в сами модели. Если
потребуется организовать передачу другого вещественного значения, придется создавать пару точно таких же
моделей, в которых будет задано другое имя переменной.</p>

<p><span id="ref1">Гораздо</span> удобнее сделать имя переменной, через которую идет обмен данными, параметром блока, и
дать пользователю возможность вводить ее имя в
<a href="um_3_7_6.htm" title="&sect;3.7.6. Блоки с настраиваемыми пользователем параметрами">окне настроек</a>
этого блока. В модуле автокомпиляции есть такая
возможность: при создании динамической переменной можно вместо указания для переменной фиксированного имени
связать это имя с настроечным параметром типа
<span id="light_ref1" class="cpp"><a href="um_3_7_2_5.htm#ref1" title="Класс rdsbcppString">rdsbcppString</a></span> (специальный тип для
работы со строками, поддерживаемый модулем автокомпиляции). Если создать для этого параметра
поле ввода, пользователь сможет изменять имя динамической переменной в настройках блока.</p>

<p>Создадим две модели для обмена вещественным значением через динамическую переменную: как и в
<a href="um_3_7_3_2.htm" title="&sect;3.7.3.2. Создание динамических переменных">&sect;3.7.3.2</a>, первая модель будет записывать в эту переменную значение
своего входа, а вторая &ndash; выдавать это значение на свой выход. Однако, в этом примере мы сделаем
имя динамической переменной настраиваемым.</p>

<p>Начнем с блока-передатчика, на вход которого будет подаваться значение для записи в динамическую переменную.
Структура <a href="um_1_4.htm" title="&sect;1.4. Статические переменные блоков">статических переменных</a>
этого блока будет такой:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Имя</th>
    <th>Тип</th>
    <th>Вход/выход</th>
    <th>Пуск</th>
    <th>Начальное значение</th>
  </tr>

  
  <tr><td class="vcenter">Start</td>
<td class="center">Сигнал</td>
<td class="center">Вход</td>
<td class="center">&checkmark;</td>
<td class="center">1</td>
</tr>

  <tr><td class="vcenter">Ready</td>
<td class="center">Сигнал</td>
<td class="center">Выход</td>
<td></td>
<td class="center">0</td>
</tr>

  <tr><td class="vcenter">x</td>
<td class="center">double</td>
<td class="center">Вход</td>
<td class="center">&checkmark;</td>
<td class="center">0</td>
</tr>


</table>
</div></div>

<p>Его модель будет запускаться при самом первом запуске расчета (поэтому у сигнала &laquo;<span class="rdsvar">Start</span>&raquo;
единичное начальное значение), а также при срабатывании связи, подключенной к входу &laquo;<span class="rdsvar">x</span>&raquo;
(поэтому у этого входа установлен флажок &laquo;<span class="menu">пуск</span>&raquo;).
<a href="um_3_7_2_1.htm#light_ref6" title="Создание нового блока с моделью">Создадим</a> новый блок с автокомпилируемой моделью, зададим для него
запуск <a href="um_3_7_2_1.htm#pic2" title="Установка запуска по сигналу в окне параметров блока">по сигналу</a>, нажмем в верхней части вкладки
&laquo;<span class="menu"><a href="um_3_6_2.htm#pic1" title="Вкладка переменные дополнительной панели">переменные</a></span>&raquo; редактора модели кнопку
&laquo;<span class="menu">изменить</span>&raquo; и введем указанную выше структуру
переменных.</p>

<p><span id="ref2">Теперь</span>
<span id="light_ref2">добавим в модель объект для работы с динамической переменной</span>, имя которой
будет считываться из настроечного параметра. Для этого выполним следующие действия:</p>

<ul>
  <li>на вкладке “переменные” левой панели редактора модели в
  <a href="um_3_6_3.htm#pic1" title="Список динамических переменных">нижней ее части</a> нажмем кнопку со знаком &laquo;<span class="menu">+</span>&raquo;;</li>

  <li>в открывшемся окне добавления динамической переменной
  (<a href="#pic1" title="Добавление объекта для динамической переменной с привязкой имени к настроечному параметру">рис.&nbsp;431</a>)
  установим флажок &laquo;<span class="menu">произвольная переменная</span>&raquo;;</li>

  <li>поле &laquo;<span class="menu">имя переменной в RDS</span>&raquo; выберем вариант &laquo;<span class="menu">из настроечного параметра</span>&raquo;
  и введем в поле справа от этого варианта имя &laquo;VarName&raquo; &ndash; параметр с таким
  именем будет хранить имя нашей динамической переменной;</li>

  <li>в поле &laquo;<span class="menu">имя переменной в программе</span>&raquo; введем &laquo;DynVar&raquo; &ndash; это будет
  именем нашего объекта, которое мы будем использовать в программе;</li>

  <li>в выпадающем списке &laquo;<span class="menu">блок-владелец</span>&raquo; выберем вариант
  &laquo;подсистема (RDS_DVPARENT)&raquo; &ndash; переменная будет создаваться в
  <a href="um_1_2.htm#ref13" title="Родительская подсистема">родительской подсистеме</a> блока;</li>

  <li>в выпадающем списке &laquo;<span class="menu">действие</span>&raquo; выберем &laquo;создать&raquo;;</li>

  <li>в выпадающем списке &laquo;<span class="menu">тип</span>&raquo; оставим проставленный там по умолчанию вариант
  &laquo;double&raquo; &ndash; наша переменная будет вещественной;</li>

  <li>закроем окно добавления переменной кнопкой &laquo;<span class="menu">OK</span>&raquo;.</li>
</ul>

<div class="pic"><div class="container" id="pic1">
<img src="../img/AC_createdynvar_par.png" width="630" height="364" alt="Добавление объекта для динамической переменной с привязкой имени к настроечному параметру" />
<p id="light_pic1">Рис.&nbsp;431. Добавление объекта для динамической переменной<br />с привязкой имени к настроечному параметру</p>
</div></div>


<p>После нажатия кнопки &laquo;<span class="menu">OK</span>&raquo; появится предупреждение об отсутствии в модели настроечного
параметра с именем &laquo;<span class="rdsvar">VarName</span>&raquo; с предложением создать его, на которое следует ответить
&laquo;<span class="menu">да</span>&raquo;. После этого откроется окно добавления настроечного параметра
(см. <a href="um_3_7_6.htm#pic1" title="Добавление настроечного параметра K и поля ввода для него">рис.&nbsp;418</a>),
в котором поля &laquo;<span class="menu">имя</span>&raquo; и &laquo;<span class="menu">тип</span>&raquo; заблокированы: в поле
&laquo;<span class="menu">имя</span>&raquo; уже проставлено &laquo;VarName&raquo;, а в поле
&laquo;<span class="menu">тип</span>&raquo; &ndash; &laquo;rdsbcppString&raquo; (типом параметра для хранения имени
переменной обязательно должна быть строка). В этом окне следует установить флажок
&laquo;<span class="menu">добавить для этой переменной поле ввода</span>&raquo; и, под этим флажком, ввести в поле
&laquo;<span class="menu">заголовок</span>&raquo; текст &laquo;имя переменной&raquo;, а в поле
&laquo;<span class="menu">ширина</span>&raquo; &ndash; &laquo;100&raquo; (остальные поля ввода окна, включая пустое
значение параметра по умолчанию, оставим без изменения), а затем закрыть окно кнопкой
&laquo;<span class="menu">OK</span>&raquo;.</p>

<p>Класс <span class="cpp">rdsbcppString</span>, используемый в автокомпилируемых моделях для хранения
текстовых строк, подробно рассматривается в
<a href="um_3_7_2_5.htm" title="&sect;3.7.2.5. Модели со строками">&sect;3.7.2.5</a>, поэтому здесь мы не будем на нем останавливаться.</p>

<p>После закрытия окна добавления параметра в списке динамических переменных редактора модели появится созданный
нами объект с именем &laquo;<span class="rdsvar">DynVar</span>&raquo;
(рис. <a href="#pic2_0" title="Созданный объект в списке динамических переменных модели (а) и вкладка “настройки” после добавления параметра (б)">рис.&nbsp;432&nbsp;а</a>),
а на вкладке &laquo;<span class="menu">настройки</span>&raquo; &ndash; параметр &laquo;<span class="rdsvar">VarName</span>&raquo; и поле ввода для него
(рис. <a href="#pic2_1" title="Созданный объект в списке динамических переменных модели (а) и вкладка “настройки” после добавления параметра (б)">рис.&nbsp;432&nbsp;б</a>).
В списке динамических переменных имя &laquo;VarName&raquo; отображается без кавычек, поскольку это
не имя переменной в RDS, а имя настроечного параметра, то есть имя переменной программы модели.</p>

<div class="pic"><div class="container" id="pic2">
<div class="multi" id="pic2_0"><img src="../img/AC_dynvarlist_par.png" width="282" height="114" alt="Созданный объект в списке динамических переменных модели (а) и вкладка “настройки” после добавления параметра (б) 1" /><p id="light_pic2_0">(а)</p></div><div class="multi" id="pic2_1"><img src="../img/AC_dynvarname_setup.png" width="290" height="276" alt="Созданный объект в списке динамических переменных модели (а) и вкладка “настройки” после добавления параметра (б) 2" /><p id="light_pic2_1">(б)</p></div><p id="light_pic2">Рис.&nbsp;432. Созданный объект в списке динамических переменных модели (а)<br />и вкладка “настройки” после добавления параметра (б)</p>
</div></div>


<p>На вкладке &laquo;<span class="menu">настройки</span>&raquo; следует нажать кнопку с размерными стрелками справа от текста
&laquo;окно настройки&raquo; и ввести в поле ввода &laquo;<span class="menu">заголовок</span>&raquo; текст
&laquo;передатчик&raquo; &ndash; это будет заголовком нашего окна настройки. Так пользователю будет
понятнее, с каким именно блоком он работает.</p>

<p>Все действия по слежению за тем, чтобы имя создаваемой переменной совпадало с текстом, который пользователь
ввел в окне настроек, будут добавлены в модель автоматически. При изменении имени в настройках модель сама
будет удалять переменную с прежним именем и создавать переменную с новым. Переменная также будет создаваться сразу
после загрузки параметров блока из файла или буфера обмена. Осталось только
<span id="ref3">ввести</span>
в модель реакцию на
<a href="um_1_3.htm#ref4" title="Такт расчета">такт расчета</a>, в которой значение входа блока будет копироваться в
динамическую переменную. Раскроем раздел &laquo;<span class="menu">моделирование и режимы</span>&raquo; вкладки
&laquo;<span class="menu">события</span>&raquo; и дважды щелкнем на его подразделе &laquo;<span class="menu">модель</span>&raquo;. На открывшейся
одноименной вкладке введем текст, аналогичный тексту модели из <a href="um_3_7_3_2.htm" title="&sect;3.7.3.2. Создание динамических переменных">&sect;3.7.3.2</a>:</p>

<pre class="cpp">  DynVar=x;
  DynVar.<span id="light_ref3"><a class="hidden" href="um_3_7_3_2.htm#ref1" title="Функция NotifySubscribers класса динамической переменной">NotifySubscribers</a></span>();</pre>

<p>Займемся теперь моделью приемника, который будет читать вещественное число из
динамической переменной, имя которой задается пользователем, и выдавать его на свой выход. Структура переменных
приемника будет такой:</p>

<div class="tablecenter"><div class="tcont">
<table>
  <tr>
    <th>Имя</th>
    <th>Тип</th>
    <th>Вход/выход</th>
    <th>Пуск</th>
    <th>Начальное значение</th>
  </tr>

  
  <tr><td class="vcenter">Start</td>
<td class="center">Сигнал</td>
<td class="center">Вход</td>
<td class="center">&checkmark;</td>
<td class="center">0</td>
</tr>

  <tr><td class="vcenter">Ready</td>
<td class="center">Сигнал</td>
<td class="center">Выход</td>
<td></td>
<td class="center">0</td>
</tr>

  <tr><td class="vcenter">y</td>
<td class="center">double</td>
<td class="center">Выход</td>
<td></td>
<td class="center">0</td>
</tr>


</table>
</div></div>

<p>Создадим новый блок с автокомпилируемой моделью, зададим для него запуск по сигналу и введем в
его редакторе эту структуру переменных.
В эту модель необходимо добавить объект &laquo;<span class="rdsvar">DynVar</span>&raquo; с таким же настроечным параметром
&laquo;<span class="rdsvar">VarName</span>&raquo;, как и в предыдущей модели. Повторим все
<a href="#ref2" title="Связывание имени динамической переменной с настроечным параметром">действия</a>
по добавлению этих объектов
и созданию окна настройки, описанные выше, с двумя исключениями: при добавлении динамической переменной
(см. <a href="#pic1" title="Добавление объекта для динамической переменной с привязкой имени к настроечному параметру">рис.&nbsp;431</a>) вместо действия
&laquo;создать&raquo; выберем действие &laquo;найти и подписаться&raquo;, а в качестве заголовка
окна настройки укажем не &laquo;передатчик&raquo;, а &laquo;приемник&raquo;.</p>

<p>Введем в модель реакцию на изменение динамической переменной (раздел
&laquo;<span class="menu">моделирование и режимы</span>&raquo;, подраздел &laquo;<span class="menu">изменение динамической переменной</span>&raquo;), в
которой мы будем считывать число из этой переменной и выдавать его на выход. Текст реакции
тоже будет аналогичен реакции модели из <a href="um_3_7_3_2.htm" title="&sect;3.7.3.2. Создание динамических переменных">&sect;3.7.3.2</a>:</p>

<pre class="cpp">  y=DynVar;
  Ready=1; // Выходные связи должны сработать</pre>

<p>Обе модели готовы. Блок-передатчик будет записывать значение своего входа в динамическую переменную, а
блок-приемник будет читать ее и передавать на свой выход. Поскольку передатчик создает переменную в своей
родительской подсистеме, приемник должен размещаться либо в одной подсистеме с передатчиком, либо в подсистеме
любого уровня вложенности внутри этой подсистемы. Можно сделать так, чтобы передатчик создавал переменную в
корневой подсистеме схемы, тогда она будет видна отовсюду, и приемник можно будет размещать в любом
месте. Для этого достаточно будет заменить в параметрах динамических переменных обеих моделей
блок-владелец с &laquo;подсистема (RDS_DVPARENT)&raquo; на
&laquo;система (RDS_DVROOT)&raquo;.</p>

<div class="picright"><div class="container" id="pic3">
<img src="../img/AC_dvsetuptest.png" width="292" height="156" alt="Схема для проверки приемника и передатчика и окно настройки передатчика" />
<p id="light_pic3">Рис.&nbsp;433. Схема для проверки приемника и<br />передатчика и окно настройки передатчика</p>
</div></div>


<p>Проверим работу созданных блоков. Соберем схему, изображенную
на <a href="#pic3" title="Схема для проверки приемника и передатчика и окно настройки передатчика">рис.&nbsp;433</a>: разместим приемник и передатчик
в одной подсистеме, к входу передатчика (на рисунке он слева) присоединим поле ввода, а к
выходу приемника &ndash; индикатор. Вызовем окно настройки передатчика (пункт
&laquo;<span class="menu">настройка</span>&raquo; в
<a href="um_2_6.htm#pic3" title="Контекстное меню блока (поля ввода)">контекстном меню</a>) и введем там какое-нибудь имя переменной.
В настройках приемника введем то же самое имя. Теперь, если запустить расчет, значение на
выходе приемника будет повторять значение на входе передатчика. Имена переменных в настройках
блоков можно менять как угодно &ndash; пока имя в приемнике будет совпадать с именем в
передатчике, блоки будут связаны. Можно, при желании, добавить в схему еще несколько передатчиков,
задав им другие имена переменных, и еще несколько приемников. Каждый приемник будут получать
значение от передатчика, в настройках которого введено то же самое имя переменной.</p>

<p>Следует отметить, что сейчас по двойному щелчку на блоке-приемнике и блоке-передатчике открывается не
окно настройки, а окно редактора модели &ndash; это удобно для отладки, но неудобно для
пользователя. Как сделать так, чтобы по двойному щелчку открывалось окно настройки,
описано в <a href="um_3_7_6.htm#ref1" title="Включение настройки параметров блока по двойному щелчку">&sect;3.7.6</a>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_7_6.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_7a.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_7">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
