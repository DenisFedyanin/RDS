<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.7.10. Пометки на блоках</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_7">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</a></p>
<div class="level"><p>&sect;3.7.10. Пометки на блоках</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_7_8.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_10.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_9">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.7. Принципы создания автокомпилируемых моделей блоков</h3>
<h4>&sect;3.7.10. Пометки на блоках</h4>
<p class="abstract">Рассматривается вывод дополнительных изображений поверх блоков, которые могут привлекать внимание пользователя к ошибкам или к неправильно настроенным параметрам.</p>


<p>Независимо от того, каким именно способом задается
<a href="um_1_2.htm#light_ref21" title="Варианты внешнего вида блока">внешний вид</a>
блока в подсистеме (прямоугольником с текстом, векторной картинкой или программно), его модель
имеет возможность нарисовать что-либо дополнительное поверх этого изображения. Обычно эта возможность
используется для привлечения внимания пользователя в тех случаях, когда блок не может правильно работать
&ndash; например, из-за недопустимых значений на входе или из-за отсутствия необходимой ему
<a href="um_1_5.htm" title="&sect;1.5. Динамические переменные">динамической переменной</a>. Если внешний вид блока
рисуется программно, в таких дополнительных пометках обычно нет необходимости, поскольку их можно вывести
в основной реакции рисования блока. Именно так мы поступали в примерах из
<a href="um_3_7_5.htm" title="&sect;3.7.5. Блоки, программно рисующие свое изображение">&sect;3.7.5</a>: при отсутствии значений на входах индикатор уровня и
стрелочный индикатор рисовались красным цветом. Если же внешний вид блока задается векторной картинкой или
прямоугольником с текстом, возможности сообщения пользователю об ошибках сильно ограничены: векторная
картинка не может отражать состояние блока в
<a href="um_1_3.htm#ref1" title="Режим редактирования">режиме редактирования</a>, а внешний вид прямоугольника с текстом вообще
не может быть изменен простыми средствами ни в одном из режимов RDS.</p>

<div class="picright"><div class="container" id="pic1">
<img src="../img/AC_auxdraw_event.png" width="362" height="305" alt="Дополнительное рисование в списке событий" />
<p id="light_pic1">Рис.&nbsp;444. Дополнительное рисование<br />в списке событий</p>
</div></div>


<p>Для рисования дополнительных изображений поверх блока используется специальная реакция его модели:
&laquo;<span class="menu">дополнительное рисование блока</span>&raquo;, которая на вкладке
&laquo;<span class="menu">события</span>&raquo; находится в разделе &laquo;<span class="menu">внешний вид блока</span>&raquo; вместе с основной реакцией
рисования
(<a href="#pic1" title="Дополнительное рисование в списке событий">рис.&nbsp;444</a>).
В отличие от последней, реакция на дополнительное рисование вызывается у всех блоков, независимо
от их параметров, поэтому как-либо включать ее не нужно: достаточно ввести реакцию в модель.
В остальном эти две реакции очень похожи: в реакции на дополнительное рисование тоже можно использовать как
<a href="app_index.htm#light_htm:app_a_5_18" title="А.5.18. Графические функции">графические функции RDS</a>,
так и стандартные функции Windows API, и в нее передается указатель на структуру
<span class="cpp"><a href="RDS_BFM_DRAW.htm#ref1" title="Структура RDS_DRAWDATA">RDS_DRAWDATA</a></span>, уже знакомую нам по
<a href="um_3_7_5.htm#ref3" title="Структура RDS_DRAWDATA">&sect;3.7.5</a>.</p>

<p>В качестве примера дополнительного рисования изменим модель одного из двух блоков,
рассмотренных в <a href="um_3_7_3_2.htm" title="&sect;3.7.3.2. Создание динамических переменных">&sect;3.7.3.2</a>. Эти блоки обменивались данными
через вещественную динамическую переменную с именем &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;: блок-передатчик
создавал переменную и записывал в нее значение своего входа, а блок-приемник (их могло быть несколько)
считывал это значение и передавал его на свой выход. При отсутствии блока-передатчика в схеме
блок-приемник никак не сообщал пользователю о невозможности работы &ndash; он просто ничего не передавал на
выход. Сделаем так, чтобы, обнаружив отсутствие переменной &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;,
блок-приемник рисовал поверх себя желтую иконку с красным восклицательным знаком (так поступают многие
стандартные блоки).</p>

<p>По умолчанию в
<a href="um_3_6_7.htm" title="&sect;3.6.7. Параметры модели">параметрах</a>
всех моделей включен запрет работы при отсутствии необходимых динамических переменных
(см. <a href="um_3_7_3_1.htm#pic4" title="Параметры, обеспечивающие работу модели с динамическими переменными">рис.&nbsp;388</a>), и мы не сможем ничего нарисовать поверх
блока: если переменная &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; не будет существовать, не будет вызвана ни
одна из реакций нашей модели, в том числе и реакция дополнительного рисования. Нужно выключить этот
запрет и, поскольку теперь мы уже не можем быть уверены в существовании динамической переменной на момент
вызова модели, включить в уже имеющуюся реакцию блока необходимые проверки.</p>

<p>Чтобы разрешить модели работать независимо от наличия или отсутствия заданных на вкладке редактора
&laquo;<span class="menu">переменные</span>&raquo; динамических переменных, необходимо вызвать окно параметров модели пунктом
главного меню окна редактора &laquo;<span class="menu">модель | параметры модели</span>&raquo; и выключить флажок
&laquo;<span class="menu">не реагировать на события без динамических переменных</span>&raquo;
(<a href="#pic2" title="Выключение запрета работы модели без динамических переменных">рис.&nbsp;445</a>).</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_allownodynvars_params.png" width="472" height="365" alt="Выключение запрета работы модели без динамических переменных" />
<p id="light_pic2">Рис.&nbsp;445. Выключение запрета работы модели<br />без динамических переменных</p>
</div></div>


<p>Теперь наша модель будет запускаться и при отсутствии &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;, поэтому в
реакцию на изменение динамической переменной необходимо вставить проверку ее существования. Если этого не сделать,
при удалении этой переменной (в RDS удаление динамической переменной тоже считается ее изменением)
модель попытается обратиться к ней, что вызовет ошибку. Текст на вкладке
&laquo;<span class="menu">изменение динамической</span>&raquo; нужно исправить следующим образом (добавленные строки выделены
<span class="changes">цветом</span>):</p>

<pre class="cpp"><span class="changes">  if(!AmbientTemperature.<a class="hidden" href="um_3_7_3_1.htm#ref5" title="Проверка существования динамической переменной">Exists</a>()) // Нет переменной
    return; // Завершаем реакцию</span>
  t=AmbientTemperature;
  Ready=1; // Выходные связи должны сработать</pre>

<p>Теперь в самом начале реакции мы вызываем у объекта <span class="cpp">AmbientTemperature</span>, работающего с
одноименной динамической переменной, функцию-член
<span class="cpp"><a href="um_3_7_3_1.htm#ref5" title="Проверка существования динамической переменной">Exists</a></span>, которая возвращает
&laquo;истину&raquo;, только если переменная существует. Если эта функция вернет
&laquo;ложь&raquo;, мы немедленно прерываем выполнение реакции оператором <span class="cpp">return</span>
&ndash; теперь оператор присвоения выходу <span class="cpp">t</span> значения
<span class="cpp">AmbientTemperature</span> выполнится, только если динамическая переменная будет существовать.</p>

<p><span id="ref1">Добавим</span>
в нашу модель реакцию на дополнительное рисование: на вкладке
&laquo;<span class="menu"><a href="#pic1" title="Дополнительное рисование в списке событий">события</a></span>&raquo; левой панели окна редактора раскроем раздел
&laquo;<span class="menu">внешний вид блока</span>&raquo; и дважды щелкнем на подразделе
&laquo;<span class="menu">дополнительное рисование блока (<span id="light_ref1">RDS_BFM_DRAWADDITIONAL</span>)</span>&raquo;
&ndash; в правой части окна появится новая пустая вкладка
&laquo;<span class="menu">доп. рисование</span>&raquo;.
<span id="ref2">В</span>
<span id="ref3">ней</span>
<span id="ref4">необходимо</span>
ввести следующий текст:</p>

<pre class="cpp">
if(!AmbientTemperature.<a class="hidden" href="um_3_7_3_1.htm#ref5" title="Проверка существования динамической переменной">Exists</a>()) // Нет переменной
  { int w,h;
    if(<span id="light_ref2"><a class="hidden" href="rdsXGGetStdIconSize.htm" title="А.5.18.9. rdsXGGetStdIconSize &ndash; получить размеры стандартной иконки">rdsXGGetStdIconSize</a></span>(<span id="light_ref3">RDS_STDICON_YELCIRCEXCLAM</span>,&amp;w,&amp;h))
      <span id="light_ref4"><a class="hidden" href="rdsXGDrawStdIcon.htm" title="А.5.18.5. rdsXGDrawStdIcon &ndash; рисование стандартной иконки">rdsXGDrawStdIcon</a></span>(DrawData-&gt;Left+(DrawData-&gt;Width-w)/2,
                       DrawData-&gt;Top+(DrawData-&gt;Height-h)/2,
                       RDS_STDICON_YELCIRCEXCLAM);
  }</pre>

<p>Как и в реакции на изменение переменной, здесь мы сначала проверяем существование переменной
<span class="cpp">AmbientTemperature</span> при помощи функции-члена <span class="cpp">Exists</span>:
если переменная существует, ничего рисовать не нужно. В противном случае мы будем рисовать иконку с
красным восклицательным знаком.</p>

<p>Иконка, которую мы собираемся рисовать, входит в состав RDS, поэтому проще всего обратиться к
ней при помощи встроенных графических функций. Красному восклицательному знаку в желтом круге
соответствует константа <span class="cpp">RDS_STDICON_YELCIRCEXCLAM</span>. Чтобы нарисовать эту
иконку по центру изображения блока, нужно знать ее размеры &ndash; их мы получаем при помощи функции
<span class="cpp"><a href="rdsXGGetStdIconSize.htm" title="А.5.18.9. rdsXGGetStdIconSize &ndash; получить размеры стандартной иконки">rdsXGGetStdIconSize</a></span>, которая определяет ширину и высоту иконки, идентификатор
которой передан в первом параметре, и помещает их в целые переменные, указатели на которые переданы во
втором и третьем &ndash; в данном случае, это <span class="cpp">w</span> и <span class="cpp">h</span>.
Зная размеры иконки и координаты прямоугольника блока, которые можно взять из структуры
<span class="cpp"><a href="RDS_BFM_DRAW.htm#ref1" title="Структура RDS_DRAWDATA">RDS_DRAWDATA</a></span>, указатель на которую передается в функцию реакции в параметре
<span class="cpp">DrawData</span>, можно вывести эту иконку в центр блока вызовом функции
<span class="cpp"><a href="rdsXGDrawStdIcon.htm" title="А.5.18.5. rdsXGDrawStdIcon &ndash; рисование стандартной иконки">rdsXGDrawStdIcon</a></span>. Первые два параметра функции
&ndash; вычисляемые нами горизонтальная и вертикальная координаты верхнего левого угла выводимой иконки,
третий &ndash; идентификатор стандартной иконки <span class="cpp">RDS_STDICON_YELCIRCEXCLAM</span>.</p>

<div class="picright"><div class="container" id="pic3">
<img src="../img/AC_auxdraw_test.png" width="121" height="40" alt="Иконка поверх блока" />
<p id="light_pic3">Рис.&nbsp;446. Иконка поверх блока</p>
</div></div>


<p>Теперь, независимо от того, какой внешний вид мы дадим блоку и в каком режиме будет находится
RDS, при отсутствии в схеме динамической переменной &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo; поверх
нашего блока будет рисоваться восклицательный знак
(<a href="#pic3" title="Иконка поверх блока">рис.&nbsp;446</a>). В этом можно убедиться, удалив из
схемы блок, создающий эту переменную &ndash; переменная удалится вместе с блоком, и на нашем блоке
появится предупреждающая пометка.</p>

<p>Подобную индикацию ошибок поверх блоков имеет смысл сочетать с
<a href="um_3_7_8.htm" title="&sect;3.7.9. Всплывающие подсказки">всплывающими подсказками</a>, чтобы пользователь, наведя курсор
на блок, смог прочесть, какая именно ошибка произошла. Здесь мы не будем добавлять подсказку к блоку,
чтобы не усложнять пример.</p>

<p>Следует учитывать, что при включенном <a href="um_2_11_4.htm#ref5" title="Ускоренное рисование подсистемы">избирательном обновлении</a>
окон подсистем (см. <a href="pm_2_10_2.htm" title="&sect;2.10.2. Оптимизация рисования">&sect;2.10.2 руководства программиста</a>) блоки, внешний
вид которых задан как
<a href="um_2_9_1.htm#pic7" title="Нижняя часть вкладки внешний вид окна параметров простого блока при при изображении прямоугольником">прямоугольник с текстом</a>, автоматически не
перерисовываются, и событие дополнительного рисования у них тоже не возникает. В рассмотренном примере
это не важно, поскольку динамическая переменная &laquo;<span class="rdsvar">AmbientTemperature</span>&raquo;, на
отсутствие которой блок указывает рисованием иконки, может появиться или исчезнуть только в
режиме редактирования из-за вставки или удаления создающего ее блока, а в режиме
редактирования избирательное обновление не используется, и все блоки всегда перерисовываются.
Когда RDS перейдет в <a href="um_1_3.htm#ref3" title="Режим расчета">режим расчета</a>, где используется избирательное
обновление, иконка уже будет нарисована и ее состояние не изменится.</p>

<p>Если же дополнительные пометки на блоке могут появляться и исчезать в режиме расчета,
для нормальной работы избирательного обновления модель блока должна сообщать RDS
об изменении этих пометок вызовом функции <span class="cpp"><span id="light_ref5"><a href="rdsForceBlockRedraw.htm" title="А.5.6.15. rdsForceBlockRedraw &ndash; перерисовать изображение блока">rdsForceBlockRedraw</a></span></span>.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_7_8.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_7_10.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_7_9">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
