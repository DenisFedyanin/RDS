<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ru" xml:lang="ru">
<head>
  <link rel="stylesheet" type="text/css" href="../css/main.css" />
  <link rel="stylesheet" type="text/css" href="../css/cpp.css" />
  <meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
  <script type="text/javascript" src="script.js"></script>
  <title>&sect;3.9.3. Подключение универсальных модулей и настройка путей</title>
</head><body onload="DocLoad()">
<div class="pageheader"><span class="off"><b>Текущий раздел:</b></span>
<div class="int"><p id="top"><a href="../index.htm">Описания RDS</a></p>
<div class="level"><p><a href="um_index.htm">Описание пользователя</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3">Глава 3. Использование стандартных модулей автокомпиляции</a></p>
<div class="level"><p><a href="um_index.htm#light_htm:um_3_9">&sect;3.9. Настройки стандартного модуля автокомпиляции</a></p>
<div class="level"><p>&sect;3.9.3. Подключение универсальных модулей и настройка путей</p>
</div>
</div>
</div>
</div>
</div></div>
<div class="topnav"><span class="off"><b>Навигация:</b></span>
<div class="left">
<span class="button"><a href="um_3_9_2.htm" title="Предыдущий параграф" id="pgup">&lt;&lt;</a></span>
<span class="button"><a href="um_3_9_4.htm" title="Следующий параграф" id="pgdn">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_9_3">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>

<div class="text">
<h1 class="off">Описание пользователя</h1>
<h2 class="off">Глава 3. Использование стандартных модулей автокомпиляции</h2>
<h3 class="off">&sect;3.9. Настройки стандартного модуля автокомпиляции</h3>
<h4>&sect;3.9.3. Подключение универсальных модулей и настройка путей</h4>
<p class="abstract">Рассматривается подключение универсальных модулей автокомпиляции, которые можно настроить на работу с компилятором C++, не поддерживаемым стандартными модулями. Описывается задание путей к различным файлам и папкам этого компилятора.</p>


<p><a href="um_index.htm#light_htm:um_3_2" title="&sect;3.2. Установка стандартных модулей автокомпиляции и компиляторов">Стандартные модули автокомпиляции</a>, входящие в состав RDS,
поддерживают только небольшое количество стандартных компиляторов языка C++ &ndash; полный список этих
компиляторов приведен в <a href="um_3_1.htm#light_ref2" title="Список стандартных модулей автокомпиляции">&sect;3.1</a>. Среди этих компиляторов есть
бесплатные, установка которых достаточно проста, поэтому для создания автокомпилируемых моделей
<span class="emph">настоятельно рекомендуется</span> выбрать какой-либо компилятор из приведенного
списка. Тем не менее, если разработчик моделей привык использовать для своих целей какой-либо другой компилятор,
существует возможность настроить один из универсальных модулей автокомпиляции на работу с ним. Для этого
компилятор должен удовлетворять следующим условиям:</p>

<ul>
  <li>он должен поддерживать язык C++ &ndash; в автокомпилируемых моделях используются классы, поэтому
  компилятор &laquo;чистого&raquo; C не подходит;</li>

  <li>он должен управляться из командной строки;</li>

  <li>он должен иметь возможность создавать динамически подключаемые библиотеки (DLL) Windows.</li>
</ul>

<p>Настройка модуля автокомпиляции на работу с компилятором, поддержка которого не включена в модуль &ndash;
достаточно сложная задача. Пользователь, выполняющий эту настройку, должен очень хорошо представлять себе,
как при помощи выбранного им компилятора создать DLL с функцией, отвечающую всем
требованиям, предъявляемым к функции модели блока RDS. Эти требования подробно описаны в
<a href="pm_index.htm#light_htm:pm_2" title="Глава 2. Создание моделей блоков">главе 2 руководства программиста</a>. Лучше всего перед тем, как приступать к настройке
модуля, создать при помощи выбранного компилятора несколько моделей блоков полностью вручную, и добиться того,
чтобы эти модели успешно работали в схемах. После этого станет ясно, как именно нужно вызывать компилятор для
создания DLL и какие описания нужно автоматически добавлять в исходный текст программы. Выяснив это, нужно
будет записать необходимые параметры в настройки модуля. Для успешной настройки модуля на работу с
компилятором нужно знать:</p>

<ul>
  <li>как называется исполняемый файл компилятора и какими должны быть его параметры командной строки для
  создания DLL из файла исходного текста на языке C++;</li>

  <li>если редактор связей (linker) &ndash; отдельная программа, как называется его исполняемый файл и
  какими должны быть параметры его командной строки;</li>

  <li><span id="ref1">как</span>
  в результате компиляции на основе имени функции формируется экспортированное
  имя для библиотеки (экспортированное имя может не совпадать с именем функции в программе, такое
  изменение имени называется &laquo;<span id="light_ref1">name mangling</span>&raquo;);</li>

  <li>как должна называться главная функция DLL;</li>

  <li>как устроены текстовые сообщения об ошибках компилятора и редактора связей (нужно будет указать модулю,
  как разбирать их для предъявления пользователю);</li>

  <li>какие стандартные файлы заголовков нужно автоматически включать в исходный текст для правильной
  компиляции модели;</li>

  <li>нужны ли для работы компилятора специфические переменные окружения.</li>
</ul>

<p class="noindent">Пользователям, которые не смогли ответить на один из приведенных выше вопросов,
или которым не понятен смысл этих вопросов и использованные в них термины, лучше не пытаться настраивать модули
автокомпиляции самостоятельно.</p>

<p><span id="ref2">Для</span>
<span id="ref3">работы</span>
<span id="ref4">с</span>
исходно не поддерживаемым компилятором можно изменить настройки какого-либо модуля,
предназначенного для другого компилятора, но лучше всего использовать для этого один из универсальных модулей с
именами
&laquo;<span id="light_ref2">UserComp1</span>&raquo;,
&laquo;<span id="light_ref3">UserComp2</span>&raquo; и
&laquo;<span id="light_ref4">UserComp3</span>&raquo;.
Рассмотрим регистрацию такого модуля в RDS для подключения к гипотетическому компилятору.</p>

<p>Подключение универсального модуля автокомпиляции, как и подключение специализированных
(см. <a href="um_index.htm#light_htm:um_3_2" title="&sect;3.2. Установка стандартных модулей автокомпиляции и компиляторов">&sect;3.2</a>), выполняется в окне со списком модулей.
Откроем это окно, для чего выберем в главном меню RDS пункт
&laquo;<span class="menu">сервис | автокомпиляция</span>&raquo;. Нажмем в правой части этого окна кнопку со знаком
&laquo;<span class="menu">+</span>&raquo; &ndash; в конце списка модулей появится новый, пока не настроенный, модуль. В нижней части
окна заполним для него поля ввода следующим образом
(<a href="#pic1" title="Модуль для нестандартного компилятора в списке модулей">рис.&nbsp;488</a>):</p>

<div class="pic"><div class="container" id="pic1">
<img src="../img/AC_usercomp1.png" width="533" height="370" alt="Модуль для нестандартного компилятора в списке модулей" />
<p id="light_pic1">Рис.&nbsp;488. Модуль для нестандартного компилятора в списке модулей</p>
</div></div>


<ul>
  <li>&laquo;<span class="menu">библиотека</span>&raquo; &ndash; &laquo;$DLL$\Common.dll&raquo;;</li>
  <li>&laquo;<span class="menu">функция</span>&raquo; &ndash; &laquo;UserComp1&raquo; (важно соблюдать регистр символов);</li>
  <li>&laquo;<span class="menu">название</span>&raquo; &ndash; &laquo;нестандартный компилятор&raquo; (или любое другое название по желанию).</li>
</ul>

<p class="noindent">Таким образом, мы зарегистрировали в RDS модуль, обслуживаемый функцией
&laquo;<span class="rdsvar">UserComp1</span>&raquo;, находящейся в библиотеке &laquo;<span class="file">Common.dll</span>&raquo; в
<a href="um_2_18.htm#light_ref11" title="Папка стандартных DLL">стандартной папке DLL</a> RDS, и дали ему название
&laquo;нестандартный компилятор&raquo; (под этим названием этот модуль будет видеть пользователь, оно
не влияет на работу модуля). Теперь нужно указать для него пути к файлам компилятора и прочие параметры,
которые на момент настройки мы должны уже знать.</p>

<p>Дважды щелкнем мышью на названии нового модуля в списке &ndash; откроется окно его настройки с выбранной
вкладкой &laquo;<span class="menu">компилятор</span>&raquo;
(<a href="#pic2" title="Настройка путей для компилятора">рис.&nbsp;489</a>).
Здесь мы должны ввести все необходимые для работы пути.</p>

<div class="pic"><div class="container" id="pic2">
<img src="../img/AC_usercomp1_paths.png" width="645" height="394" alt="Настройка путей для компилятора" />
<p id="light_pic2">Рис.&nbsp;489. Настройка путей для компилятора</p>
</div></div>


<p>Допустим, что наш гипотетический нестандартный компилятор установлен в папку
&laquo;<span class="file">C:\UserComp</span>&raquo;, внутри которой в папке &laquo;<span class="file">bin</span>&raquo; находятся исполняемые
файлы компилятора и редактора связей &laquo;<span class="file">comp.exe</span>&raquo; и
&laquo;<span class="file">link.exe</span>&raquo; соответственно. Кроме того, в папке установки компилятора находится папка
&laquo;<span class="file">Include</span>&raquo; с файлами заголовков, необходимыми для компиляции программ, и папка
&laquo;<span class="file">Lib</span>&raquo; с библиотеками, необходимыми для сборки исполняемых файлов. Есть множество способов
записать эти пути в поля ввода вкладки &laquo;<span class="menu">компилятор</span>&raquo; &ndash; сначала рассмотрим самый удобный
из них.</p>

<p>Первое поле вкладки называется &laquo;<span class="menu">папка установки</span>&raquo;, в него вводится путь к папке, внутри
которой размещаются все прочие файлы и папки, имеющие отношение к компилятору. В нашем случае это
&laquo;<span class="file">C:\UserComp</span>&raquo;. Путь к папке можно либо ввести с клавиатуры, либо, нажав кнопку
&laquo;<span class="menu">обзор</span>&raquo;, выбрать ее в стандартном диалоге выбора папки Windows. Это относится и ко
всем остальным полям ввода на вкладке: любой путь можно как ввести вручную, так и выбрать в диалоге,
открывающемся по кнопке &laquo;<span class="menu">обзор</span>&raquo;.</p>

<p><span id="ref5">Теперь</span>, когда мы ввели путь к общей папке установки компилятора, во всех остальных путях вместо этого пути
можно указывать символическое обозначение &laquo;<span id="light_ref5">$BC$</span>&raquo; (оно
указано в названии поля). Так мы и поступим. Исполняемый файл гипотетического компилятора
&laquo;<span class="file">comp.exe</span>&raquo; размещается в папке &laquo;<span class="file">bin</span>&raquo; внутри папки установки, значит,
используя символическое обозначение, в качестве пути к нему можно ввести
&laquo;$BC$\bin\comp.exe&raquo;. Если вместо ручного ввода пути мы воспользуемся кнопкой
&laquo;<span class="menu">обзор</span>&raquo; для выбора исполняемого файла компилятора, символическое обозначение
&laquo;$BC$&raquo; будет подставлено в путь автоматически. Точно так же, с помощью символического обозначения,
можно указать пути к исполняемому файлу редактора связей
(&laquo;$BC$\bin\link.exe&raquo;), папке заголовков
(&laquo;$BC$\Include&raquo;) и папке библиотек
(&laquo;$BC$\Lib&raquo;).</p>

<p>Использование символического обозначения &laquo;$BC$&raquo; при указании всех путей удобно тем, что,
если нам потребуется перенести компилятор в другую папку, в настройках модуля автокомпиляции нужно
будет изменить только одно поле &ndash; поле папки установки компилятора. Поскольку все остальные пути
указаны относительно этой папки, а внутренняя структура папок компилятора при переносе не изменилась,
эти пути останутся верными. Тем не менее, никто не заставляет пользователя использовать это символическое
обозначение. При желании, можно вообще не указывать папку установки, а все пути ко всем файлам и папкам указать
полностью
(<a href="#pic3" title="Альтернативный способ задания путей для компилятора">рис.&nbsp;490</a>):
в качестве пути к исполняемому файлу компилятора ввести
&laquo;C:\UserComp\bin\comp.exe&raquo;, к папке библиотек &ndash;
&laquo;C:\UserComp\Lib&raquo; и т.п. Следует только учитывать, что при переносе компилятора в этом случае
потребуется исправлять все введенные пути вручную.</p>

<div class="pic"><div class="container" id="pic3">
<img src="../img/AC_usercomp1_pathsalt.png" width="645" height="394" alt="Альтернативный способ задания путей для компилятора" />
<p id="light_pic3">Рис.&nbsp;490. Альтернативный способ задания путей для компилятора</p>
</div></div>


<p><span id="ref6">Пути</span>
<span id="ref7">на</span> вкладке &laquo;<span class="menu">компилятор</span>&raquo; вводятся только для того, чтобы при настройке всех остальных
параметров можно было не указывать каждый путь вручную, а использовать символические обозначения этих путей.
Для справки эти обозначения выводятся в названии каждого поля: вместо веденного пути к компилятору можно везде
указывать &laquo;<span id="light_ref6">$COMP$</span>&raquo;, вместо пути к папке заголовков &ndash;
&laquo;<span id="light_ref7">$INCLUDE$</span>&raquo; и т.п. Полный список доступных символических
обозначений приведен в <a href="um_3_9_4.htm" title="&sect;3.9.4. Символические имена параметров в настройках">&sect;3.9.4</a> (кроме обозначений для введенных в
настройках путей туда входят и обозначения для некоторых стандартных папок RDS). Использовать такие
символические обозначения гораздо удобнее, чем указывать везде все пути полностью. Кроме того, как было
показано выше, обозначения позволяют проще переносить компилятор из папки в папку. При желании можно вообще
не вводить на вкладке &laquo;<span class="menu">компилятор</span>&raquo; никаких путей, а все пути прописывать вручную при задании
параметров вызова компилятора (о них речь пойдет
в <a href="um_3_9_6.htm" title="&sect;3.9.6. Запуск компилятора и редактора связей">&sect;3.9.6</a>). Однако, это крайне неудобно.</p>

<p><span id="ref8">На</span>
<span id="ref9">вкладке</span>
&laquo;<span class="menu">компилятор</span>&raquo; можно также указать два дополнительных пути, которые
в большинстве компиляторов не используются. Во-первых, можно указать путь к произвольной дополнительной папке:
он вводится в поле
&laquo;папка $AUXDIR$&raquo;. В этой папке могут находится какие-либо дополнительные объекты,
необходимые компилятору для работы. В параметрах можно ссылаться на нее при помощи символического обозначения
&laquo;<span id="light_ref8">$AUXDIR$</span>&raquo;. Например, для работы с
<span id="light_ref9">Microsoft Visual C++ 2003</span>
(см. <a href="um_3_2_5.htm" title="&sect;3.2.5. Установка и подключение компилятора Microsoft Visual C++ 2003 toolkit">&sect;3.2.5</a>) необходимо дополнительно установить
Microsoft Platform SDK в отдельную папку &ndash; можно указать путь
к этой папке в этом дополнительном поле.</p>

<p><span id="ref10">Во-вторых</span>,
модуль автокомпиляции позволяет запустить произвольную программу после того, как компилятор завершит работу.
Путь к исполняемому файлу этой программы можно указать в самом последнем поле ввода с заголовком
&laquo;<span class="menu">доп. программа</span>&raquo;. В параметрах на этот путь можно ссылаться при помощи символического обозначения
&laquo;<span id="light_ref10">$POSTEXE$</span>&raquo;. Такая дополнительная программа может быть
создана разработчиком самостоятельно и использоваться для того, чтобы, например, скопировать готовый файл
DLL в нужную папку, если компилятор, по каким-то причинам, не способен сразу записать ее туда.</p>

<p>Для успешной компиляции модели нестандартным компилятором одного задания путей на вкладке
&laquo;<span class="menu">компилятор</span>&raquo; недостаточно. Необходимо указать модулю автокомпиляции, с какими параметрами запускать
исполняемые файлы, пути к которым указаны на вкладке, как формировать текст программы из введенных пользователем
фрагментов и т.п. Все эти параметры задаются в отдельном окне, открывающемся при нажатии на кнопку
&laquo;<span class="menu">дополнительно</span>&raquo; в нижней части вкладки. Это окно описано
в <a href="um_3_9_5.htm" title="&sect;3.9.5. Настройка переменных окружения компилятора">&sect;3.9.5</a> и далее.</p>

</div>
<p style="clear:both; min-height:1em; padding:0px; margin: 0px;"></p><hr class="off" /><div class="bottomnav">
<div class="left">
<span class="button"><a href="um_3_9_2.htm" title="Предыдущий параграф" id="pgup_f">&lt;&lt;</a></span>
<span class="button"><a href="um_3_9_4.htm" title="Следующий параграф" id="pgdn_f">&gt;&gt;</a></span>
<span class="divider"></span>
<span class="button"><a href="um_index.htm#light_htm:um_3_9_3">Оглавление</a></span>
<span class="button"><a href="alpha.htm">Указатель</a></span>
</div>
</div>
</body>
</html>
