$BC55MODEL
Автоматически генерируемая модель полуавтокомпилируемого блока поиска равновесия
$NOSHARE
$VARS
  signal name "_Start" in run default 1
  signal name "_Ready" out default 0
  int name "_Stage" out default 0
  short name "Aux_in" in hide default 0
  short name "Aux_out" out hide default 0
  signal name "Start_cmd" in menu run default 0
  signal name "Restart_cmd" in menu run default 0
  matrix logical oneindex name "Enabled_in" in run default "[ ] 0"
  signal name "_Enabled_chg" default 1
  logical name "_results_ok" default 0
  logical name "_enabled_res" default 1
  logical name "Complete_out" out default 0
  logical name "Error_out" out default 0
  signal name "Finished_out" out default 0
  signal name "Started_out" out default 0
  double name "Time_out" out default "?"
  matrix char oneindex name "Func_in" in menu default "[ ] 0"
  matrix char oneindex name "Func_out" default "[ ] 0"
  int name "Iteration_out" out default 0
  int name "Steps_out" out menu default 0
  logical name "_TabFuncReady" default 0
//@L57_REM ------------ Сигнал для входных вещественных ------------
  signal name "_allinval_dchg" default 1
//@L57_REM --------------- Сигналы для входных матриц --------------
//@L57CMD_FOREACH_BEGIN_0 IVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "M"
  signal name "_/*VAR0*/_mchg" default 1
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ----------------- Служебные входы блока -----------------
//@L57CMD_FOREACH_BEGIN_0 SERVIN
  double name "/*VAR0*/" in menu run default "/*VAL0*/"
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ------------------ Обычные входы блока ------------------
//@L57CMD_FOREACH_BEGIN_0 IVAR
  //@L57CMD_SET start "matrix double"
  //@L57CMD_SET end "[ ] ?"
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ EQ "V"
    //@L57CMD_SET start "double"
    //@L57CMD_SET end "/*VAL0*/"
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ EQ "A"
    //@L57CMD_SET start "matrix double oneindex"
  //@L57CMD_IF_END_1
  /*@start*/ name "/*VAR0*/" in menu run default "/*@end*/"
//@L57CMD_FOREACH_END_0
//@L57CMD_CLEAR end
//@L57CMD_CLEAR start
//@L57_REM ---------------------------------------------------------
//@L57_REM ---------------- Выходы найденных значений --------------
//@L57CMD_FOREACH_BEGIN_0 NVAR
  double name "/*VAR0*/_res" out menu default "?"
  double name "/*VAR0*/_res_c" out default "?"
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ------------- Значения всех табличных функций -----------
//@L57CMD_FOREACH_BEGIN_0 OUTMATR
  matrix double name "/*VAR0*/" out menu default "[ ] ?"
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ------------------ Служебные параметры ------------------
//@L57CMD_FOREACH_BEGIN_0 SVAR
  //@L57CMD_SET start "matrix double"
  //@L57CMD_SET end "[ ] ?"
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ EQ "V"
    //@L57CMD_SET start "double"
    //@L57CMD_SET end "/*VAL0*/"
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ EQ "A"
    //@L57CMD_SET start "matrix double oneindex"
  //@L57CMD_IF_END_1
  /*@start*/ name "/*VAR0*/" default "/*@end*/"
//@L57CMD_FOREACH_END_0
//@L57CMD_CLEAR end
//@L57CMD_CLEAR start
//@L57_REM ---------------------------------------------------------

$AUTO
  "Enabled_in","_Enabled_chg"
  "Complete_out","_results_ok"
  "Error_out","_results_ok"
  "Steps_out","_results_ok"
  "Finished_out","_results_ok"
//@L57_REM ---------------- Вещественные входы блока ---------------
//@L57CMD_FOREACH_BEGIN_0 IVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "D"
    "/*VAR0*/","_allinval_dchg"
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ----------------- Служебные входы блока -----------------
//@L57CMD_FOREACH_BEGIN_0 SERVIN
    "/*VAR0*/","_allinval_dchg"
//@L57CMD_FOREACH_END_0
//@L57_REM --------------- Сигналы для входных матриц --------------
//@L57CMD_FOREACH_BEGIN_0 IVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "M"
  "/*VAR0*/","_/*VAR0*/_mchg"
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ---------------- Выходы найденных значений --------------
//@L57CMD_FOREACH_BEGIN_0 NVAR
  "/*VAR0*/_res","_results_ok"
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------
//@L57_REM ------------- Значения всех табличных функций -----------
//@L57CMD_FOREACH_BEGIN_0 OUTMATR
  "/*VAR0*/","_TabFuncReady"
//@L57CMD_FOREACH_END_0
//@L57_REM ---------------------------------------------------------

$PARAM
  BOOL name "noautostart_setup" default "FALSE"
  int name "tactcount_setup" default "1000"
  int name "DeltaCycles_setup" default "10"
  double name "Delta_setup" default "0.0001"
  int name "MaxIterations_setup" default "1000"
  int name "TableFillMode_setup" default "0"
  int name "TableInitCount_setup" default "100"
  int name "TableFillStep_setup" default "1"
  int name "TR_params" default "0"
  rdsbcppString name "TR_text" default "" notranslate
$REGFUN
  name "IPU.L57.UserFuncTransfer.IsFuncSource" id "L57_BlkFunc_IsFuncSource"
  name "IPU.L57.UserFuncTransfer.AcceptFunction" id "L57_BlkFunc_AcceptFunc" param "L57_AcceptFunc_Param*"
  name "IPU.L57.UserFuncTransfer.AcceptParameter" id "L57_BlkFunc_AcceptParam" param "L57_AcceptParam_Param*"
  name "IPU.L57.UserFuncTransfer.IsParameterTransferredWithFunc" id "L57_BlkFunc_CheckTransParam" param "L57_CheckParamConn_Param*"
  name "IPU.L57.UserFuncTransfer.CheckParamTransfer" id "L57_BlkFunc_CheckTransParam2" param "L57_CheckTranser_Param*"
$LINKS
  manual "$RDSINCLUDE$\RdsL57Mk2\L57Mk2Stab.cpp"
  manual "$RDSINCLUDE$\RdsL57Mk2\L57Mk2Basic.cpp"
  manual "$RDSINCLUDE$\RdsL57Mk2\L57Mk2Basic.h"
  manual "$RDSINCLUDE$\RdsL57Mk2\L57Mk2Bits.cpp"
$CUSTOMERR
|В одном из описаний функций обнаружена ошибка: видимо, текст функции написан не в синтаксисе языка C. Пожалуйста, проверьте все описания в настройках блока или откройте редактор модели и изучите ошибки, выданные компилятором.
$ENDDECL
$GLOBAL
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */



































// Версия модели (в норме должна соответствовать L57_LATESTMODELVERSION)
#define L57_MODELVERSION 12

//@L57CMD_IF_BEGIN_1 /*@@HELPUI*/ NE ""
// Файл и тема справки
#define L57_HELPUIFILE /*@@HELPUI*/
#define L57_HELPTOPIC /*@@HELPTOPIC*/
//@L57CMD_IF_END_1

// Заголовки функций для индикации
//@L57_ALLFUNCTITLES "#define L57_TITLES " "" " \"

// Число вычисляемых функций
#define L57_FUNCCOUNT /*@@FUNC*/
// Число генерируемых табличных функций
#define L57_GENTABLESCOUNT /*@@OUTMATR*/
// Число потенциальных переменных связи
#define L57_CONNVARSCOUNT /*@@NVAR*/

#define L57MS_GLOBALS
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_GLOBALS

//@L57_REM ------ Переменные для служебного класса
//@L57CMD_SET double "double"
//@L57CMD_SET matrix "L57_RdsDoubleMatrix"
//@L57CMD_SET array "L57_RdsDoubleArray"
//@L57CMD_SET func1arg "L57_OneArgFunc"
//@L57CMD_SET func2arg "L57_TwoArgFunc"
// Служебные классы для вычисления значений функций
//@L57CMD_FOREACH_BEGIN_0 FUNC
//@L57_FUNCCLASS /*NUM0*/ L57_Calc_/*NUM0*/
//@L57CMD_FOREACH_END_0

$MODEL
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_MODEL
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_MODEL

$SETUP
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_SETUP
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_SETUP

$CLASSDEF
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_CLASS
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_CLASS

//@L57_REM ----- Фиксированные значения начальных значений -------
  // Фиксированные значения границ и шагов
//@L57CMD_FOREACH_BEGIN_0 NVAR
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ NE 1
    double /*VAR0*/_0;
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
  // Инициализация фиксированных значений
  void L57_Init_Fixed_Data(void);
//@L57_REM ---------------------------------------------------------

//@L57_REM --- Указатели на параметры передачи входов-параметров ---
  // Объекты для передачи входов-параметров функции
  L57_FuncTransfer _Transfer;
//@L57CMD_FOREACH_BEGIN_0 IANDSVAR
  L57_FuncTransferParameter */*VAR0*/_trans;
//@L57CMD_FOREACH_END_0
//@L57CMD_FOREACH_BEGIN_0 SERVIN
  L57_FuncTransferParameter */*VAR0*/_trans;
//@L57CMD_FOREACH_END_0
  // Сброс
  void L57_Reset_Trans_Data(void)
  {
    //@L57CMD_FOREACH_BEGIN_0 IANDSVAR
    /*VAR0*/_trans=NULL;
    //@L57CMD_FOREACH_END_0
    //@L57CMD_FOREACH_BEGIN_0 SERVIN
    /*VAR0*/_trans=NULL;
    //@L57CMD_FOREACH_END_0
  };
  // Создание всех параметров передачи
  void L57_Create_Trans_Data(void);
//@L57_REM ---------------------------------------------------------

//@L57_REM ------- Хранилища входов для проверки изменения --------
  // Хранилища для проверки изменения переменных
//@L57CMD_FOREACH_BEGIN_0 IANDSVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "M"
  L57_DblMatrTempStorage /*VAR0*/_old;
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "D"
  double /*VAR0*/_old;
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
//@L57CMD_FOREACH_BEGIN_0 SERVIN
  double /*VAR0*/_old;
//@L57CMD_FOREACH_END_0
  // Инициализация хранилищ значений
  void L57_Init_Old_Data(void)
  {
  //@L57CMD_FOREACH_BEGIN_0 IANDSVAR FOR RDSTYPE D
    /*VAR0*/_old=rdsbcppHugeDouble;
  //@L57CMD_FOREACH_END_0
  //@L57CMD_FOREACH_BEGIN_0 SERVIN
    /*VAR0*/_old=rdsbcppHugeDouble;
  //@L57CMD_FOREACH_END_0
  //@L57CMD_FOREACH_BEGIN_0 IANDSVAR FOR RDSTYPE M
    /*VAR0*/_old.Clear();
  //@L57CMD_FOREACH_END_0
  };
//@L57_REM ---------------------------------------------------------

  // Вычислители функций
//@L57CMD_FOREACH_BEGIN_0 FUNC
  L57_Calc_/*NUM0*/ _Calculator/*NUM0*/;
//@L57CMD_FOREACH_END_0


$CLASSEXT
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_AFTERCLASS
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_AFTERCLASS

#if L57_FUNCCOUNT!=0
// Экспорт текстов функций для взаимодействия с другими блоками по связям
char *rdsbcppBlockClass::_FuncExportTexts[L57_FUNCCOUNT]={
//@L57CMD_FOREACH_BEGIN_0 FUNC
  //@L57CMD_IF_BEGIN_1 /*LAST0*/ EQ 1
    //@L57_FUNCEXPORT /*NUM0*/ "/* /*NUM0*/ */ " "};"
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*LAST0*/ NE 1
    //@L57_FUNCEXPORT /*NUM0*/ "/* /*NUM0*/ */ " ","
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
#endif

// Инициализация фиксированных значений
void rdsbcppBlockClass::L57_Init_Fixed_Data(void)
{
//@L57CMD_FOREACH_BEGIN_0 NVAR
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ NE 1
    /*VAR0*/_0=/*CVAL0*/;
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0

}
//-----------------------------------------------------------------------

// Создание всех параметров передачи
void rdsbcppBlockClass::L57_Create_Trans_Data(void)
{
  //@L57CMD_COUNT IANDSVAR _cnt_1
  // Стационарных входов: /*@_cnt_1*/
  //@L57CMD_COUNT NVAR _cnt_2
  // Максимизируемых параметров: /*@_cnt_2*/
  _Transfer.ClearParameters();
  _Transfer.EnlargeParameters(/*@_cnt_1*/+/*@_cnt_2*/);
  //@L57CMD_CLEAR _cnt_1
  //@L57CMD_CLEAR _cnt_2

//@L57CMD_FOREACH_BEGIN_0 IANDSVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "M"
  /*VAR0*/_trans=_Transfer.AddParameterRds("/*VAR0*/",L57_VARSUFFIX_NONE,TRUE,/*VAR0*/.Num(),&/*VAR0*/);
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "D"
  /*VAR0*/_trans=_Transfer.AddParameterRds("/*VAR0*/",L57_VARSUFFIX_NONE,FALSE,/*VAR0*/.Num(),&/*VAR0*/);
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0

//@L57CMD_FOREACH_BEGIN_0 NVAR
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ EQ 1
  /*VAR0*/_0_trans=_Transfer.AddParameterRds("/*VAR0*/",L57_VARSUFFIX_0,FALSE,/*VAR0*/_0.Num(),&/*VAR0*/_0);
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ NE 1
  _Transfer.AddParameter("/*VAR0*/",L57_VARSUFFIX_0,FALSE,-1,&/*VAR0*/_0);
  //@L57CMD_IF_END_1

//@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------

// Проверка изменения переменных
// *pChgSignalOn взводится при наличии сигнала изменения (независимо от фактического изменения)
BOOL rdsbcppBlockClass::L57InputsChange(BOOL _force,BOOL *pChgSignalOn)
{ BOOL _changes=FALSE;

  //@L57CMD_COUNT IVAR _cnt_1 FOR RDSTYPE D
  // Стационарных вещественных входов: /*@_cnt_1*/
  //@L57CMD_COUNT SERVIN _cnt_2
  // Служебных вещественных входов: /*@_cnt_2*/
  //@L57CMD_CALC _cnt_3 /*@_cnt_1*/ + /*@_cnt_2*/
  // Итого вещественных: /*@_cnt_3*/

  // Вещественные входы
  if(_allinval_dchg!=0 || _force)
    { _allinval_dchg=0;
      _changes=_force;
      if(pChgSignalOn) *pChgSignalOn=TRUE;

      //@L57CMD_FOREACH_BEGIN_0 IVAR FOR RDSTYPE D
      if(/*VAR0*/_old!=/*VAR0*/)
        { _changes=TRUE;
          _Transfer.TransferParameter(rdsbcppBlockData->Block,/*VAR0*/_trans,_Transfer.DestBlocks,TRUE);
        }
      //@L57CMD_FOREACH_END_0

      //@L57CMD_FOREACH_BEGIN_0 SERVIN
      if(/*VAR0*/_old!=/*VAR0*/)
        { _changes=TRUE;
          _Transfer.TransferParameter(rdsbcppBlockData->Block,/*VAR0*/_trans,_Transfer.DestBlocks,TRUE);
        }
      //@L57CMD_FOREACH_END_0

    //@L57CMD_IF_BEGIN_9 /*@_cnt_3*/ NE 0
      if(_changes)
        { // Запоминание изменившихся
          //@L57CMD_FOREACH_BEGIN_0 IVAR FOR RDSTYPE D
          /*VAR0*/_old=/*VAR0*/;
          //@L57CMD_FOREACH_END_0
          //@L57CMD_FOREACH_BEGIN_0 SERVIN
          /*VAR0*/_old=/*VAR0*/;
          //@L57CMD_FOREACH_END_0
        }
    //@L57CMD_IF_END_9
    }

  // Матричные входы (матрицы, массивы, функции)
  //@L57CMD_FOREACH_BEGIN_0 IVAR FOR RDSTYPE M
  if(/*VAR0*/_old.Check(_/*VAR0*/_mchg.GetPtr(),&/*VAR0*/,_changes,_force))
    _Transfer.TransferParameter(rdsbcppBlockData->Block,/*VAR0*/_trans,_Transfer.DestBlocks,TRUE);
  if(pChgSignalOn!=NULL && _/*VAR0*/_mchg!=0)
    *pChgSignalOn=TRUE;
  //@L57CMD_FOREACH_END_0

  return _changes;
  //@L57CMD_CLEAR _cnt_1
  //@L57CMD_CLEAR _cnt_2
  //@L57CMD_CLEAR _cnt_3
}
//-----------------------------------------------------------------------

// Занесение стационарных переменных и начальных значений в вычислители функции
void rdsbcppBlockClass::L57InputsToCalc(void)
{
  // Входы блока
//@L57CMD_FOREACH_BEGIN_0 IANDSVAR
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ EQ "V"
  //@L57CMD_FOREACH_BEGIN_2 FUNC
  _Calculator/*NUM2*/./*VAR0*/=
  //@L57CMD_FOREACH_END_2
    /*VAR0*/;
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*TYPE0*/ NE "V"
  //@L57CMD_FOREACH_BEGIN_2 FUNC
  _Calculator/*NUM2*/./*VAR0*/.Setup(/*VAR0*/);
  //@L57CMD_FOREACH_END_2
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0

  // Начальные значения
//@L57CMD_FOREACH_BEGIN_0 NVAR
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ EQ 1
    //@L57CMD_FOREACH_BEGIN_2 FUNC
  _Calculator/*NUM2*/./*VAR0*/=
    //@L57CMD_FOREACH_END_2
    /*VAR0*/_0;
  //@L57CMD_IF_END_1
  //@L57CMD_IF_BEGIN_1 /*VALVAR0*/ NE 1
    //@L57CMD_FOREACH_BEGIN_2 FUNC
  _Calculator/*NUM2*/./*VAR0*/=
    //@L57CMD_FOREACH_END_2
    /*VAR0*/_0; // /*CVAL0*/;
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------

// Итерация (возвращает TRUE, если максимальное изменение с прошлой итерации не больше заданного в настройках)
BOOL rdsbcppBlockClass::L57CalcIteration(BOOL &HugeValError)
{
  HugeValError=FALSE;
#if L57_CONNVARSCOUNT!=0
  // Значения прошлой итерации
  //@L57CMD_FOREACH_BEGIN_2 FUNC
    //@L57CMD_IF_BEGIN_3 /*CONNVAR2*/ NE ""
  double _old_/*NUM2*/=_Calculator/*NUM2*/./*CONNVAR2*/;
    //@L57CMD_IF_END_3
  //@L57CMD_FOREACH_END_2

  // Значения для следующей итерации
  //@L57CMD_FOREACH_BEGIN_2 FUNC
  double _v_/*NUM2*/=_Calculator/*NUM2*/._Calc_main();
  //@L57CMD_FOREACH_END_2

  // Копирование переменных связи
  //@L57CMD_FOREACH_BEGIN_0 FUNC
    //@L57CMD_IF_BEGIN_3 /*CONNVAR0*/ NE ""
    //@L57CMD_FOREACH_BEGIN_1 FUNC
  _Calculator/*NUM1*/./*CONNVAR0*/=
    //@L57CMD_FOREACH_END_1
    _v_/*NUM0*/;
    //@L57CMD_IF_END_3
  //@L57CMD_FOREACH_END_0

  // Определение нахождения в трубке погрешности
  //@L57CMD_FOREACH_BEGIN_2 FUNC
  //@L57CMD_IF_BEGIN_3 /*CONNVAR2*/ NE ""
  if(_old_/*NUM2*/==rdsbcppHugeDouble || _v_/*NUM2*/==rdsbcppHugeDouble)
    { HugeValError=TRUE;
      return FALSE;
    }
  if(fabs(_old_/*NUM2*/-_v_/*NUM2*/)>Delta_setup)
    return FALSE;
  //@L57CMD_IF_END_3
  //@L57CMD_FOREACH_END_2

  // Все изменения в пределах Delta_setup
#endif
  return TRUE;
}
//-----------------------------------------------------------------------

// Копирование текущих значений вычислителей в основные выходы
void rdsbcppBlockClass::L57DataToMainOuts(void)
{
#if L57_CONNVARSCOUNT!=0
  //@L57CMD_FOREACH_BEGIN_2 FUNC
    //@L57CMD_IF_BEGIN_3 /*CONNVAR2*/ NE ""
  /*CONNVAR2*/_res=_Calculator/*NUM2*/./*CONNVAR2*/;
    //@L57CMD_IF_END_3
  //@L57CMD_FOREACH_END_2
#endif
}
//-----------------------------------------------------------------------

// Копирование текущих значений вычислителей во вспомогательные выходы
void rdsbcppBlockClass::L57DataToAuxOuts(void)
{
#if L57_CONNVARSCOUNT!=0
  //@L57CMD_FOREACH_BEGIN_2 FUNC
    //@L57CMD_IF_BEGIN_3 /*CONNVAR2*/ NE ""
  /*CONNVAR2*/_res_c=_Calculator/*NUM2*/./*CONNVAR2*/;
    //@L57CMD_IF_END_3
  //@L57CMD_FOREACH_END_2
#endif
}
//-----------------------------------------------------------------------

// Очистка всех выходов
void rdsbcppBlockClass::L57ClearOuts(void)
{
  //@L57CMD_FOREACH_BEGIN_0 NVAR
  /*VAR0*/_res=/*VAR0*/_res_c=rdsbcppHugeDouble;
  //@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------

// Генерируемая функция - переотвести все таблицы
BOOL rdsbcppBlockClass::L57ReallocAllTables_gen(int newrowcount)
{
  //@L57CMD_FOREACH_BEGIN_0 OUTMATR
  if(!/*VAR0*/.Resize(newrowcount,/*NRES0*/+1,TRUE))
    return FALSE;
  //@L57CMD_FOREACH_END_0
  return TRUE;
}
//-----------------------------------------------------------------------

// Генерируемая функция - упаковать все таблицы
BOOL rdsbcppBlockClass::L57PackAllTables_gen(void)
{
  //@L57CMD_FOREACH_BEGIN_0 OUTMATR
  if(!L57PackTable(&/*VAR0*/))
    return FALSE;
  //@L57CMD_FOREACH_END_0
  return TRUE;
}
//-----------------------------------------------------------------------

// Генерируемая функция - очистить все таблицы
void rdsbcppBlockClass::L57ClearTabFunc_gen(void)
{
  //@L57CMD_FOREACH_BEGIN_0 OUTMATR
  /*VAR0*/.Resize(0,0);
  //@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------

#if L57_GENTABLESCOUNT!=0
// Генерируемая функция - записать строку итерации во все таблицы
void rdsbcppBlockClass::L57WriteIteraionRow_gen(int iteration,int rowindex)
{
  double *base;
  // У всех вычислителей переменные одинаковые, поэтому все можно брать
  // из самого первого
  //@L57CMD_FOREACH_BEGIN_0 OUTMATR
  base=/*VAR0*/[rowindex];
  base[0]=iteration;
  //@L57CMD_FOREACH_BEGIN_1 OUTMATR_RESULT /*NUM0*/
  base[/*NUM1*/+1]=_Calculator0./*RESULT1*/;
  //@L57CMD_FOREACH_END_1
  //@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------

// Генерируемая функция - отрезать у всех таблиц "хвост" с ошибками и сортировать, если надо
void rdsbcppBlockClass::L57FinalizeTables_gen(BOOL sort)
{
  //@L57CMD_FOREACH_BEGIN_0 OUTMATR
  L57FinalizeTable(&/*VAR0*/,sort);
  //@L57CMD_FOREACH_END_0
}
//-----------------------------------------------------------------------
#endif


$INIT
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_INIT
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_INIT

  // Начальные значения проверочных переменных
//@L57CMD_FOREACH_BEGIN_0 IANDSVAR
  //@L57CMD_IF_BEGIN_1 /*RDSTYPE0*/ EQ "D"
  /*VAR0*/_old=rdsbcppHugeDouble;
  //@L57CMD_IF_END_1
//@L57CMD_FOREACH_END_0
//@L57CMD_FOREACH_BEGIN_0 SERVIN
  /*VAR0*/_old=rdsbcppHugeDouble;
//@L57CMD_FOREACH_END_0


$START
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_START
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_START

$CALCMODE
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_CALCMODE
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_CALCMODE

$LOADTEXT
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_LOADPARAMS
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_LOADPARAMS
$SAVETEXT
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_SAVEPARAMS
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_SAVEPARAMS
$OTHER
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_OTHER
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_OTHER
$FUNC "IPU.L57.UserFuncTransfer.IsFuncSource"
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

Result=1;
$FUNC "IPU.L57.UserFuncTransfer.AcceptFunction"
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_ACCEPTFUNC
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_ACCEPTFUNC

$FUNC "IPU.L57.UserFuncTransfer.AcceptParameter"
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_ACCEPTPARAM
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_ACCEPTPARAM

$FUNC "IPU.L57.UserFuncTransfer.IsParameterTransferredWithFunc"
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_CHECKTRANSFUNC
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_CHECKTRANSFUNC


$FUNC "IPU.L57.UserFuncTransfer.CheckParamTransfer"
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_CHECKTRANSFUNC2
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_CHECKTRANSFUNC2


$RESET
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_RESET
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_RESET


$VARCHECK
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_VARCHECK
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_VARCHECK


$EDITMODE
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_EDITMODE
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_EDITMODE

$DRAWADD
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_DRAWADDITIONAL
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_DRAWADDITIONAL

$HINT
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_HINT
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_HINT

$POPUP
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_POPUP
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_POPUP

$MENU
/* ВНИМАНИЕ! Эта модель не предназначена для редактирования пользователем,
ее текст генерируется автоматически */

#define L57MS_MENUSELECT
#include <RdsL57Mk2/L57Mk2Stab.cpp>
#undef L57MS_MENUSELECT


$HIDDEN
{W
 TПеременные и функции
 FN+F+T+E+C+I-
 ?Blocks\L57.ui,L57Mk2Stab
}
{N
 TПеременные, связывающие функции
 C"NИмя","XНачальное значение"
 E+"XНачальное значение:"
}
{I
 TВходы блока
 C"NИмя","TТип","VЗначение"
}
{T
 A $iter "Номер итерации"
 {X
  NТраектория поиска
  Ttrack
  A$iter
  F#1N+F-A-
 }
 C"NИмя","AАргумент","RРезультаты"
 FI+
}
$OPTIONS
  tabs $GLOBAL
  window pos 18 164 size 1214 837 hdiv 337 vdiv 356 fdiv 334 hidevar
  svc 0 90 1 73 2 90 3 90
  dvc 0 90 1 90 2 90
  fnc 0 90 1 90 2 90
  pvc 0 90 1 90 2 100
  dvcheck 1
  indexcheck 0
  ignorewarnings 1
  customerrmsg 1 showblock
  autoreadonlyeditor 1
  genvartypemacros 0
  matherr 1
  catchall 0
  dvstart 1
  searchlinks auto deep
